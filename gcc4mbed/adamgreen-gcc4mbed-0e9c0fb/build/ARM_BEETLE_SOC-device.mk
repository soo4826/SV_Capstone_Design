# This target makefile was automatically generated by mbedUpdater.

# Device for which the code should be built.
MBED_DEVICE        := ARM_BEETLE_SOC

# Can skip parsing of this makefile if user hasn't requested this device.
ifeq "$(findstring $(MBED_DEVICE),$(DEVICES))" "$(MBED_DEVICE)"

# Compiler flags which are specifc to this device.
TARGETS_FOR_DEVICE := $(BUILD_TYPE_TARGET) TARGET_UVISOR_UNSUPPORTED TARGET_ARM_BEETLE_SOC TARGET_ARM_IOTSS_Target TARGET_ARM_SSG TARGET_BEETLE TARGET_CORTEX_M TARGET_LIKE_CORTEX_M3 TARGET_M3
FEATURES_FOR_DEVICE := FEATURE_BLE
PERIPHERALS_FOR_DEVICE := DEVICE_ANALOGIN DEVICE_CLCD DEVICE_I2C DEVICE_INTERRUPTIN DEVICE_LOWPOWERTIMER DEVICE_PORTIN DEVICE_PORTINOUT DEVICE_PORTOUT DEVICE_SERIAL DEVICE_SLEEP DEVICE_SPI
GCC_DEFINES := $(patsubst %,-D%,$(TARGETS_FOR_DEVICE))
GCC_DEFINES += $(patsubst %,-D%=1,$(FEATURES_FOR_DEVICE))
GCC_DEFINES += $(patsubst %,-D%=1,$(PERIPHERALS_FOR_DEVICE))
GCC_DEFINES += -D__CORTEX_M3 -DARM_MATH_CM3 -D__CMSIS_RTOS -D__MBED_CMSIS_RTOS_CM
GCC_DEFINES += -DASIC -DCMSDK_BEETLE -DCONFIG_ALLOW_DEEP_SLEEP=FALSE -DCONFIG_ALLOW_SETTING_WRITE=TRUE -DCONFIG_HOST_REV=0x20 -DHCI_VS_TARGET -DNO_LEDS -DWSF_ASSERT_ENABLED=FALSE -DWSF_MAX_HANDLERS=20 -DWSF_MS_PER_TICK=20 -DWSF_PRINTF_MAX_LEN=128 -DWSF_TOKEN_ENABLED=FALSE -DWSF_TRACE_ENABLED=TRUE

C_FLAGS   := -mcpu=cortex-m3 -mthumb
ASM_FLAGS := -mcpu=cortex-m3 -mthumb
LD_FLAGS  := -mcpu=cortex-m3 -mthumb

# Extra platform specific object files to link into file binary.
DEVICE_OBJECTS := 

# Version of MRI library to use for this device.
DEVICE_MRI_LIB := 

# Determine all mbed source folders which are a match for this device so that it only needs to be done once.
DEVICE_MBED_DIRS := $(call filter_dirs,$(RAW_MBED_DIRS),$(TARGETS_FOR_DEVICE),$(FEATURES_FOR_DEVICE))

# Linker script to be used.  Indicates what should be placed where in memory.
ARM_BEETLE_SOC_LSCRIPT  ?= $(call find_target_linkscript,$(DEVICE_MBED_DIRS))
LSCRIPT := $(ARM_BEETLE_SOC_LSCRIPT)

include $(GCC4MBED_DIR)/build/device-common.mk

else
# Have an empty rule for this device since it isn't supported.
.PHONY: $(MBED_DEVICE)

ifeq "$(OS)" "Windows_NT"
$(MBED_DEVICE):
	@REM >nul
else
$(MBED_DEVICE):
	@#
endif
endif # ifeq "$(findstring $(MBED_DEVICE),$(DEVICES))"...
