
NUCLEO_F401RE/rosserial_mbed_ADC.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08004aed


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 80 01 20 ed 4a 00 08 21 4b 00 08 21 4b 00 08     ... .J..!K..!K..
 8000010:	21 4b 00 08 21 4b 00 08 21 4b 00 08 00 00 00 00     !K..!K..!K......
	...
 800002c:	b1 49 00 08 21 4b 00 08 00 00 00 00 57 4a 00 08     .I..!K......WJ..
 800003c:	b7 4a 00 08 21 4b 00 08 21 4b 00 08 21 4b 00 08     .J..!K..!K..!K..
 800004c:	21 4b 00 08 21 4b 00 08 21 4b 00 08 21 4b 00 08     !K..!K..!K..!K..
 800005c:	21 4b 00 08 21 4b 00 08 21 4b 00 08 21 4b 00 08     !K..!K..!K..!K..
 800006c:	21 4b 00 08 21 4b 00 08 21 4b 00 08 21 4b 00 08     !K..!K..!K..!K..
 800007c:	21 4b 00 08 21 4b 00 08 21 4b 00 08 21 4b 00 08     !K..!K..!K..!K..
	...
 800009c:	21 4b 00 08 21 4b 00 08 21 4b 00 08 21 4b 00 08     !K..!K..!K..!K..
 80000ac:	21 4b 00 08 21 4b 00 08 21 4b 00 08 21 4b 00 08     !K..!K..!K..!K..
 80000bc:	21 4b 00 08 21 4b 00 08 21 4b 00 08 21 4b 00 08     !K..!K..!K..!K..
 80000cc:	21 4b 00 08 21 4b 00 08 21 4b 00 08 21 4b 00 08     !K..!K..!K..!K..
 80000dc:	00 00 00 00 21 4b 00 08 21 4b 00 08 21 4b 00 08     ....!K..!K..!K..
	...
 80000fc:	21 4b 00 08 00 00 00 00 21 4b 00 08 21 4b 00 08     !K......!K..!K..
 800010c:	21 4b 00 08 00 00 00 00 00 00 00 00 00 00 00 00     !K..............
 800011c:	00 00 00 00 21 4b 00 08 21 4b 00 08 21 4b 00 08     ....!K..!K..!K..
 800012c:	21 4b 00 08 21 4b 00 08 00 00 00 00 00 00 00 00     !K..!K..........
	...
 800014c:	21 4b 00 08 21 4b 00 08 21 4b 00 08 21 4b 00 08     !K..!K..!K..!K..
 800015c:	21 4b 00 08 21 4b 00 08 21 4b 00 08 00 00 00 00     !K..!K..!K......
	...
 8000184:	21 4b 00 08 00 00 00 00 00 00 00 00 21 4b 00 08     !K..........!K..

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000240 	.word	0x20000240
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08005fc8 	.word	0x08005fc8

080001b8 <frame_dummy>:
 80001b8:	4b0c      	ldr	r3, [pc, #48]	; (80001ec <frame_dummy+0x34>)
 80001ba:	b143      	cbz	r3, 80001ce <frame_dummy+0x16>
 80001bc:	480c      	ldr	r0, [pc, #48]	; (80001f0 <frame_dummy+0x38>)
 80001be:	490d      	ldr	r1, [pc, #52]	; (80001f4 <frame_dummy+0x3c>)
 80001c0:	b510      	push	{r4, lr}
 80001c2:	f3af 8000 	nop.w
 80001c6:	480c      	ldr	r0, [pc, #48]	; (80001f8 <frame_dummy+0x40>)
 80001c8:	6803      	ldr	r3, [r0, #0]
 80001ca:	b923      	cbnz	r3, 80001d6 <frame_dummy+0x1e>
 80001cc:	bd10      	pop	{r4, pc}
 80001ce:	480a      	ldr	r0, [pc, #40]	; (80001f8 <frame_dummy+0x40>)
 80001d0:	6803      	ldr	r3, [r0, #0]
 80001d2:	b933      	cbnz	r3, 80001e2 <frame_dummy+0x2a>
 80001d4:	4770      	bx	lr
 80001d6:	4b09      	ldr	r3, [pc, #36]	; (80001fc <frame_dummy+0x44>)
 80001d8:	2b00      	cmp	r3, #0
 80001da:	d0f7      	beq.n	80001cc <frame_dummy+0x14>
 80001dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001e0:	4718      	bx	r3
 80001e2:	4b06      	ldr	r3, [pc, #24]	; (80001fc <frame_dummy+0x44>)
 80001e4:	2b00      	cmp	r3, #0
 80001e6:	d0f5      	beq.n	80001d4 <frame_dummy+0x1c>
 80001e8:	4718      	bx	r3
 80001ea:	bf00      	nop
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08005fc8 	.word	0x08005fc8
 80001f4:	20000244 	.word	0x20000244
 80001f8:	20000238 	.word	0x20000238
 80001fc:	00000000 	.word	0x00000000

08000200 <mbed::AnalogIn::~AnalogIn()>:
 8000200:	4770      	bx	lr

08000202 <std_msgs::Time::serialize(unsigned char*) const>:
 8000202:	6843      	ldr	r3, [r0, #4]
 8000204:	700b      	strb	r3, [r1, #0]
 8000206:	6843      	ldr	r3, [r0, #4]
 8000208:	0a1b      	lsrs	r3, r3, #8
 800020a:	704b      	strb	r3, [r1, #1]
 800020c:	88c3      	ldrh	r3, [r0, #6]
 800020e:	708b      	strb	r3, [r1, #2]
 8000210:	79c3      	ldrb	r3, [r0, #7]
 8000212:	70cb      	strb	r3, [r1, #3]
 8000214:	6883      	ldr	r3, [r0, #8]
 8000216:	710b      	strb	r3, [r1, #4]
 8000218:	6883      	ldr	r3, [r0, #8]
 800021a:	0a1b      	lsrs	r3, r3, #8
 800021c:	714b      	strb	r3, [r1, #5]
 800021e:	8943      	ldrh	r3, [r0, #10]
 8000220:	718b      	strb	r3, [r1, #6]
 8000222:	7ac3      	ldrb	r3, [r0, #11]
 8000224:	71cb      	strb	r3, [r1, #7]
 8000226:	2008      	movs	r0, #8
 8000228:	4770      	bx	lr

0800022a <std_msgs::Time::deserialize(unsigned char*)>:
 800022a:	780b      	ldrb	r3, [r1, #0]
 800022c:	6043      	str	r3, [r0, #4]
 800022e:	784a      	ldrb	r2, [r1, #1]
 8000230:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000234:	6043      	str	r3, [r0, #4]
 8000236:	788a      	ldrb	r2, [r1, #2]
 8000238:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800023c:	6043      	str	r3, [r0, #4]
 800023e:	78ca      	ldrb	r2, [r1, #3]
 8000240:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000244:	6043      	str	r3, [r0, #4]
 8000246:	790b      	ldrb	r3, [r1, #4]
 8000248:	6083      	str	r3, [r0, #8]
 800024a:	794a      	ldrb	r2, [r1, #5]
 800024c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000250:	6083      	str	r3, [r0, #8]
 8000252:	798a      	ldrb	r2, [r1, #6]
 8000254:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000258:	6083      	str	r3, [r0, #8]
 800025a:	79ca      	ldrb	r2, [r1, #7]
 800025c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000260:	6083      	str	r3, [r0, #8]
 8000262:	2008      	movs	r0, #8
 8000264:	4770      	bx	lr
	...

08000268 <std_msgs::Time::getType()>:
 8000268:	4800      	ldr	r0, [pc, #0]	; (800026c <std_msgs::Time::getType()+0x4>)
 800026a:	4770      	bx	lr
 800026c:	08005acd 	.word	0x08005acd

08000270 <std_msgs::Time::getMD5()>:
 8000270:	4800      	ldr	r0, [pc, #0]	; (8000274 <std_msgs::Time::getMD5()+0x4>)
 8000272:	4770      	bx	lr
 8000274:	08005aac 	.word	0x08005aac

08000278 <rosserial_msgs::TopicInfo::getType()>:
 8000278:	4800      	ldr	r0, [pc, #0]	; (800027c <rosserial_msgs::TopicInfo::getType()+0x4>)
 800027a:	4770      	bx	lr
 800027c:	08005a3e 	.word	0x08005a3e

08000280 <rosserial_msgs::TopicInfo::getMD5()>:
 8000280:	4800      	ldr	r0, [pc, #0]	; (8000284 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 8000282:	4770      	bx	lr
 8000284:	08005a1d 	.word	0x08005a1d

08000288 <rosserial_msgs::Log::getType()>:
 8000288:	4800      	ldr	r0, [pc, #0]	; (800028c <rosserial_msgs::Log::getType()+0x4>)
 800028a:	4770      	bx	lr
 800028c:	08005a0a 	.word	0x08005a0a

08000290 <rosserial_msgs::Log::getMD5()>:
 8000290:	4800      	ldr	r0, [pc, #0]	; (8000294 <rosserial_msgs::Log::getMD5()+0x4>)
 8000292:	4770      	bx	lr
 8000294:	080059e9 	.word	0x080059e9

08000298 <rosserial_msgs::RequestParamResponse::getType()>:
 8000298:	4800      	ldr	r0, [pc, #0]	; (800029c <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 800029a:	4770      	bx	lr
 800029c:	08005a57 	.word	0x08005a57

080002a0 <rosserial_msgs::RequestParamResponse::getMD5()>:
 80002a0:	4800      	ldr	r0, [pc, #0]	; (80002a4 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 80002a2:	4770      	bx	lr
 80002a4:	080059c8 	.word	0x080059c8

080002a8 <rosserial_mbed::Adc::serialize(unsigned char*) const>:
 80002a8:	8883      	ldrh	r3, [r0, #4]
 80002aa:	700b      	strb	r3, [r1, #0]
 80002ac:	8883      	ldrh	r3, [r0, #4]
 80002ae:	0a1b      	lsrs	r3, r3, #8
 80002b0:	704b      	strb	r3, [r1, #1]
 80002b2:	88c3      	ldrh	r3, [r0, #6]
 80002b4:	708b      	strb	r3, [r1, #2]
 80002b6:	88c3      	ldrh	r3, [r0, #6]
 80002b8:	0a1b      	lsrs	r3, r3, #8
 80002ba:	70cb      	strb	r3, [r1, #3]
 80002bc:	8903      	ldrh	r3, [r0, #8]
 80002be:	710b      	strb	r3, [r1, #4]
 80002c0:	8903      	ldrh	r3, [r0, #8]
 80002c2:	0a1b      	lsrs	r3, r3, #8
 80002c4:	714b      	strb	r3, [r1, #5]
 80002c6:	8943      	ldrh	r3, [r0, #10]
 80002c8:	718b      	strb	r3, [r1, #6]
 80002ca:	8943      	ldrh	r3, [r0, #10]
 80002cc:	0a1b      	lsrs	r3, r3, #8
 80002ce:	71cb      	strb	r3, [r1, #7]
 80002d0:	8983      	ldrh	r3, [r0, #12]
 80002d2:	720b      	strb	r3, [r1, #8]
 80002d4:	8983      	ldrh	r3, [r0, #12]
 80002d6:	0a1b      	lsrs	r3, r3, #8
 80002d8:	724b      	strb	r3, [r1, #9]
 80002da:	89c3      	ldrh	r3, [r0, #14]
 80002dc:	728b      	strb	r3, [r1, #10]
 80002de:	89c3      	ldrh	r3, [r0, #14]
 80002e0:	0a1b      	lsrs	r3, r3, #8
 80002e2:	72cb      	strb	r3, [r1, #11]
 80002e4:	200c      	movs	r0, #12
 80002e6:	4770      	bx	lr

080002e8 <rosserial_mbed::Adc::deserialize(unsigned char*)>:
 80002e8:	780b      	ldrb	r3, [r1, #0]
 80002ea:	8083      	strh	r3, [r0, #4]
 80002ec:	784a      	ldrb	r2, [r1, #1]
 80002ee:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80002f2:	8083      	strh	r3, [r0, #4]
 80002f4:	788b      	ldrb	r3, [r1, #2]
 80002f6:	80c3      	strh	r3, [r0, #6]
 80002f8:	78ca      	ldrb	r2, [r1, #3]
 80002fa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80002fe:	80c3      	strh	r3, [r0, #6]
 8000300:	790b      	ldrb	r3, [r1, #4]
 8000302:	8103      	strh	r3, [r0, #8]
 8000304:	794a      	ldrb	r2, [r1, #5]
 8000306:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800030a:	8103      	strh	r3, [r0, #8]
 800030c:	798b      	ldrb	r3, [r1, #6]
 800030e:	8143      	strh	r3, [r0, #10]
 8000310:	79ca      	ldrb	r2, [r1, #7]
 8000312:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000316:	8143      	strh	r3, [r0, #10]
 8000318:	7a0b      	ldrb	r3, [r1, #8]
 800031a:	8183      	strh	r3, [r0, #12]
 800031c:	7a4a      	ldrb	r2, [r1, #9]
 800031e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000322:	8183      	strh	r3, [r0, #12]
 8000324:	7a8b      	ldrb	r3, [r1, #10]
 8000326:	81c3      	strh	r3, [r0, #14]
 8000328:	7aca      	ldrb	r2, [r1, #11]
 800032a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800032e:	81c3      	strh	r3, [r0, #14]
 8000330:	200c      	movs	r0, #12
 8000332:	4770      	bx	lr

08000334 <rosserial_mbed::Adc::getType()>:
 8000334:	4800      	ldr	r0, [pc, #0]	; (8000338 <rosserial_mbed::Adc::getType()+0x4>)
 8000336:	4770      	bx	lr
 8000338:	080059b5 	.word	0x080059b5

0800033c <rosserial_mbed::Adc::getMD5()>:
 800033c:	4800      	ldr	r0, [pc, #0]	; (8000340 <rosserial_mbed::Adc::getMD5()+0x4>)
 800033e:	4770      	bx	lr
 8000340:	08005994 	.word	0x08005994

08000344 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 8000344:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 8000348:	4770      	bx	lr

0800034a <mbed::AnalogIn::~AnalogIn()>:
 800034a:	b510      	push	{r4, lr}
 800034c:	4604      	mov	r4, r0
 800034e:	f004 fad7 	bl	8004900 <operator delete(void*)>
 8000352:	4620      	mov	r0, r4
 8000354:	bd10      	pop	{r4, pc}
	...

08000358 <mbed::AnalogIn::lock()>:
 8000358:	b570      	push	{r4, r5, r6, lr}
 800035a:	4c0d      	ldr	r4, [pc, #52]	; (8000390 <mbed::AnalogIn::lock()+0x38>)
 800035c:	6823      	ldr	r3, [r4, #0]
 800035e:	b983      	cbnz	r3, 8000382 <mbed::AnalogIn::lock()+0x2a>
 8000360:	4d0c      	ldr	r5, [pc, #48]	; (8000394 <mbed::AnalogIn::lock()+0x3c>)
 8000362:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8000366:	6828      	ldr	r0, [r5, #0]
 8000368:	f001 fef4 	bl	8002154 <osMutexWait>
 800036c:	6823      	ldr	r3, [r4, #0]
 800036e:	b92b      	cbnz	r3, 800037c <mbed::AnalogIn::lock()+0x24>
 8000370:	1d26      	adds	r6, r4, #4
 8000372:	d002      	beq.n	800037a <mbed::AnalogIn::lock()+0x22>
 8000374:	4630      	mov	r0, r6
 8000376:	f004 facf 	bl	8004918 <rtos::Mutex::Mutex()>
 800037a:	6026      	str	r6, [r4, #0]
 800037c:	6828      	ldr	r0, [r5, #0]
 800037e:	f001 ff11 	bl	80021a4 <osMutexRelease>
 8000382:	6820      	ldr	r0, [r4, #0]
 8000384:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8000388:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800038c:	f004 badc 	b.w	8004948 <rtos::Mutex::lock(unsigned long)>
 8000390:	20001b64 	.word	0x20001b64
 8000394:	20001fcc 	.word	0x20001fcc

08000398 <mbed::AnalogIn::unlock()>:
 8000398:	b570      	push	{r4, r5, r6, lr}
 800039a:	4c0c      	ldr	r4, [pc, #48]	; (80003cc <mbed::AnalogIn::unlock()+0x34>)
 800039c:	6823      	ldr	r3, [r4, #0]
 800039e:	b983      	cbnz	r3, 80003c2 <mbed::AnalogIn::unlock()+0x2a>
 80003a0:	4d0b      	ldr	r5, [pc, #44]	; (80003d0 <mbed::AnalogIn::unlock()+0x38>)
 80003a2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80003a6:	6828      	ldr	r0, [r5, #0]
 80003a8:	f001 fed4 	bl	8002154 <osMutexWait>
 80003ac:	6823      	ldr	r3, [r4, #0]
 80003ae:	b92b      	cbnz	r3, 80003bc <mbed::AnalogIn::unlock()+0x24>
 80003b0:	1d26      	adds	r6, r4, #4
 80003b2:	d002      	beq.n	80003ba <mbed::AnalogIn::unlock()+0x22>
 80003b4:	4630      	mov	r0, r6
 80003b6:	f004 faaf 	bl	8004918 <rtos::Mutex::Mutex()>
 80003ba:	6026      	str	r6, [r4, #0]
 80003bc:	6828      	ldr	r0, [r5, #0]
 80003be:	f001 fef1 	bl	80021a4 <osMutexRelease>
 80003c2:	6820      	ldr	r0, [r4, #0]
 80003c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80003c8:	f004 bac1 	b.w	800494e <rtos::Mutex::unlock()>
 80003cc:	20001b64 	.word	0x20001b64
 80003d0:	20001fcc 	.word	0x20001fcc

080003d4 <averageAnalog(PinName)>:
 80003d4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80003d8:	f8df 8040 	ldr.w	r8, [pc, #64]	; 800041c <averageAnalog(PinName)+0x48>
 80003dc:	4607      	mov	r7, r0
 80003de:	2504      	movs	r5, #4
 80003e0:	2400      	movs	r4, #0
 80003e2:	a801      	add	r0, sp, #4
 80003e4:	f8cd 8004 	str.w	r8, [sp, #4]
 80003e8:	f7ff ffb6 	bl	8000358 <mbed::AnalogIn::lock()>
 80003ec:	4639      	mov	r1, r7
 80003ee:	a802      	add	r0, sp, #8
 80003f0:	f002 fdae 	bl	8002f50 <analogin_init>
 80003f4:	a801      	add	r0, sp, #4
 80003f6:	f7ff ffcf 	bl	8000398 <mbed::AnalogIn::unlock()>
 80003fa:	a801      	add	r0, sp, #4
 80003fc:	f7ff ffac 	bl	8000358 <mbed::AnalogIn::lock()>
 8000400:	a802      	add	r0, sp, #8
 8000402:	f002 fe05 	bl	8003010 <analogin_read_u16>
 8000406:	4606      	mov	r6, r0
 8000408:	a801      	add	r0, sp, #4
 800040a:	f7ff ffc5 	bl	8000398 <mbed::AnalogIn::unlock()>
 800040e:	3d01      	subs	r5, #1
 8000410:	4434      	add	r4, r6
 8000412:	d1e6      	bne.n	80003e2 <averageAnalog(PinName)+0xe>
 8000414:	10a0      	asrs	r0, r4, #2
 8000416:	b004      	add	sp, #16
 8000418:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800041c:	080058f4 	.word	0x080058f4

08000420 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 8000420:	3801      	subs	r0, #1
 8000422:	2300      	movs	r3, #0
 8000424:	fa21 f203 	lsr.w	r2, r1, r3
 8000428:	3308      	adds	r3, #8
 800042a:	2b20      	cmp	r3, #32
 800042c:	f800 2f01 	strb.w	r2, [r0, #1]!
 8000430:	d1f8      	bne.n	8000424 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 8000432:	4770      	bx	lr

08000434 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 8000434:	6843      	ldr	r3, [r0, #4]
 8000436:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800043a:	700b      	strb	r3, [r1, #0]
 800043c:	6843      	ldr	r3, [r0, #4]
 800043e:	0a1b      	lsrs	r3, r3, #8
 8000440:	704b      	strb	r3, [r1, #1]
 8000442:	88c3      	ldrh	r3, [r0, #6]
 8000444:	708b      	strb	r3, [r1, #2]
 8000446:	79c3      	ldrb	r3, [r0, #7]
 8000448:	70cb      	strb	r3, [r1, #3]
 800044a:	460d      	mov	r5, r1
 800044c:	1d0a      	adds	r2, r1, #4
 800044e:	4604      	mov	r4, r0
 8000450:	2100      	movs	r1, #0
 8000452:	6860      	ldr	r0, [r4, #4]
 8000454:	4281      	cmp	r1, r0
 8000456:	eba2 0305 	sub.w	r3, r2, r5
 800045a:	f102 0204 	add.w	r2, r2, #4
 800045e:	d20f      	bcs.n	8000480 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 8000460:	68e3      	ldr	r3, [r4, #12]
 8000462:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8000466:	f802 3c04 	strb.w	r3, [r2, #-4]
 800046a:	0a18      	lsrs	r0, r3, #8
 800046c:	f802 0c03 	strb.w	r0, [r2, #-3]
 8000470:	0c18      	lsrs	r0, r3, #16
 8000472:	0e1b      	lsrs	r3, r3, #24
 8000474:	f802 0c02 	strb.w	r0, [r2, #-2]
 8000478:	f802 3c01 	strb.w	r3, [r2, #-1]
 800047c:	3101      	adds	r1, #1
 800047e:	e7e8      	b.n	8000452 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 8000480:	6922      	ldr	r2, [r4, #16]
 8000482:	54ea      	strb	r2, [r5, r3]
 8000484:	6921      	ldr	r1, [r4, #16]
 8000486:	18ea      	adds	r2, r5, r3
 8000488:	0a09      	lsrs	r1, r1, #8
 800048a:	7051      	strb	r1, [r2, #1]
 800048c:	8a61      	ldrh	r1, [r4, #18]
 800048e:	7091      	strb	r1, [r2, #2]
 8000490:	7ce1      	ldrb	r1, [r4, #19]
 8000492:	70d1      	strb	r1, [r2, #3]
 8000494:	3304      	adds	r3, #4
 8000496:	442b      	add	r3, r5
 8000498:	2100      	movs	r1, #0
 800049a:	6922      	ldr	r2, [r4, #16]
 800049c:	4291      	cmp	r1, r2
 800049e:	eba3 0605 	sub.w	r6, r3, r5
 80004a2:	f103 0304 	add.w	r3, r3, #4
 80004a6:	d20f      	bcs.n	80004c8 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 80004a8:	69a2      	ldr	r2, [r4, #24]
 80004aa:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 80004ae:	f803 2c04 	strb.w	r2, [r3, #-4]
 80004b2:	0a10      	lsrs	r0, r2, #8
 80004b4:	f803 0c03 	strb.w	r0, [r3, #-3]
 80004b8:	0c10      	lsrs	r0, r2, #16
 80004ba:	0e12      	lsrs	r2, r2, #24
 80004bc:	f803 0c02 	strb.w	r0, [r3, #-2]
 80004c0:	f803 2c01 	strb.w	r2, [r3, #-1]
 80004c4:	3101      	adds	r1, #1
 80004c6:	e7e8      	b.n	800049a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 80004c8:	69e3      	ldr	r3, [r4, #28]
 80004ca:	55ab      	strb	r3, [r5, r6]
 80004cc:	69e2      	ldr	r2, [r4, #28]
 80004ce:	19ab      	adds	r3, r5, r6
 80004d0:	0a12      	lsrs	r2, r2, #8
 80004d2:	705a      	strb	r2, [r3, #1]
 80004d4:	8be2      	ldrh	r2, [r4, #30]
 80004d6:	709a      	strb	r2, [r3, #2]
 80004d8:	7fe2      	ldrb	r2, [r4, #31]
 80004da:	70da      	strb	r2, [r3, #3]
 80004dc:	3604      	adds	r6, #4
 80004de:	2700      	movs	r7, #0
 80004e0:	69e3      	ldr	r3, [r4, #28]
 80004e2:	429f      	cmp	r7, r3
 80004e4:	d214      	bcs.n	8000510 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 80004e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80004e8:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 80004ec:	f005 f829 	bl	8005542 <strlen>
 80004f0:	4680      	mov	r8, r0
 80004f2:	4601      	mov	r1, r0
 80004f4:	19a8      	adds	r0, r5, r6
 80004f6:	f7ff ff93 	bl	8000420 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80004fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80004fc:	3604      	adds	r6, #4
 80004fe:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 8000502:	19a8      	adds	r0, r5, r6
 8000504:	4642      	mov	r2, r8
 8000506:	f004 fd2b 	bl	8004f60 <memcpy>
 800050a:	4446      	add	r6, r8
 800050c:	3701      	adds	r7, #1
 800050e:	e7e7      	b.n	80004e0 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 8000510:	4630      	mov	r0, r6
 8000512:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000516 <rosserial_msgs::Log::serialize(unsigned char*) const>:
 8000516:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000518:	460e      	mov	r6, r1
 800051a:	7903      	ldrb	r3, [r0, #4]
 800051c:	f806 3b01 	strb.w	r3, [r6], #1
 8000520:	4605      	mov	r5, r0
 8000522:	6880      	ldr	r0, [r0, #8]
 8000524:	460f      	mov	r7, r1
 8000526:	f005 f80c 	bl	8005542 <strlen>
 800052a:	4604      	mov	r4, r0
 800052c:	4601      	mov	r1, r0
 800052e:	4630      	mov	r0, r6
 8000530:	f7ff ff76 	bl	8000420 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000534:	4622      	mov	r2, r4
 8000536:	68a9      	ldr	r1, [r5, #8]
 8000538:	1d78      	adds	r0, r7, #5
 800053a:	f004 fd11 	bl	8004f60 <memcpy>
 800053e:	1d60      	adds	r0, r4, #5
 8000540:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000542 <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 8000542:	8883      	ldrh	r3, [r0, #4]
 8000544:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000548:	700b      	strb	r3, [r1, #0]
 800054a:	8883      	ldrh	r3, [r0, #4]
 800054c:	0a1b      	lsrs	r3, r3, #8
 800054e:	704b      	strb	r3, [r1, #1]
 8000550:	4605      	mov	r5, r0
 8000552:	6880      	ldr	r0, [r0, #8]
 8000554:	460c      	mov	r4, r1
 8000556:	f004 fff4 	bl	8005542 <strlen>
 800055a:	4607      	mov	r7, r0
 800055c:	4601      	mov	r1, r0
 800055e:	1ca0      	adds	r0, r4, #2
 8000560:	f7ff ff5e 	bl	8000420 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000564:	463a      	mov	r2, r7
 8000566:	68a9      	ldr	r1, [r5, #8]
 8000568:	1da0      	adds	r0, r4, #6
 800056a:	f004 fcf9 	bl	8004f60 <memcpy>
 800056e:	68e8      	ldr	r0, [r5, #12]
 8000570:	f004 ffe7 	bl	8005542 <strlen>
 8000574:	f107 0806 	add.w	r8, r7, #6
 8000578:	4606      	mov	r6, r0
 800057a:	4601      	mov	r1, r0
 800057c:	370a      	adds	r7, #10
 800057e:	eb04 0008 	add.w	r0, r4, r8
 8000582:	f7ff ff4d 	bl	8000420 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000586:	4632      	mov	r2, r6
 8000588:	68e9      	ldr	r1, [r5, #12]
 800058a:	19e0      	adds	r0, r4, r7
 800058c:	f004 fce8 	bl	8004f60 <memcpy>
 8000590:	6928      	ldr	r0, [r5, #16]
 8000592:	f004 ffd6 	bl	8005542 <strlen>
 8000596:	443e      	add	r6, r7
 8000598:	4601      	mov	r1, r0
 800059a:	4607      	mov	r7, r0
 800059c:	19a0      	adds	r0, r4, r6
 800059e:	3604      	adds	r6, #4
 80005a0:	f7ff ff3e 	bl	8000420 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80005a4:	463a      	mov	r2, r7
 80005a6:	19a0      	adds	r0, r4, r6
 80005a8:	6929      	ldr	r1, [r5, #16]
 80005aa:	443e      	add	r6, r7
 80005ac:	f004 fcd8 	bl	8004f60 <memcpy>
 80005b0:	696b      	ldr	r3, [r5, #20]
 80005b2:	55a3      	strb	r3, [r4, r6]
 80005b4:	4434      	add	r4, r6
 80005b6:	0a1a      	lsrs	r2, r3, #8
 80005b8:	7062      	strb	r2, [r4, #1]
 80005ba:	0c1a      	lsrs	r2, r3, #16
 80005bc:	0e1b      	lsrs	r3, r3, #24
 80005be:	70a2      	strb	r2, [r4, #2]
 80005c0:	70e3      	strb	r3, [r4, #3]
 80005c2:	1d30      	adds	r0, r6, #4
 80005c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080005c8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 80005c8:	b510      	push	{r4, lr}
 80005ca:	2300      	movs	r3, #0
 80005cc:	6003      	str	r3, [r0, #0]
 80005ce:	3901      	subs	r1, #1
 80005d0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80005d4:	fa02 f403 	lsl.w	r4, r2, r3
 80005d8:	6802      	ldr	r2, [r0, #0]
 80005da:	3308      	adds	r3, #8
 80005dc:	4322      	orrs	r2, r4
 80005de:	2b20      	cmp	r3, #32
 80005e0:	6002      	str	r2, [r0, #0]
 80005e2:	d1f5      	bne.n	80005d0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 80005e4:	bd10      	pop	{r4, pc}

080005e6 <rosserial_msgs::Log::deserialize(unsigned char*)>:
 80005e6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80005e8:	460c      	mov	r4, r1
 80005ea:	f811 3b01 	ldrb.w	r3, [r1], #1
 80005ee:	7103      	strb	r3, [r0, #4]
 80005f0:	4605      	mov	r5, r0
 80005f2:	a801      	add	r0, sp, #4
 80005f4:	f7ff ffe8 	bl	80005c8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80005f8:	9b01      	ldr	r3, [sp, #4]
 80005fa:	1d62      	adds	r2, r4, #5
 80005fc:	1d58      	adds	r0, r3, #5
 80005fe:	1b11      	subs	r1, r2, r4
 8000600:	4288      	cmp	r0, r1
 8000602:	d904      	bls.n	800060e <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 8000604:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000608:	f802 1c02 	strb.w	r1, [r2, #-2]
 800060c:	e7f7      	b.n	80005fe <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 800060e:	4423      	add	r3, r4
 8000610:	2200      	movs	r2, #0
 8000612:	3404      	adds	r4, #4
 8000614:	711a      	strb	r2, [r3, #4]
 8000616:	60ac      	str	r4, [r5, #8]
 8000618:	b003      	add	sp, #12
 800061a:	bd30      	pop	{r4, r5, pc}

0800061c <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 800061c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800061e:	780b      	ldrb	r3, [r1, #0]
 8000620:	8083      	strh	r3, [r0, #4]
 8000622:	784a      	ldrb	r2, [r1, #1]
 8000624:	b085      	sub	sp, #20
 8000626:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800062a:	8083      	strh	r3, [r0, #4]
 800062c:	460c      	mov	r4, r1
 800062e:	4606      	mov	r6, r0
 8000630:	3102      	adds	r1, #2
 8000632:	a801      	add	r0, sp, #4
 8000634:	f7ff ffc8 	bl	80005c8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000638:	9f01      	ldr	r7, [sp, #4]
 800063a:	1da3      	adds	r3, r4, #6
 800063c:	1dbd      	adds	r5, r7, #6
 800063e:	1b1a      	subs	r2, r3, r4
 8000640:	4295      	cmp	r5, r2
 8000642:	d904      	bls.n	800064e <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 8000644:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000648:	f803 2c02 	strb.w	r2, [r3, #-2]
 800064c:	e7f7      	b.n	800063e <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 800064e:	19e3      	adds	r3, r4, r7
 8000650:	2200      	movs	r2, #0
 8000652:	715a      	strb	r2, [r3, #5]
 8000654:	1d63      	adds	r3, r4, #5
 8000656:	60b3      	str	r3, [r6, #8]
 8000658:	1961      	adds	r1, r4, r5
 800065a:	a802      	add	r0, sp, #8
 800065c:	f7ff ffb4 	bl	80005c8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000660:	1d2b      	adds	r3, r5, #4
 8000662:	9d02      	ldr	r5, [sp, #8]
 8000664:	f107 020a 	add.w	r2, r7, #10
 8000668:	441d      	add	r5, r3
 800066a:	4422      	add	r2, r4
 800066c:	1b11      	subs	r1, r2, r4
 800066e:	428d      	cmp	r5, r1
 8000670:	d904      	bls.n	800067c <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 8000672:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000676:	f802 1c02 	strb.w	r1, [r2, #-2]
 800067a:	e7f7      	b.n	800066c <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 800067c:	1961      	adds	r1, r4, r5
 800067e:	3b01      	subs	r3, #1
 8000680:	4423      	add	r3, r4
 8000682:	2200      	movs	r2, #0
 8000684:	f801 2c01 	strb.w	r2, [r1, #-1]
 8000688:	a803      	add	r0, sp, #12
 800068a:	60f3      	str	r3, [r6, #12]
 800068c:	f7ff ff9c 	bl	80005c8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000690:	9803      	ldr	r0, [sp, #12]
 8000692:	3504      	adds	r5, #4
 8000694:	4428      	add	r0, r5
 8000696:	1963      	adds	r3, r4, r5
 8000698:	1b1a      	subs	r2, r3, r4
 800069a:	4290      	cmp	r0, r2
 800069c:	d904      	bls.n	80006a8 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 800069e:	f813 2b01 	ldrb.w	r2, [r3], #1
 80006a2:	f803 2c02 	strb.w	r2, [r3, #-2]
 80006a6:	e7f7      	b.n	8000698 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 80006a8:	1822      	adds	r2, r4, r0
 80006aa:	3d01      	subs	r5, #1
 80006ac:	2300      	movs	r3, #0
 80006ae:	4425      	add	r5, r4
 80006b0:	f802 3c01 	strb.w	r3, [r2, #-1]
 80006b4:	6135      	str	r5, [r6, #16]
 80006b6:	7893      	ldrb	r3, [r2, #2]
 80006b8:	7851      	ldrb	r1, [r2, #1]
 80006ba:	78d2      	ldrb	r2, [r2, #3]
 80006bc:	041b      	lsls	r3, r3, #16
 80006be:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80006c2:	5c21      	ldrb	r1, [r4, r0]
 80006c4:	430b      	orrs	r3, r1
 80006c6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80006ca:	3004      	adds	r0, #4
 80006cc:	6173      	str	r3, [r6, #20]
 80006ce:	b005      	add	sp, #20
 80006d0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080006d2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 80006d2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80006d6:	6843      	ldr	r3, [r0, #4]
 80006d8:	680d      	ldr	r5, [r1, #0]
 80006da:	429d      	cmp	r5, r3
 80006dc:	4604      	mov	r4, r0
 80006de:	460e      	mov	r6, r1
 80006e0:	d904      	bls.n	80006ec <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 80006e2:	00a9      	lsls	r1, r5, #2
 80006e4:	68c0      	ldr	r0, [r0, #12]
 80006e6:	f004 fed1 	bl	800548c <realloc>
 80006ea:	60e0      	str	r0, [r4, #12]
 80006ec:	6065      	str	r5, [r4, #4]
 80006ee:	1d32      	adds	r2, r6, #4
 80006f0:	2100      	movs	r1, #0
 80006f2:	6860      	ldr	r0, [r4, #4]
 80006f4:	4281      	cmp	r1, r0
 80006f6:	eba2 0306 	sub.w	r3, r2, r6
 80006fa:	f102 0204 	add.w	r2, r2, #4
 80006fe:	d213      	bcs.n	8000728 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 8000700:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 8000704:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 8000708:	041b      	lsls	r3, r3, #16
 800070a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 800070e:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 8000712:	4303      	orrs	r3, r0
 8000714:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8000718:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 800071c:	68e0      	ldr	r0, [r4, #12]
 800071e:	60a3      	str	r3, [r4, #8]
 8000720:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000724:	3101      	adds	r1, #1
 8000726:	e7e4      	b.n	80006f2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 8000728:	18f2      	adds	r2, r6, r3
 800072a:	5cf1      	ldrb	r1, [r6, r3]
 800072c:	7895      	ldrb	r5, [r2, #2]
 800072e:	7850      	ldrb	r0, [r2, #1]
 8000730:	78d2      	ldrb	r2, [r2, #3]
 8000732:	042d      	lsls	r5, r5, #16
 8000734:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8000738:	430d      	orrs	r5, r1
 800073a:	1d1f      	adds	r7, r3, #4
 800073c:	6923      	ldr	r3, [r4, #16]
 800073e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000742:	429d      	cmp	r5, r3
 8000744:	d904      	bls.n	8000750 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 8000746:	00a9      	lsls	r1, r5, #2
 8000748:	69a0      	ldr	r0, [r4, #24]
 800074a:	f004 fe9f 	bl	800548c <realloc>
 800074e:	61a0      	str	r0, [r4, #24]
 8000750:	6125      	str	r5, [r4, #16]
 8000752:	19f3      	adds	r3, r6, r7
 8000754:	2100      	movs	r1, #0
 8000756:	6922      	ldr	r2, [r4, #16]
 8000758:	4291      	cmp	r1, r2
 800075a:	eba3 0506 	sub.w	r5, r3, r6
 800075e:	f103 0304 	add.w	r3, r3, #4
 8000762:	d213      	bcs.n	800078c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000764:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8000768:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 800076c:	0412      	lsls	r2, r2, #16
 800076e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000772:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8000776:	4302      	orrs	r2, r0
 8000778:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 800077c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000780:	69a0      	ldr	r0, [r4, #24]
 8000782:	6162      	str	r2, [r4, #20]
 8000784:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8000788:	3101      	adds	r1, #1
 800078a:	e7e4      	b.n	8000756 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 800078c:	1973      	adds	r3, r6, r5
 800078e:	5d72      	ldrb	r2, [r6, r5]
 8000790:	789f      	ldrb	r7, [r3, #2]
 8000792:	7859      	ldrb	r1, [r3, #1]
 8000794:	78db      	ldrb	r3, [r3, #3]
 8000796:	043f      	lsls	r7, r7, #16
 8000798:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 800079c:	4317      	orrs	r7, r2
 800079e:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 80007a2:	69e3      	ldr	r3, [r4, #28]
 80007a4:	429f      	cmp	r7, r3
 80007a6:	f105 0504 	add.w	r5, r5, #4
 80007aa:	d904      	bls.n	80007b6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 80007ac:	00b9      	lsls	r1, r7, #2
 80007ae:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80007b0:	f004 fe6c 	bl	800548c <realloc>
 80007b4:	6260      	str	r0, [r4, #36]	; 0x24
 80007b6:	61e7      	str	r7, [r4, #28]
 80007b8:	2700      	movs	r7, #0
 80007ba:	46b8      	mov	r8, r7
 80007bc:	69e3      	ldr	r3, [r4, #28]
 80007be:	429f      	cmp	r7, r3
 80007c0:	d21a      	bcs.n	80007f8 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 80007c2:	1971      	adds	r1, r6, r5
 80007c4:	a801      	add	r0, sp, #4
 80007c6:	f7ff feff 	bl	80005c8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80007ca:	1d2b      	adds	r3, r5, #4
 80007cc:	9d01      	ldr	r5, [sp, #4]
 80007ce:	18f2      	adds	r2, r6, r3
 80007d0:	441d      	add	r5, r3
 80007d2:	1b91      	subs	r1, r2, r6
 80007d4:	42a9      	cmp	r1, r5
 80007d6:	d204      	bcs.n	80007e2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 80007d8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80007dc:	f802 1c02 	strb.w	r1, [r2, #-2]
 80007e0:	e7f7      	b.n	80007d2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 80007e2:	1972      	adds	r2, r6, r5
 80007e4:	3b01      	subs	r3, #1
 80007e6:	f802 8c01 	strb.w	r8, [r2, #-1]
 80007ea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80007ec:	4433      	add	r3, r6
 80007ee:	6223      	str	r3, [r4, #32]
 80007f0:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 80007f4:	3701      	adds	r7, #1
 80007f6:	e7e1      	b.n	80007bc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 80007f8:	4628      	mov	r0, r5
 80007fa:	b002      	add	sp, #8
 80007fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000800 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 8000800:	b530      	push	{r4, r5, lr}
 8000802:	b085      	sub	sp, #20
 8000804:	4604      	mov	r4, r0
 8000806:	4b09      	ldr	r3, [pc, #36]	; (800082c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 8000808:	9301      	str	r3, [sp, #4]
 800080a:	2300      	movs	r3, #0
 800080c:	9302      	str	r3, [sp, #8]
 800080e:	9303      	str	r3, [sp, #12]
 8000810:	f854 3bec 	ldr.w	r3, [r4], #236
 8000814:	aa01      	add	r2, sp, #4
 8000816:	681b      	ldr	r3, [r3, #0]
 8000818:	210a      	movs	r1, #10
 800081a:	4605      	mov	r5, r0
 800081c:	4798      	blx	r3
 800081e:	4620      	mov	r0, r4
 8000820:	f003 fdce 	bl	80043c0 <mbed::Timer::read_ms()>
 8000824:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 8000828:	b005      	add	sp, #20
 800082a:	bd30      	pop	{r4, r5, pc}
 800082c:	0800590c 	.word	0x0800590c

08000830 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 8000830:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000834:	b086      	sub	sp, #24
 8000836:	4b2b      	ldr	r3, [pc, #172]	; (80008e4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000838:	9300      	str	r3, [sp, #0]
 800083a:	2200      	movs	r2, #0
 800083c:	4b2a      	ldr	r3, [pc, #168]	; (80008e8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 800083e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000842:	4605      	mov	r5, r0
 8000844:	9302      	str	r3, [sp, #8]
 8000846:	9303      	str	r3, [sp, #12]
 8000848:	9304      	str	r3, [sp, #16]
 800084a:	9205      	str	r2, [sp, #20]
 800084c:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 8000850:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 8000854:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000858:	6823      	ldr	r3, [r4, #0]
 800085a:	b1bb      	cbz	r3, 800088c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 800085c:	6858      	ldr	r0, [r3, #4]
 800085e:	689a      	ldr	r2, [r3, #8]
 8000860:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000864:	681a      	ldr	r2, [r3, #0]
 8000866:	6803      	ldr	r3, [r0, #0]
 8000868:	9202      	str	r2, [sp, #8]
 800086a:	689b      	ldr	r3, [r3, #8]
 800086c:	4798      	blx	r3
 800086e:	6823      	ldr	r3, [r4, #0]
 8000870:	9003      	str	r0, [sp, #12]
 8000872:	6858      	ldr	r0, [r3, #4]
 8000874:	6803      	ldr	r3, [r0, #0]
 8000876:	68db      	ldr	r3, [r3, #12]
 8000878:	4798      	blx	r3
 800087a:	6821      	ldr	r1, [r4, #0]
 800087c:	682b      	ldr	r3, [r5, #0]
 800087e:	9004      	str	r0, [sp, #16]
 8000880:	9705      	str	r7, [sp, #20]
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	6909      	ldr	r1, [r1, #16]
 8000886:	466a      	mov	r2, sp
 8000888:	4628      	mov	r0, r5
 800088a:	4798      	blx	r3
 800088c:	3404      	adds	r4, #4
 800088e:	42b4      	cmp	r4, r6
 8000890:	d1e2      	bne.n	8000858 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 8000892:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 8000896:	f44f 7700 	mov.w	r7, #512	; 0x200
 800089a:	6820      	ldr	r0, [r4, #0]
 800089c:	b1c8      	cbz	r0, 80008d2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 800089e:	6843      	ldr	r3, [r0, #4]
 80008a0:	f8ad 3004 	strh.w	r3, [sp, #4]
 80008a4:	6883      	ldr	r3, [r0, #8]
 80008a6:	9302      	str	r3, [sp, #8]
 80008a8:	6803      	ldr	r3, [r0, #0]
 80008aa:	689b      	ldr	r3, [r3, #8]
 80008ac:	4798      	blx	r3
 80008ae:	9003      	str	r0, [sp, #12]
 80008b0:	6820      	ldr	r0, [r4, #0]
 80008b2:	6803      	ldr	r3, [r0, #0]
 80008b4:	68db      	ldr	r3, [r3, #12]
 80008b6:	4798      	blx	r3
 80008b8:	682b      	ldr	r3, [r5, #0]
 80008ba:	9004      	str	r0, [sp, #16]
 80008bc:	6820      	ldr	r0, [r4, #0]
 80008be:	f8d3 8000 	ldr.w	r8, [r3]
 80008c2:	6803      	ldr	r3, [r0, #0]
 80008c4:	9705      	str	r7, [sp, #20]
 80008c6:	685b      	ldr	r3, [r3, #4]
 80008c8:	4798      	blx	r3
 80008ca:	466a      	mov	r2, sp
 80008cc:	4601      	mov	r1, r0
 80008ce:	4628      	mov	r0, r5
 80008d0:	47c0      	blx	r8
 80008d2:	3404      	adds	r4, #4
 80008d4:	42a6      	cmp	r6, r4
 80008d6:	d1e0      	bne.n	800089a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 80008d8:	2301      	movs	r3, #1
 80008da:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 80008de:	b006      	add	sp, #24
 80008e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008e4:	08005924 	.word	0x08005924
 80008e8:	08005b61 	.word	0x08005b61

080008ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 80008ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80008ee:	b085      	sub	sp, #20
 80008f0:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 80008f4:	4b1f      	ldr	r3, [pc, #124]	; (8000974 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 80008f6:	9301      	str	r3, [sp, #4]
 80008f8:	4604      	mov	r4, r0
 80008fa:	2300      	movs	r3, #0
 80008fc:	4628      	mov	r0, r5
 80008fe:	9302      	str	r3, [sp, #8]
 8000900:	9303      	str	r3, [sp, #12]
 8000902:	460e      	mov	r6, r1
 8000904:	f003 fd5c 	bl	80043c0 <mbed::Timer::read_ms()>
 8000908:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 800090c:	4631      	mov	r1, r6
 800090e:	1a87      	subs	r7, r0, r2
 8000910:	a801      	add	r0, sp, #4
 8000912:	f7ff fc8a 	bl	800022a <std_msgs::Time::deserialize(unsigned char*)>
 8000916:	9b02      	ldr	r3, [sp, #8]
 8000918:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 800091c:	fbb7 f2f6 	udiv	r2, r7, r6
 8000920:	4413      	add	r3, r2
 8000922:	9302      	str	r3, [sp, #8]
 8000924:	fb06 7212 	mls	r2, r6, r2, r7
 8000928:	9b03      	ldr	r3, [sp, #12]
 800092a:	4f13      	ldr	r7, [pc, #76]	; (8000978 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 800092c:	4628      	mov	r0, r5
 800092e:	fb07 3202 	mla	r2, r7, r2, r3
 8000932:	9203      	str	r2, [sp, #12]
 8000934:	f003 fd44 	bl	80043c0 <mbed::Timer::read_ms()>
 8000938:	9a02      	ldr	r2, [sp, #8]
 800093a:	fbb0 f3f6 	udiv	r3, r0, r6
 800093e:	3a01      	subs	r2, #1
 8000940:	1ad2      	subs	r2, r2, r3
 8000942:	9903      	ldr	r1, [sp, #12]
 8000944:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000948:	4a0c      	ldr	r2, [pc, #48]	; (800097c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 800094a:	fb06 0313 	mls	r3, r6, r3, r0
 800094e:	440a      	add	r2, r1
 8000950:	fb07 2313 	mls	r3, r7, r3, r2
 8000954:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8000958:	f504 7182 	add.w	r1, r4, #260	; 0x104
 800095c:	f504 7080 	add.w	r0, r4, #256	; 0x100
 8000960:	f000 fa7a 	bl	8000e58 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000964:	4628      	mov	r0, r5
 8000966:	f003 fd2b 	bl	80043c0 <mbed::Timer::read_ms()>
 800096a:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 800096e:	b005      	add	sp, #20
 8000970:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000972:	bf00      	nop
 8000974:	0800590c 	.word	0x0800590c
 8000978:	000f4240 	.word	0x000f4240
 800097c:	3b9aca00 	.word	0x3b9aca00

08000980 <_GLOBAL__sub_I_adc0>:
 8000980:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000982:	4c32      	ldr	r4, [pc, #200]	; (8000a4c <_GLOBAL__sub_I_adc0+0xcc>)
 8000984:	4b32      	ldr	r3, [pc, #200]	; (8000a50 <_GLOBAL__sub_I_adc0+0xd0>)
 8000986:	4620      	mov	r0, r4
 8000988:	2500      	movs	r5, #0
 800098a:	f840 3b04 	str.w	r3, [r0], #4
 800098e:	2304      	movs	r3, #4
 8000990:	2203      	movs	r2, #3
 8000992:	2102      	movs	r1, #2
 8000994:	e88d 0028 	stmia.w	sp, {r3, r5}
 8000998:	f44f 7380 	mov.w	r3, #256	; 0x100
 800099c:	f000 fb52 	bl	8001044 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 80009a0:	f104 00ec 	add.w	r0, r4, #236	; 0xec
 80009a4:	f003 fd22 	bl	80043ec <mbed::Timer::Timer()>
 80009a8:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 80009ac:	f104 00ec 	add.w	r0, r4, #236	; 0xec
 80009b0:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 80009b4:	f003 fcd8 	bl	8004368 <mbed::Timer::start()>
 80009b8:	4b26      	ldr	r3, [pc, #152]	; (8000a54 <_GLOBAL__sub_I_adc0+0xd4>)
 80009ba:	f884 55e8 	strb.w	r5, [r4, #1512]	; 0x5e8
 80009be:	f8c4 35fc 	str.w	r3, [r4, #1532]	; 0x5fc
 80009c2:	f8c4 5600 	str.w	r5, [r4, #1536]	; 0x600
 80009c6:	f8c4 5608 	str.w	r5, [r4, #1544]	; 0x608
 80009ca:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 80009ce:	f8c4 5614 	str.w	r5, [r4, #1556]	; 0x614
 80009d2:	f8c4 5618 	str.w	r5, [r4, #1560]	; 0x618
 80009d6:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
 80009da:	462a      	mov	r2, r5
 80009dc:	1963      	adds	r3, r4, r5
 80009de:	3504      	adds	r5, #4
 80009e0:	2d64      	cmp	r5, #100	; 0x64
 80009e2:	f8c3 250c 	str.w	r2, [r3, #1292]	; 0x50c
 80009e6:	d1f9      	bne.n	80009dc <_GLOBAL__sub_I_adc0+0x5c>
 80009e8:	2300      	movs	r3, #0
 80009ea:	4619      	mov	r1, r3
 80009ec:	18e2      	adds	r2, r4, r3
 80009ee:	3304      	adds	r3, #4
 80009f0:	2b64      	cmp	r3, #100	; 0x64
 80009f2:	f8c2 1570 	str.w	r1, [r2, #1392]	; 0x570
 80009f6:	d1f9      	bne.n	80009ec <_GLOBAL__sub_I_adc0+0x6c>
 80009f8:	2300      	movs	r3, #0
 80009fa:	4619      	mov	r1, r3
 80009fc:	18e2      	adds	r2, r4, r3
 80009fe:	3301      	adds	r3, #1
 8000a00:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000a04:	f882 110c 	strb.w	r1, [r2, #268]	; 0x10c
 8000a08:	d1f8      	bne.n	80009fc <_GLOBAL__sub_I_adc0+0x7c>
 8000a0a:	2300      	movs	r3, #0
 8000a0c:	461d      	mov	r5, r3
 8000a0e:	18e2      	adds	r2, r4, r3
 8000a10:	3301      	adds	r3, #1
 8000a12:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000a16:	f882 530c 	strb.w	r5, [r2, #780]	; 0x30c
 8000a1a:	d1f8      	bne.n	8000a0e <_GLOBAL__sub_I_adc0+0x8e>
 8000a1c:	4a0e      	ldr	r2, [pc, #56]	; (8000a58 <_GLOBAL__sub_I_adc0+0xd8>)
 8000a1e:	490f      	ldr	r1, [pc, #60]	; (8000a5c <_GLOBAL__sub_I_adc0+0xdc>)
 8000a20:	480a      	ldr	r0, [pc, #40]	; (8000a4c <_GLOBAL__sub_I_adc0+0xcc>)
 8000a22:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 8000a26:	f003 ff4d 	bl	80048c4 <__aeabi_atexit>
 8000a2a:	4b0d      	ldr	r3, [pc, #52]	; (8000a60 <_GLOBAL__sub_I_adc0+0xe0>)
 8000a2c:	4a0d      	ldr	r2, [pc, #52]	; (8000a64 <_GLOBAL__sub_I_adc0+0xe4>)
 8000a2e:	601a      	str	r2, [r3, #0]
 8000a30:	490d      	ldr	r1, [pc, #52]	; (8000a68 <_GLOBAL__sub_I_adc0+0xe8>)
 8000a32:	4a0e      	ldr	r2, [pc, #56]	; (8000a6c <_GLOBAL__sub_I_adc0+0xec>)
 8000a34:	809d      	strh	r5, [r3, #4]
 8000a36:	80dd      	strh	r5, [r3, #6]
 8000a38:	811d      	strh	r5, [r3, #8]
 8000a3a:	815d      	strh	r5, [r3, #10]
 8000a3c:	819d      	strh	r5, [r3, #12]
 8000a3e:	81dd      	strh	r5, [r3, #14]
 8000a40:	e882 000a 	stmia.w	r2, {r1, r3}
 8000a44:	6115      	str	r5, [r2, #16]
 8000a46:	b003      	add	sp, #12
 8000a48:	bd30      	pop	{r4, r5, pc}
 8000a4a:	bf00      	nop
 8000a4c:	20000270 	.word	0x20000270
 8000a50:	08005984 	.word	0x08005984
 8000a54:	08005954 	.word	0x08005954
 8000a58:	20000194 	.word	0x20000194
 8000a5c:	08000e19 	.word	0x08000e19
 8000a60:	20000260 	.word	0x20000260
 8000a64:	0800596c 	.word	0x0800596c
 8000a68:	08005990 	.word	0x08005990
 8000a6c:	20000894 	.word	0x20000894

08000a70 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8000a70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000a72:	2963      	cmp	r1, #99	; 0x63
 8000a74:	b085      	sub	sp, #20
 8000a76:	4604      	mov	r4, r0
 8000a78:	460e      	mov	r6, r1
 8000a7a:	dd03      	ble.n	8000a84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000a7c:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 8000a80:	2d00      	cmp	r5, #0
 8000a82:	d04d      	beq.n	8000b20 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000a84:	6813      	ldr	r3, [r2, #0]
 8000a86:	f204 3113 	addw	r1, r4, #787	; 0x313
 8000a8a:	681b      	ldr	r3, [r3, #0]
 8000a8c:	4610      	mov	r0, r2
 8000a8e:	4798      	blx	r3
 8000a90:	23ff      	movs	r3, #255	; 0xff
 8000a92:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 8000a96:	23fe      	movs	r3, #254	; 0xfe
 8000a98:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000a9c:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 8000aa0:	b2c3      	uxtb	r3, r0
 8000aa2:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 8000aa6:	4413      	add	r3, r2
 8000aa8:	43db      	mvns	r3, r3
 8000aaa:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 8000aae:	f346 2607 	sbfx	r6, r6, #8, #8
 8000ab2:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 8000ab6:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 8000aba:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 8000abe:	f204 3111 	addw	r1, r4, #785	; 0x311
 8000ac2:	2205      	movs	r2, #5
 8000ac4:	2300      	movs	r3, #0
 8000ac6:	1d86      	adds	r6, r0, #6
 8000ac8:	42b2      	cmp	r2, r6
 8000aca:	dc04      	bgt.n	8000ad6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000acc:	f811 5b01 	ldrb.w	r5, [r1], #1
 8000ad0:	3201      	adds	r2, #1
 8000ad2:	442b      	add	r3, r5
 8000ad4:	e7f8      	b.n	8000ac8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 8000ad6:	f100 0508 	add.w	r5, r0, #8
 8000ada:	4420      	add	r0, r4
 8000adc:	43db      	mvns	r3, r3
 8000ade:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8000ae2:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 8000ae6:	dc0c      	bgt.n	8000b02 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 8000ae8:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 8000aec:	463e      	mov	r6, r7
 8000aee:	3404      	adds	r4, #4
 8000af0:	1bf3      	subs	r3, r6, r7
 8000af2:	429d      	cmp	r5, r3
 8000af4:	dd14      	ble.n	8000b20 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000af6:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000afa:	4620      	mov	r0, r4
 8000afc:	f000 fb12 	bl	8001124 <BufferedSerial::putc(int)>
 8000b00:	e7f6      	b.n	8000af0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8000b02:	4b09      	ldr	r3, [pc, #36]	; (8000b28 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8000b04:	9301      	str	r3, [sp, #4]
 8000b06:	2303      	movs	r3, #3
 8000b08:	f88d 3008 	strb.w	r3, [sp, #8]
 8000b0c:	4b07      	ldr	r3, [pc, #28]	; (8000b2c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8000b0e:	9303      	str	r3, [sp, #12]
 8000b10:	6823      	ldr	r3, [r4, #0]
 8000b12:	aa01      	add	r2, sp, #4
 8000b14:	681b      	ldr	r3, [r3, #0]
 8000b16:	2107      	movs	r1, #7
 8000b18:	4620      	mov	r0, r4
 8000b1a:	4798      	blx	r3
 8000b1c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000b20:	4628      	mov	r0, r5
 8000b22:	b005      	add	sp, #20
 8000b24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000b26:	bf00      	nop
 8000b28:	0800593c 	.word	0x0800593c
 8000b2c:	08005a73 	.word	0x08005a73

08000b30 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000b30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8000b34:	f100 08ec 	add.w	r8, r0, #236	; 0xec
 8000b38:	4604      	mov	r4, r0
 8000b3a:	4640      	mov	r0, r8
 8000b3c:	f003 fc40 	bl	80043c0 <mbed::Timer::read_ms()>
 8000b40:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 8000b44:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000b48:	1ac3      	subs	r3, r0, r3
 8000b4a:	4293      	cmp	r3, r2
 8000b4c:	bf84      	itt	hi
 8000b4e:	2300      	movhi	r3, #0
 8000b50:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 8000b54:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 8000b58:	4605      	mov	r5, r0
 8000b5a:	b133      	cbz	r3, 8000b6a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000b5c:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 8000b60:	4283      	cmp	r3, r0
 8000b62:	bf3c      	itt	cc
 8000b64:	2300      	movcc	r3, #0
 8000b66:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 8000b6a:	f104 0904 	add.w	r9, r4, #4
 8000b6e:	2600      	movs	r6, #0
 8000b70:	f504 7786 	add.w	r7, r4, #268	; 0x10c
 8000b74:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000b78:	b9ab      	cbnz	r3, 8000ba6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 8000b7a:	4648      	mov	r0, r9
 8000b7c:	f000 f97a 	bl	8000e74 <BufferedSerial::readable()>
 8000b80:	b9e8      	cbnz	r0, 8000bbe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 8000b82:	f894 05e8 	ldrb.w	r0, [r4, #1512]	; 0x5e8
 8000b86:	b160      	cbz	r0, 8000ba2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 8000b88:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 8000b8c:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8000b90:	1aeb      	subs	r3, r5, r3
 8000b92:	4293      	cmp	r3, r2
 8000b94:	d904      	bls.n	8000ba0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 8000b96:	4620      	mov	r0, r4
 8000b98:	f7ff fe32 	bl	8000800 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000b9c:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000ba0:	2000      	movs	r0, #0
 8000ba2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000ba6:	4640      	mov	r0, r8
 8000ba8:	f003 fc0a 	bl	80043c0 <mbed::Timer::read_ms()>
 8000bac:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000bb0:	1b40      	subs	r0, r0, r5
 8000bb2:	4298      	cmp	r0, r3
 8000bb4:	d9e1      	bls.n	8000b7a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 8000bb6:	f06f 0001 	mvn.w	r0, #1
 8000bba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000bbe:	4648      	mov	r0, r9
 8000bc0:	f000 f962 	bl	8000e88 <BufferedSerial::getc()>
 8000bc4:	2800      	cmp	r0, #0
 8000bc6:	dbdc      	blt.n	8000b82 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 8000bc8:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8000bcc:	f8d4 a5d4 	ldr.w	r10, [r4, #1492]	; 0x5d4
 8000bd0:	4403      	add	r3, r0
 8000bd2:	f1ba 0f07 	cmp.w	r10, #7
 8000bd6:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 8000bda:	d112      	bne.n	8000c02 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 8000bdc:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8000be0:	1c5a      	adds	r2, r3, #1
 8000be2:	4423      	add	r3, r4
 8000be4:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 8000be8:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 8000bec:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000bf0:	3b01      	subs	r3, #1
 8000bf2:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000bf6:	2b00      	cmp	r3, #0
 8000bf8:	d1bc      	bne.n	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000bfa:	2308      	movs	r3, #8
 8000bfc:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000c00:	e7b8      	b.n	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c02:	f1ba 0f00 	cmp.w	r10, #0
 8000c06:	d114      	bne.n	8000c32 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 8000c08:	28ff      	cmp	r0, #255	; 0xff
 8000c0a:	d107      	bne.n	8000c1c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 8000c0c:	2301      	movs	r3, #1
 8000c0e:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000c12:	f105 0314 	add.w	r3, r5, #20
 8000c16:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 8000c1a:	e7ab      	b.n	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c1c:	4640      	mov	r0, r8
 8000c1e:	f003 fbcf 	bl	80043c0 <mbed::Timer::read_ms()>
 8000c22:	f241 3388 	movw	r3, #5000	; 0x1388
 8000c26:	1b40      	subs	r0, r0, r5
 8000c28:	4298      	cmp	r0, r3
 8000c2a:	d9a3      	bls.n	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c2c:	f884 a5e8 	strb.w	r10, [r4, #1512]	; 0x5e8
 8000c30:	e7c1      	b.n	8000bb6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 8000c32:	f1ba 0f01 	cmp.w	r10, #1
 8000c36:	d10d      	bne.n	8000c54 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 8000c38:	28fe      	cmp	r0, #254	; 0xfe
 8000c3a:	d101      	bne.n	8000c40 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 8000c3c:	2302      	movs	r3, #2
 8000c3e:	e7dd      	b.n	8000bfc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000c40:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000c44:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000c48:	2b00      	cmp	r3, #0
 8000c4a:	d193      	bne.n	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c4c:	4620      	mov	r0, r4
 8000c4e:	f7ff fdd7 	bl	8000800 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000c52:	e78f      	b.n	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c54:	f1ba 0f02 	cmp.w	r10, #2
 8000c58:	d109      	bne.n	8000c6e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8000c5a:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000c5e:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 8000c62:	2303      	movs	r3, #3
 8000c64:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000c68:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8000c6c:	e782      	b.n	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c6e:	f1ba 0f03 	cmp.w	r10, #3
 8000c72:	d107      	bne.n	8000c84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 8000c74:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000c78:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000c7c:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000c80:	2304      	movs	r3, #4
 8000c82:	e7bb      	b.n	8000bfc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000c84:	f1ba 0f04 	cmp.w	r10, #4
 8000c88:	d10b      	bne.n	8000ca2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8000c8a:	425a      	negs	r2, r3
 8000c8c:	b2d2      	uxtb	r2, r2
 8000c8e:	b2db      	uxtb	r3, r3
 8000c90:	bf58      	it	pl
 8000c92:	4253      	negpl	r3, r2
 8000c94:	2bff      	cmp	r3, #255	; 0xff
 8000c96:	d101      	bne.n	8000c9c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 8000c98:	2305      	movs	r3, #5
 8000c9a:	e7af      	b.n	8000bfc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000c9c:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000ca0:	e768      	b.n	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ca2:	f1ba 0f05 	cmp.w	r10, #5
 8000ca6:	d103      	bne.n	8000cb0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 8000ca8:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000cac:	2306      	movs	r3, #6
 8000cae:	e7d9      	b.n	8000c64 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 8000cb0:	f1ba 0f06 	cmp.w	r10, #6
 8000cb4:	d10b      	bne.n	8000cce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 8000cb6:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000cba:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000cbe:	2307      	movs	r3, #7
 8000cc0:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000cc4:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000cc8:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000ccc:	e793      	b.n	8000bf6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 8000cce:	f1ba 0f08 	cmp.w	r10, #8
 8000cd2:	f47f af4f 	bne.w	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000cd6:	425a      	negs	r2, r3
 8000cd8:	b2d2      	uxtb	r2, r2
 8000cda:	b2db      	uxtb	r3, r3
 8000cdc:	bf58      	it	pl
 8000cde:	4253      	negpl	r3, r2
 8000ce0:	2bff      	cmp	r3, #255	; 0xff
 8000ce2:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000ce6:	f47f af45 	bne.w	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000cea:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000cee:	b96b      	cbnz	r3, 8000d0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 8000cf0:	4620      	mov	r0, r4
 8000cf2:	f7ff fd85 	bl	8000800 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000cf6:	4620      	mov	r0, r4
 8000cf8:	f7ff fd9a 	bl	8000830 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8000cfc:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000d00:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8000d04:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000d08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000d0c:	2b0a      	cmp	r3, #10
 8000d0e:	d104      	bne.n	8000d1a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 8000d10:	4639      	mov	r1, r7
 8000d12:	4620      	mov	r0, r4
 8000d14:	f7ff fdea 	bl	80008ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8000d18:	e72c      	b.n	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000d1a:	2b06      	cmp	r3, #6
 8000d1c:	d108      	bne.n	8000d30 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 8000d1e:	4639      	mov	r1, r7
 8000d20:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 8000d24:	f7ff fcd5 	bl	80006d2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8000d28:	2301      	movs	r3, #1
 8000d2a:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 8000d2e:	e721      	b.n	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000d30:	2b0b      	cmp	r3, #11
 8000d32:	d102      	bne.n	8000d3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 8000d34:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 8000d38:	e71c      	b.n	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000d3a:	33f8      	adds	r3, #248	; 0xf8
 8000d3c:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8000d40:	2800      	cmp	r0, #0
 8000d42:	f43f af17 	beq.w	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000d46:	6803      	ldr	r3, [r0, #0]
 8000d48:	4639      	mov	r1, r7
 8000d4a:	681b      	ldr	r3, [r3, #0]
 8000d4c:	4798      	blx	r3
 8000d4e:	e711      	b.n	8000b74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

08000d50 <main>:
 8000d50:	4c28      	ldr	r4, [pc, #160]	; (8000df4 <main+0xa4>)
 8000d52:	b580      	push	{r7, lr}
 8000d54:	f8d4 10e8 	ldr.w	r1, [r4, #232]	; 0xe8
 8000d58:	1d20      	adds	r0, r4, #4
 8000d5a:	f003 fbad 	bl	80044b8 <mbed::SerialBase::baud(int)>
 8000d5e:	2300      	movs	r3, #0
 8000d60:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000d64:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000d68:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
 8000d6c:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 8000d70:	f504 62a1 	add.w	r2, r4, #1288	; 0x508
 8000d74:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8000d78:	2900      	cmp	r1, #0
 8000d7a:	d137      	bne.n	8000dec <main+0x9c>
 8000d7c:	4a1e      	ldr	r2, [pc, #120]	; (8000df8 <main+0xa8>)
 8000d7e:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8000d82:	337d      	adds	r3, #125	; 0x7d
 8000d84:	f8c1 250c 	str.w	r2, [r1, #1292]	; 0x50c
 8000d88:	6093      	str	r3, [r2, #8]
 8000d8a:	60d4      	str	r4, [r2, #12]
 8000d8c:	4f1b      	ldr	r7, [pc, #108]	; (8000dfc <main+0xac>)
 8000d8e:	4c1c      	ldr	r4, [pc, #112]	; (8000e00 <main+0xb0>)
 8000d90:	4e1c      	ldr	r6, [pc, #112]	; (8000e04 <main+0xb4>)
 8000d92:	f9b7 0000 	ldrsh.w	r0, [r7]
 8000d96:	f7ff fb1d 	bl	80003d4 <averageAnalog(PinName)>
 8000d9a:	80a0      	strh	r0, [r4, #4]
 8000d9c:	f9b6 0000 	ldrsh.w	r0, [r6]
 8000da0:	f7ff fb18 	bl	80003d4 <averageAnalog(PinName)>
 8000da4:	4b18      	ldr	r3, [pc, #96]	; (8000e08 <main+0xb8>)
 8000da6:	80e0      	strh	r0, [r4, #6]
 8000da8:	f9b3 0000 	ldrsh.w	r0, [r3]
 8000dac:	f7ff fb12 	bl	80003d4 <averageAnalog(PinName)>
 8000db0:	4b16      	ldr	r3, [pc, #88]	; (8000e0c <main+0xbc>)
 8000db2:	8120      	strh	r0, [r4, #8]
 8000db4:	f9b3 0000 	ldrsh.w	r0, [r3]
 8000db8:	f7ff fb0c 	bl	80003d4 <averageAnalog(PinName)>
 8000dbc:	4b14      	ldr	r3, [pc, #80]	; (8000e10 <main+0xc0>)
 8000dbe:	8160      	strh	r0, [r4, #10]
 8000dc0:	f9b3 0000 	ldrsh.w	r0, [r3]
 8000dc4:	f7ff fb06 	bl	80003d4 <averageAnalog(PinName)>
 8000dc8:	4b12      	ldr	r3, [pc, #72]	; (8000e14 <main+0xc4>)
 8000dca:	81a0      	strh	r0, [r4, #12]
 8000dcc:	f9b3 0000 	ldrsh.w	r0, [r3]
 8000dd0:	f7ff fb00 	bl	80003d4 <averageAnalog(PinName)>
 8000dd4:	4b08      	ldr	r3, [pc, #32]	; (8000df8 <main+0xa8>)
 8000dd6:	81e0      	strh	r0, [r4, #14]
 8000dd8:	68d8      	ldr	r0, [r3, #12]
 8000dda:	6899      	ldr	r1, [r3, #8]
 8000ddc:	6802      	ldr	r2, [r0, #0]
 8000dde:	6815      	ldr	r5, [r2, #0]
 8000de0:	4a07      	ldr	r2, [pc, #28]	; (8000e00 <main+0xb0>)
 8000de2:	47a8      	blx	r5
 8000de4:	4803      	ldr	r0, [pc, #12]	; (8000df4 <main+0xa4>)
 8000de6:	f7ff fea3 	bl	8000b30 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8000dea:	e7d2      	b.n	8000d92 <main+0x42>
 8000dec:	3301      	adds	r3, #1
 8000dee:	2b19      	cmp	r3, #25
 8000df0:	d1c0      	bne.n	8000d74 <main+0x24>
 8000df2:	e7cb      	b.n	8000d8c <main+0x3c>
 8000df4:	20000270 	.word	0x20000270
 8000df8:	20000894 	.word	0x20000894
 8000dfc:	2000025c 	.word	0x2000025c
 8000e00:	20000260 	.word	0x20000260
 8000e04:	20000198 	.word	0x20000198
 8000e08:	2000019a 	.word	0x2000019a
 8000e0c:	2000019c 	.word	0x2000019c
 8000e10:	2000019e 	.word	0x2000019e
 8000e14:	200001a0 	.word	0x200001a0

08000e18 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 8000e18:	b510      	push	{r4, lr}
 8000e1a:	4b04      	ldr	r3, [pc, #16]	; (8000e2c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 8000e1c:	4604      	mov	r4, r0
 8000e1e:	f840 3b04 	str.w	r3, [r0], #4
 8000e22:	f000 f8c3 	bl	8000fac <BufferedSerial::~BufferedSerial()>
 8000e26:	4620      	mov	r0, r4
 8000e28:	bd10      	pop	{r4, pc}
 8000e2a:	bf00      	nop
 8000e2c:	08005984 	.word	0x08005984

08000e30 <_start>:
 8000e30:	4807      	ldr	r0, [pc, #28]	; (8000e50 <_start+0x20>)
 8000e32:	4a08      	ldr	r2, [pc, #32]	; (8000e54 <_start+0x24>)
 8000e34:	b508      	push	{r3, lr}
 8000e36:	1a12      	subs	r2, r2, r0
 8000e38:	2100      	movs	r1, #0
 8000e3a:	f004 f8b6 	bl	8004faa <memset>
 8000e3e:	f003 fcff 	bl	8004840 <software_init_hook>
 8000e42:	f004 f803 	bl	8004e4c <__libc_init_array>
 8000e46:	f003 fd02 	bl	800484e <__wrap_main>
 8000e4a:	f003 fd3d 	bl	80048c8 <__wrap_exit>
 8000e4e:	bf00      	nop
 8000e50:	20000240 	.word	0x20000240
 8000e54:	20002830 	.word	0x20002830

08000e58 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 8000e58:	b530      	push	{r4, r5, lr}
 8000e5a:	6802      	ldr	r2, [r0, #0]
 8000e5c:	680d      	ldr	r5, [r1, #0]
 8000e5e:	4c04      	ldr	r4, [pc, #16]	; (8000e70 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8000e60:	fbb5 f3f4 	udiv	r3, r5, r4
 8000e64:	441a      	add	r2, r3
 8000e66:	fb04 5313 	mls	r3, r4, r3, r5
 8000e6a:	6002      	str	r2, [r0, #0]
 8000e6c:	600b      	str	r3, [r1, #0]
 8000e6e:	bd30      	pop	{r4, r5, pc}
 8000e70:	3b9aca00 	.word	0x3b9aca00

08000e74 <BufferedSerial::readable()>:
 8000e74:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 8000e78:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8000e7c:	1a10      	subs	r0, r2, r0
 8000e7e:	bf18      	it	ne
 8000e80:	2001      	movne	r0, #1
 8000e82:	4770      	bx	lr

08000e84 <BufferedSerial::writeable()>:
 8000e84:	2001      	movs	r0, #1
 8000e86:	4770      	bx	lr

08000e88 <BufferedSerial::getc()>:
 8000e88:	b510      	push	{r4, lr}
 8000e8a:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 8000e8e:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 8000e92:	4603      	mov	r3, r0
 8000e94:	1c50      	adds	r0, r2, #1
 8000e96:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 8000e9a:	5c88      	ldrb	r0, [r1, r2]
 8000e9c:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8000ea0:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 8000ea4:	3a01      	subs	r2, #1
 8000ea6:	fbb4 f1f2 	udiv	r1, r4, r2
 8000eaa:	fb02 4211 	mls	r2, r2, r1, r4
 8000eae:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 8000eb2:	bd10      	pop	{r4, pc}

08000eb4 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8000eb4:	4603      	mov	r3, r0
 8000eb6:	b110      	cbz	r0, 8000ebe <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 8000eb8:	c907      	ldmia	r1, {r0, r1, r2}
 8000eba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8000ebe:	4770      	bx	lr

08000ec0 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8000ec0:	4770      	bx	lr

08000ec2 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 8000ec2:	6842      	ldr	r2, [r0, #4]
 8000ec4:	6881      	ldr	r1, [r0, #8]
 8000ec6:	6803      	ldr	r3, [r0, #0]
 8000ec8:	f012 0f01 	tst.w	r2, #1
 8000ecc:	ea4f 0262 	mov.w	r2, r2, asr #1
 8000ed0:	bf1c      	itt	ne
 8000ed2:	5888      	ldrne	r0, [r1, r2]
 8000ed4:	58c3      	ldrne	r3, [r0, r3]
 8000ed6:	1888      	adds	r0, r1, r2
 8000ed8:	4718      	bx	r3

08000eda <mbed::Callback<void ()>::~Callback()>:
 8000eda:	68c3      	ldr	r3, [r0, #12]
 8000edc:	b510      	push	{r4, lr}
 8000ede:	4604      	mov	r4, r0
 8000ee0:	b10b      	cbz	r3, 8000ee6 <mbed::Callback<void ()>::~Callback()+0xc>
 8000ee2:	689b      	ldr	r3, [r3, #8]
 8000ee4:	4798      	blx	r3
 8000ee6:	4620      	mov	r0, r4
 8000ee8:	bd10      	pop	{r4, pc}

08000eea <BufferedSerial::txIrq()>:
 8000eea:	b530      	push	{r4, r5, lr}
 8000eec:	4604      	mov	r4, r0
 8000eee:	b085      	sub	sp, #20
 8000ef0:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8000ef4:	4628      	mov	r0, r5
 8000ef6:	f002 fa33 	bl	8003360 <serial_writable>
 8000efa:	b330      	cbz	r0, 8000f4a <BufferedSerial::txIrq()+0x60>
 8000efc:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 8000f00:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8000f04:	429a      	cmp	r2, r3
 8000f06:	d016      	beq.n	8000f36 <BufferedSerial::txIrq()+0x4c>
 8000f08:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8000f0c:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 8000f10:	1c59      	adds	r1, r3, #1
 8000f12:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 8000f16:	5cd1      	ldrb	r1, [r2, r3]
 8000f18:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 8000f1c:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 8000f20:	3b01      	subs	r3, #1
 8000f22:	fbb0 f2f3 	udiv	r2, r0, r3
 8000f26:	fb03 0312 	mls	r3, r3, r2, r0
 8000f2a:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 8000f2e:	4628      	mov	r0, r5
 8000f30:	f002 fa20 	bl	8003374 <serial_putc>
 8000f34:	e7de      	b.n	8000ef4 <BufferedSerial::txIrq()+0xa>
 8000f36:	2300      	movs	r3, #0
 8000f38:	4620      	mov	r0, r4
 8000f3a:	2201      	movs	r2, #1
 8000f3c:	4669      	mov	r1, sp
 8000f3e:	9303      	str	r3, [sp, #12]
 8000f40:	f003 fb36 	bl	80045b0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000f44:	4668      	mov	r0, sp
 8000f46:	f7ff ffc8 	bl	8000eda <mbed::Callback<void ()>::~Callback()>
 8000f4a:	b005      	add	sp, #20
 8000f4c:	bd30      	pop	{r4, r5, pc}

08000f4e <mbed::Callback<void (int)>::~Callback()>:
 8000f4e:	68c3      	ldr	r3, [r0, #12]
 8000f50:	b510      	push	{r4, lr}
 8000f52:	4604      	mov	r4, r0
 8000f54:	b10b      	cbz	r3, 8000f5a <mbed::Callback<void (int)>::~Callback()+0xc>
 8000f56:	689b      	ldr	r3, [r3, #8]
 8000f58:	4798      	blx	r3
 8000f5a:	4620      	mov	r0, r4
 8000f5c:	bd10      	pop	{r4, pc}
	...

08000f60 <mbed::SerialBase::~SerialBase()>:
 8000f60:	b570      	push	{r4, r5, r6, lr}
 8000f62:	4606      	mov	r6, r0
 8000f64:	4b0b      	ldr	r3, [pc, #44]	; (8000f94 <mbed::SerialBase::~SerialBase()+0x34>)
 8000f66:	f846 3b98 	str.w	r3, [r6], #152
 8000f6a:	4604      	mov	r4, r0
 8000f6c:	b146      	cbz	r6, 8000f80 <mbed::SerialBase::~SerialBase()+0x20>
 8000f6e:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 8000f72:	42b5      	cmp	r5, r6
 8000f74:	d004      	beq.n	8000f80 <mbed::SerialBase::~SerialBase()+0x20>
 8000f76:	3d10      	subs	r5, #16
 8000f78:	4628      	mov	r0, r5
 8000f7a:	f7ff ffae 	bl	8000eda <mbed::Callback<void ()>::~Callback()>
 8000f7e:	e7f8      	b.n	8000f72 <mbed::SerialBase::~SerialBase()+0x12>
 8000f80:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8000f84:	f7ff ffe3 	bl	8000f4e <mbed::Callback<void (int)>::~Callback()>
 8000f88:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8000f8c:	f7ff ffdf 	bl	8000f4e <mbed::Callback<void (int)>::~Callback()>
 8000f90:	4620      	mov	r0, r4
 8000f92:	bd70      	pop	{r4, r5, r6, pc}
 8000f94:	08005edc 	.word	0x08005edc

08000f98 <mbed::SerialBase::~SerialBase()>:
 8000f98:	b510      	push	{r4, lr}
 8000f9a:	4604      	mov	r4, r0
 8000f9c:	f7ff ffe0 	bl	8000f60 <mbed::SerialBase::~SerialBase()>
 8000fa0:	4620      	mov	r0, r4
 8000fa2:	f003 fcad 	bl	8004900 <operator delete(void*)>
 8000fa6:	4620      	mov	r0, r4
 8000fa8:	bd10      	pop	{r4, pc}
	...

08000fac <BufferedSerial::~BufferedSerial()>:
 8000fac:	b530      	push	{r4, r5, lr}
 8000fae:	4b13      	ldr	r3, [pc, #76]	; (8000ffc <BufferedSerial::~BufferedSerial()+0x50>)
 8000fb0:	6003      	str	r3, [r0, #0]
 8000fb2:	b085      	sub	sp, #20
 8000fb4:	2500      	movs	r5, #0
 8000fb6:	462a      	mov	r2, r5
 8000fb8:	4669      	mov	r1, sp
 8000fba:	4604      	mov	r4, r0
 8000fbc:	9503      	str	r5, [sp, #12]
 8000fbe:	f003 faf7 	bl	80045b0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000fc2:	4668      	mov	r0, sp
 8000fc4:	f7ff ff89 	bl	8000eda <mbed::Callback<void ()>::~Callback()>
 8000fc8:	2201      	movs	r2, #1
 8000fca:	4669      	mov	r1, sp
 8000fcc:	4620      	mov	r0, r4
 8000fce:	9503      	str	r5, [sp, #12]
 8000fd0:	f003 faee 	bl	80045b0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000fd4:	4668      	mov	r0, sp
 8000fd6:	f7ff ff80 	bl	8000eda <mbed::Callback<void ()>::~Callback()>
 8000fda:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8000fde:	f000 f923 	bl	8001228 <Buffer<char>::~Buffer()>
 8000fe2:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8000fe6:	f000 f91f 	bl	8001228 <Buffer<char>::~Buffer()>
 8000fea:	4b05      	ldr	r3, [pc, #20]	; (8001000 <BufferedSerial::~BufferedSerial()+0x54>)
 8000fec:	6023      	str	r3, [r4, #0]
 8000fee:	4620      	mov	r0, r4
 8000ff0:	f7ff ffb6 	bl	8000f60 <mbed::SerialBase::~SerialBase()>
 8000ff4:	4620      	mov	r0, r4
 8000ff6:	b005      	add	sp, #20
 8000ff8:	bd30      	pop	{r4, r5, pc}
 8000ffa:	bf00      	nop
 8000ffc:	08005b6c 	.word	0x08005b6c
 8001000:	08005ec4 	.word	0x08005ec4

08001004 <BufferedSerial::~BufferedSerial()>:
 8001004:	b510      	push	{r4, lr}
 8001006:	4604      	mov	r4, r0
 8001008:	f7ff ffd0 	bl	8000fac <BufferedSerial::~BufferedSerial()>
 800100c:	4620      	mov	r0, r4
 800100e:	f003 fc77 	bl	8004900 <operator delete(void*)>
 8001012:	4620      	mov	r0, r4
 8001014:	bd10      	pop	{r4, pc}
	...

08001018 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 8001018:	b510      	push	{r4, lr}
 800101a:	b086      	sub	sp, #24
 800101c:	e88d 000c 	stmia.w	sp, {r2, r3}
 8001020:	9b01      	ldr	r3, [sp, #4]
 8001022:	9202      	str	r2, [sp, #8]
 8001024:	9303      	str	r3, [sp, #12]
 8001026:	9104      	str	r1, [sp, #16]
 8001028:	4b05      	ldr	r3, [pc, #20]	; (8001040 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 800102a:	f89d 2020 	ldrb.w	r2, [sp, #32]
 800102e:	9305      	str	r3, [sp, #20]
 8001030:	a902      	add	r1, sp, #8
 8001032:	f003 fabd 	bl	80045b0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001036:	a802      	add	r0, sp, #8
 8001038:	f7ff ff4f 	bl	8000eda <mbed::Callback<void ()>::~Callback()>
 800103c:	b006      	add	sp, #24
 800103e:	bd10      	pop	{r4, pc}
 8001040:	08005adc 	.word	0x08005adc

08001044 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 8001044:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8001046:	4604      	mov	r4, r0
 8001048:	461d      	mov	r5, r3
 800104a:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 800104e:	9e08      	ldr	r6, [sp, #32]
 8001050:	f003 f9f4 	bl	800443c <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 8001054:	4620      	mov	r0, r4
 8001056:	4b0f      	ldr	r3, [pc, #60]	; (8001094 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8001058:	f840 3bbc 	str.w	r3, [r0], #188
 800105c:	4629      	mov	r1, r5
 800105e:	f000 f8f2 	bl	8001246 <Buffer<char>::Buffer(unsigned long)>
 8001062:	fb06 f105 	mul.w	r1, r6, r5
 8001066:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800106a:	f000 f8ec 	bl	8001246 <Buffer<char>::Buffer(unsigned long)>
 800106e:	4b0a      	ldr	r3, [pc, #40]	; (8001098 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 8001070:	9302      	str	r3, [sp, #8]
 8001072:	2300      	movs	r3, #0
 8001074:	9303      	str	r3, [sp, #12]
 8001076:	9300      	str	r3, [sp, #0]
 8001078:	ab04      	add	r3, sp, #16
 800107a:	4620      	mov	r0, r4
 800107c:	e913 000c 	ldmdb	r3, {r2, r3}
 8001080:	4621      	mov	r1, r4
 8001082:	f7ff ffc9 	bl	8001018 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001086:	4620      	mov	r0, r4
 8001088:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 800108c:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 8001090:	b004      	add	sp, #16
 8001092:	bd70      	pop	{r4, r5, r6, pc}
 8001094:	08005b6c 	.word	0x08005b6c
 8001098:	08001103 	.word	0x08001103

0800109c <BufferedSerial::prime()>:
 800109c:	b570      	push	{r4, r5, r6, lr}
 800109e:	4604      	mov	r4, r0
 80010a0:	b086      	sub	sp, #24
 80010a2:	304c      	adds	r0, #76	; 0x4c
 80010a4:	f002 f95c 	bl	8003360 <serial_writable>
 80010a8:	b1c0      	cbz	r0, 80010dc <BufferedSerial::prime()+0x40>
 80010aa:	ad02      	add	r5, sp, #8
 80010ac:	2201      	movs	r2, #1
 80010ae:	4629      	mov	r1, r5
 80010b0:	2600      	movs	r6, #0
 80010b2:	4620      	mov	r0, r4
 80010b4:	9605      	str	r6, [sp, #20]
 80010b6:	f003 fa7b 	bl	80045b0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80010ba:	4628      	mov	r0, r5
 80010bc:	f7ff ff0d 	bl	8000eda <mbed::Callback<void ()>::~Callback()>
 80010c0:	4620      	mov	r0, r4
 80010c2:	f7ff ff12 	bl	8000eea <BufferedSerial::txIrq()>
 80010c6:	4b06      	ldr	r3, [pc, #24]	; (80010e0 <BufferedSerial::prime()+0x44>)
 80010c8:	9302      	str	r3, [sp, #8]
 80010ca:	2301      	movs	r3, #1
 80010cc:	9603      	str	r6, [sp, #12]
 80010ce:	9300      	str	r3, [sp, #0]
 80010d0:	e895 000c 	ldmia.w	r5, {r2, r3}
 80010d4:	4621      	mov	r1, r4
 80010d6:	4620      	mov	r0, r4
 80010d8:	f7ff ff9e 	bl	8001018 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 80010dc:	b006      	add	sp, #24
 80010de:	bd70      	pop	{r4, r5, r6, pc}
 80010e0:	08000eeb 	.word	0x08000eeb

080010e4 <Buffer<char>::put(char)>:
 80010e4:	6843      	ldr	r3, [r0, #4]
 80010e6:	6802      	ldr	r2, [r0, #0]
 80010e8:	b510      	push	{r4, lr}
 80010ea:	1c5c      	adds	r4, r3, #1
 80010ec:	6044      	str	r4, [r0, #4]
 80010ee:	54d1      	strb	r1, [r2, r3]
 80010f0:	68c3      	ldr	r3, [r0, #12]
 80010f2:	6841      	ldr	r1, [r0, #4]
 80010f4:	3b01      	subs	r3, #1
 80010f6:	fbb1 f2f3 	udiv	r2, r1, r3
 80010fa:	fb03 1312 	mls	r3, r3, r2, r1
 80010fe:	6043      	str	r3, [r0, #4]
 8001100:	bd10      	pop	{r4, pc}

08001102 <BufferedSerial::rxIrq()>:
 8001102:	b538      	push	{r3, r4, r5, lr}
 8001104:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8001108:	4604      	mov	r4, r0
 800110a:	4628      	mov	r0, r5
 800110c:	f002 f90c 	bl	8003328 <serial_readable>
 8001110:	b138      	cbz	r0, 8001122 <BufferedSerial::rxIrq()+0x20>
 8001112:	4628      	mov	r0, r5
 8001114:	f002 f912 	bl	800333c <serial_getc>
 8001118:	b2c1      	uxtb	r1, r0
 800111a:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800111e:	f7ff ffe1 	bl	80010e4 <Buffer<char>::put(char)>
 8001122:	bd38      	pop	{r3, r4, r5, pc}

08001124 <BufferedSerial::putc(int)>:
 8001124:	b538      	push	{r3, r4, r5, lr}
 8001126:	4605      	mov	r5, r0
 8001128:	460c      	mov	r4, r1
 800112a:	30cc      	adds	r0, #204	; 0xcc
 800112c:	b2c9      	uxtb	r1, r1
 800112e:	f7ff ffd9 	bl	80010e4 <Buffer<char>::put(char)>
 8001132:	4628      	mov	r0, r5
 8001134:	f7ff ffb2 	bl	800109c <BufferedSerial::prime()>
 8001138:	4620      	mov	r0, r4
 800113a:	bd38      	pop	{r3, r4, r5, pc}

0800113c <BufferedSerial::puts(char const*)>:
 800113c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001140:	4607      	mov	r7, r0
 8001142:	460c      	mov	r4, r1
 8001144:	b1b1      	cbz	r1, 8001174 <BufferedSerial::puts(char const*)+0x38>
 8001146:	460d      	mov	r5, r1
 8001148:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 800114c:	462e      	mov	r6, r5
 800114e:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001152:	b121      	cbz	r1, 800115e <BufferedSerial::puts(char const*)+0x22>
 8001154:	4640      	mov	r0, r8
 8001156:	f7ff ffc5 	bl	80010e4 <Buffer<char>::put(char)>
 800115a:	4635      	mov	r5, r6
 800115c:	e7f6      	b.n	800114c <BufferedSerial::puts(char const*)+0x10>
 800115e:	210a      	movs	r1, #10
 8001160:	4640      	mov	r0, r8
 8001162:	f7ff ffbf 	bl	80010e4 <Buffer<char>::put(char)>
 8001166:	1b2c      	subs	r4, r5, r4
 8001168:	4638      	mov	r0, r7
 800116a:	f7ff ff97 	bl	800109c <BufferedSerial::prime()>
 800116e:	1c60      	adds	r0, r4, #1
 8001170:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001174:	4608      	mov	r0, r1
 8001176:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800117a <BufferedSerial::write(void const*, unsigned int)>:
 800117a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800117e:	4607      	mov	r7, r0
 8001180:	460d      	mov	r5, r1
 8001182:	b191      	cbz	r1, 80011aa <BufferedSerial::write(void const*, unsigned int)+0x30>
 8001184:	b1a2      	cbz	r2, 80011b0 <BufferedSerial::write(void const*, unsigned int)+0x36>
 8001186:	188c      	adds	r4, r1, r2
 8001188:	460e      	mov	r6, r1
 800118a:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 800118e:	42b4      	cmp	r4, r6
 8001190:	d005      	beq.n	800119e <BufferedSerial::write(void const*, unsigned int)+0x24>
 8001192:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001196:	4640      	mov	r0, r8
 8001198:	f7ff ffa4 	bl	80010e4 <Buffer<char>::put(char)>
 800119c:	e7f7      	b.n	800118e <BufferedSerial::write(void const*, unsigned int)+0x14>
 800119e:	4638      	mov	r0, r7
 80011a0:	f7ff ff7c 	bl	800109c <BufferedSerial::prime()>
 80011a4:	1b60      	subs	r0, r4, r5
 80011a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80011aa:	4608      	mov	r0, r1
 80011ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80011b0:	4610      	mov	r0, r2
 80011b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080011b8 <BufferedSerial::printf(char const*, ...)>:
 80011b8:	b40e      	push	{r1, r2, r3}
 80011ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80011be:	b085      	sub	sp, #20
 80011c0:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 80011c4:	af02      	add	r7, sp, #8
 80011c6:	1dd3      	adds	r3, r2, #7
 80011c8:	f023 0307 	bic.w	r3, r3, #7
 80011cc:	f107 0424 	add.w	r4, r7, #36	; 0x24
 80011d0:	ebad 0d03 	sub.w	sp, sp, r3
 80011d4:	f854 8b04 	ldr.w	r8, [r4], #4
 80011d8:	ae02      	add	r6, sp, #8
 80011da:	4605      	mov	r5, r0
 80011dc:	2100      	movs	r1, #0
 80011de:	4630      	mov	r0, r6
 80011e0:	f003 fee3 	bl	8004faa <memset>
 80011e4:	4622      	mov	r2, r4
 80011e6:	4641      	mov	r1, r8
 80011e8:	4630      	mov	r0, r6
 80011ea:	607c      	str	r4, [r7, #4]
 80011ec:	f004 f9ca 	bl	8005584 <vsiprintf>
 80011f0:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 80011f4:	4283      	cmp	r3, r0
 80011f6:	4602      	mov	r2, r0
 80011f8:	d20c      	bcs.n	8001214 <BufferedSerial::printf(char const*, ...)+0x5c>
 80011fa:	9000      	str	r0, [sp, #0]
 80011fc:	225d      	movs	r2, #93	; 0x5d
 80011fe:	4808      	ldr	r0, [pc, #32]	; (8001220 <BufferedSerial::printf(char const*, ...)+0x68>)
 8001200:	4908      	ldr	r1, [pc, #32]	; (8001224 <BufferedSerial::printf(char const*, ...)+0x6c>)
 8001202:	f000 f91d 	bl	8001440 <error>
 8001206:	2000      	movs	r0, #0
 8001208:	370c      	adds	r7, #12
 800120a:	46bd      	mov	sp, r7
 800120c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001210:	b003      	add	sp, #12
 8001212:	4770      	bx	lr
 8001214:	4631      	mov	r1, r6
 8001216:	4628      	mov	r0, r5
 8001218:	f7ff ffaf 	bl	800117a <BufferedSerial::write(void const*, unsigned int)>
 800121c:	e7f4      	b.n	8001208 <BufferedSerial::printf(char const*, ...)+0x50>
 800121e:	bf00      	nop
 8001220:	08005b28 	.word	0x08005b28
 8001224:	08005ae8 	.word	0x08005ae8

08001228 <Buffer<char>::~Buffer()>:
 8001228:	b510      	push	{r4, lr}
 800122a:	4604      	mov	r4, r0
 800122c:	6800      	ldr	r0, [r0, #0]
 800122e:	b108      	cbz	r0, 8001234 <Buffer<char>::~Buffer()+0xc>
 8001230:	f003 fb62 	bl	80048f8 <operator delete[](void*)>
 8001234:	4620      	mov	r0, r4
 8001236:	bd10      	pop	{r4, pc}

08001238 <Buffer<char>::clear()>:
 8001238:	2100      	movs	r1, #0
 800123a:	6041      	str	r1, [r0, #4]
 800123c:	68c2      	ldr	r2, [r0, #12]
 800123e:	6081      	str	r1, [r0, #8]
 8001240:	6800      	ldr	r0, [r0, #0]
 8001242:	f003 beb2 	b.w	8004faa <memset>

08001246 <Buffer<char>::Buffer(unsigned long)>:
 8001246:	b538      	push	{r3, r4, r5, lr}
 8001248:	4604      	mov	r4, r0
 800124a:	4608      	mov	r0, r1
 800124c:	460d      	mov	r5, r1
 800124e:	f003 fb47 	bl	80048e0 <operator new[](unsigned int)>
 8001252:	60e5      	str	r5, [r4, #12]
 8001254:	6020      	str	r0, [r4, #0]
 8001256:	4620      	mov	r0, r4
 8001258:	f7ff ffee 	bl	8001238 <Buffer<char>::clear()>
 800125c:	4620      	mov	r0, r4
 800125e:	bd38      	pop	{r3, r4, r5, pc}

08001260 <_gpio_init_out.part.2>:
 8001260:	b538      	push	{r3, r4, r5, lr}
 8001262:	4604      	mov	r4, r0
 8001264:	460d      	mov	r5, r1
 8001266:	6803      	ldr	r3, [r0, #0]
 8001268:	b15a      	cbz	r2, 8001282 <_gpio_init_out.part.2+0x22>
 800126a:	6882      	ldr	r2, [r0, #8]
 800126c:	6013      	str	r3, [r2, #0]
 800126e:	4620      	mov	r0, r4
 8001270:	2101      	movs	r1, #1
 8001272:	f001 fcbd 	bl	8002bf0 <gpio_dir>
 8001276:	4629      	mov	r1, r5
 8001278:	4620      	mov	r0, r4
 800127a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800127e:	f001 bcb3 	b.w	8002be8 <gpio_mode>
 8001282:	68c2      	ldr	r2, [r0, #12]
 8001284:	041b      	lsls	r3, r3, #16
 8001286:	e7f1      	b.n	800126c <_gpio_init_out.part.2+0xc>

08001288 <gpio_init_out_ex>:
 8001288:	b570      	push	{r4, r5, r6, lr}
 800128a:	460e      	mov	r6, r1
 800128c:	4604      	mov	r4, r0
 800128e:	4615      	mov	r5, r2
 8001290:	f001 fc8a 	bl	8002ba8 <gpio_init>
 8001294:	3601      	adds	r6, #1
 8001296:	d006      	beq.n	80012a6 <gpio_init_out_ex+0x1e>
 8001298:	462a      	mov	r2, r5
 800129a:	4620      	mov	r0, r4
 800129c:	2100      	movs	r1, #0
 800129e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80012a2:	f7ff bfdd 	b.w	8001260 <_gpio_init_out.part.2>
 80012a6:	bd70      	pop	{r4, r5, r6, pc}

080012a8 <gpio_init_out>:
 80012a8:	2200      	movs	r2, #0
 80012aa:	f7ff bfed 	b.w	8001288 <gpio_init_out_ex>
	...

080012b0 <get_us_ticker_data>:
 80012b0:	4800      	ldr	r0, [pc, #0]	; (80012b4 <get_us_ticker_data+0x4>)
 80012b2:	4770      	bx	lr
 80012b4:	08005b98 	.word	0x08005b98

080012b8 <us_ticker_irq_handler>:
 80012b8:	4801      	ldr	r0, [pc, #4]	; (80012c0 <us_ticker_irq_handler+0x8>)
 80012ba:	f000 b803 	b.w	80012c4 <ticker_irq_handler>
 80012be:	bf00      	nop
 80012c0:	08005b98 	.word	0x08005b98

080012c4 <ticker_irq_handler>:
 80012c4:	6803      	ldr	r3, [r0, #0]
 80012c6:	b570      	push	{r4, r5, r6, lr}
 80012c8:	68db      	ldr	r3, [r3, #12]
 80012ca:	4604      	mov	r4, r0
 80012cc:	4798      	blx	r3
 80012ce:	6863      	ldr	r3, [r4, #4]
 80012d0:	685a      	ldr	r2, [r3, #4]
 80012d2:	6823      	ldr	r3, [r4, #0]
 80012d4:	b91a      	cbnz	r2, 80012de <ticker_irq_handler+0x1a>
 80012d6:	689b      	ldr	r3, [r3, #8]
 80012d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80012dc:	4718      	bx	r3
 80012de:	685b      	ldr	r3, [r3, #4]
 80012e0:	6815      	ldr	r5, [r2, #0]
 80012e2:	4798      	blx	r3
 80012e4:	6863      	ldr	r3, [r4, #4]
 80012e6:	1a28      	subs	r0, r5, r0
 80012e8:	2800      	cmp	r0, #0
 80012ea:	685a      	ldr	r2, [r3, #4]
 80012ec:	dc07      	bgt.n	80012fe <ticker_irq_handler+0x3a>
 80012ee:	6891      	ldr	r1, [r2, #8]
 80012f0:	6059      	str	r1, [r3, #4]
 80012f2:	681b      	ldr	r3, [r3, #0]
 80012f4:	2b00      	cmp	r3, #0
 80012f6:	d0ea      	beq.n	80012ce <ticker_irq_handler+0xa>
 80012f8:	6850      	ldr	r0, [r2, #4]
 80012fa:	4798      	blx	r3
 80012fc:	e7e7      	b.n	80012ce <ticker_irq_handler+0xa>
 80012fe:	6823      	ldr	r3, [r4, #0]
 8001300:	6810      	ldr	r0, [r2, #0]
 8001302:	691b      	ldr	r3, [r3, #16]
 8001304:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001308:	4718      	bx	r3

0800130a <ticker_read>:
 800130a:	6803      	ldr	r3, [r0, #0]
 800130c:	685b      	ldr	r3, [r3, #4]
 800130e:	4718      	bx	r3

08001310 <pinmap_pinout>:
 8001310:	b510      	push	{r4, lr}
 8001312:	4604      	mov	r4, r0
 8001314:	3001      	adds	r0, #1
 8001316:	d10d      	bne.n	8001334 <pinmap_pinout+0x24>
 8001318:	bd10      	pop	{r4, pc}
 800131a:	429c      	cmp	r4, r3
 800131c:	d109      	bne.n	8001332 <pinmap_pinout+0x22>
 800131e:	4620      	mov	r0, r4
 8001320:	6889      	ldr	r1, [r1, #8]
 8001322:	f001 fcfd 	bl	8002d20 <pin_function>
 8001326:	4620      	mov	r0, r4
 8001328:	2100      	movs	r1, #0
 800132a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800132e:	f001 bd7b 	b.w	8002e28 <pin_mode>
 8001332:	310c      	adds	r1, #12
 8001334:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001338:	1c5a      	adds	r2, r3, #1
 800133a:	d1ee      	bne.n	800131a <pinmap_pinout+0xa>
 800133c:	4802      	ldr	r0, [pc, #8]	; (8001348 <pinmap_pinout+0x38>)
 800133e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001342:	f000 b87d 	b.w	8001440 <error>
 8001346:	bf00      	nop
 8001348:	08005c03 	.word	0x08005c03

0800134c <pinmap_merge>:
 800134c:	4288      	cmp	r0, r1
 800134e:	b508      	push	{r3, lr}
 8001350:	d008      	beq.n	8001364 <pinmap_merge+0x18>
 8001352:	1c43      	adds	r3, r0, #1
 8001354:	d006      	beq.n	8001364 <pinmap_merge+0x18>
 8001356:	3101      	adds	r1, #1
 8001358:	d006      	beq.n	8001368 <pinmap_merge+0x1c>
 800135a:	4804      	ldr	r0, [pc, #16]	; (800136c <pinmap_merge+0x20>)
 800135c:	f000 f870 	bl	8001440 <error>
 8001360:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001364:	4608      	mov	r0, r1
 8001366:	bd08      	pop	{r3, pc}
 8001368:	4601      	mov	r1, r0
 800136a:	e7fb      	b.n	8001364 <pinmap_merge+0x18>
 800136c:	08005bd2 	.word	0x08005bd2

08001370 <pinmap_find_peripheral>:
 8001370:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001374:	1c5a      	adds	r2, r3, #1
 8001376:	d101      	bne.n	800137c <pinmap_find_peripheral+0xc>
 8001378:	4618      	mov	r0, r3
 800137a:	4770      	bx	lr
 800137c:	4283      	cmp	r3, r0
 800137e:	d101      	bne.n	8001384 <pinmap_find_peripheral+0x14>
 8001380:	6848      	ldr	r0, [r1, #4]
 8001382:	4770      	bx	lr
 8001384:	310c      	adds	r1, #12
 8001386:	e7f3      	b.n	8001370 <pinmap_find_peripheral>

08001388 <pinmap_peripheral>:
 8001388:	1c42      	adds	r2, r0, #1
 800138a:	b510      	push	{r4, lr}
 800138c:	4604      	mov	r4, r0
 800138e:	d007      	beq.n	80013a0 <pinmap_peripheral+0x18>
 8001390:	f7ff ffee 	bl	8001370 <pinmap_find_peripheral>
 8001394:	1c43      	adds	r3, r0, #1
 8001396:	4604      	mov	r4, r0
 8001398:	d102      	bne.n	80013a0 <pinmap_peripheral+0x18>
 800139a:	4802      	ldr	r0, [pc, #8]	; (80013a4 <pinmap_peripheral+0x1c>)
 800139c:	f000 f850 	bl	8001440 <error>
 80013a0:	4620      	mov	r0, r4
 80013a2:	bd10      	pop	{r4, pc}
 80013a4:	08005be3 	.word	0x08005be3

080013a8 <pinmap_find_function>:
 80013a8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80013ac:	1c5a      	adds	r2, r3, #1
 80013ae:	d101      	bne.n	80013b4 <pinmap_find_function+0xc>
 80013b0:	4618      	mov	r0, r3
 80013b2:	4770      	bx	lr
 80013b4:	4283      	cmp	r3, r0
 80013b6:	d101      	bne.n	80013bc <pinmap_find_function+0x14>
 80013b8:	6888      	ldr	r0, [r1, #8]
 80013ba:	4770      	bx	lr
 80013bc:	310c      	adds	r1, #12
 80013be:	e7f3      	b.n	80013a8 <pinmap_find_function>

080013c0 <pinmap_function>:
 80013c0:	1c42      	adds	r2, r0, #1
 80013c2:	b510      	push	{r4, lr}
 80013c4:	4604      	mov	r4, r0
 80013c6:	d007      	beq.n	80013d8 <pinmap_function+0x18>
 80013c8:	f7ff ffee 	bl	80013a8 <pinmap_find_function>
 80013cc:	1c43      	adds	r3, r0, #1
 80013ce:	4604      	mov	r4, r0
 80013d0:	d102      	bne.n	80013d8 <pinmap_function+0x18>
 80013d2:	4802      	ldr	r0, [pc, #8]	; (80013dc <pinmap_function+0x1c>)
 80013d4:	f000 f834 	bl	8001440 <error>
 80013d8:	4620      	mov	r0, r4
 80013da:	bd10      	pop	{r4, pc}
 80013dc:	08005bb4 	.word	0x08005bb4

080013e0 <core_util_are_interrupts_enabled>:
 80013e0:	f3ef 8010 	mrs	r0, PRIMASK
 80013e4:	43c0      	mvns	r0, r0
 80013e6:	f000 0001 	and.w	r0, r0, #1
 80013ea:	4770      	bx	lr

080013ec <core_util_critical_section_enter>:
 80013ec:	b508      	push	{r3, lr}
 80013ee:	f7ff fff7 	bl	80013e0 <core_util_are_interrupts_enabled>
 80013f2:	b672      	cpsid	i
 80013f4:	4b06      	ldr	r3, [pc, #24]	; (8001410 <core_util_critical_section_enter+0x24>)
 80013f6:	681a      	ldr	r2, [r3, #0]
 80013f8:	b922      	cbnz	r2, 8001404 <core_util_critical_section_enter+0x18>
 80013fa:	f080 0001 	eor.w	r0, r0, #1
 80013fe:	4a05      	ldr	r2, [pc, #20]	; (8001414 <core_util_critical_section_enter+0x28>)
 8001400:	b2c0      	uxtb	r0, r0
 8001402:	7010      	strb	r0, [r2, #0]
 8001404:	681a      	ldr	r2, [r3, #0]
 8001406:	681a      	ldr	r2, [r3, #0]
 8001408:	3201      	adds	r2, #1
 800140a:	601a      	str	r2, [r3, #0]
 800140c:	bd08      	pop	{r3, pc}
 800140e:	bf00      	nop
 8001410:	200008b4 	.word	0x200008b4
 8001414:	200008b0 	.word	0x200008b0

08001418 <core_util_critical_section_exit>:
 8001418:	b508      	push	{r3, lr}
 800141a:	4b07      	ldr	r3, [pc, #28]	; (8001438 <core_util_critical_section_exit+0x20>)
 800141c:	681a      	ldr	r2, [r3, #0]
 800141e:	b152      	cbz	r2, 8001436 <core_util_critical_section_exit+0x1e>
 8001420:	f7ff ffde 	bl	80013e0 <core_util_are_interrupts_enabled>
 8001424:	681a      	ldr	r2, [r3, #0]
 8001426:	3a01      	subs	r2, #1
 8001428:	601a      	str	r2, [r3, #0]
 800142a:	681b      	ldr	r3, [r3, #0]
 800142c:	b91b      	cbnz	r3, 8001436 <core_util_critical_section_exit+0x1e>
 800142e:	4b03      	ldr	r3, [pc, #12]	; (800143c <core_util_critical_section_exit+0x24>)
 8001430:	781b      	ldrb	r3, [r3, #0]
 8001432:	b903      	cbnz	r3, 8001436 <core_util_critical_section_exit+0x1e>
 8001434:	b662      	cpsie	i
 8001436:	bd08      	pop	{r3, pc}
 8001438:	200008b4 	.word	0x200008b4
 800143c:	200008b0 	.word	0x200008b0

08001440 <error>:
 8001440:	b40f      	push	{r0, r1, r2, r3}
 8001442:	2001      	movs	r0, #1
 8001444:	b508      	push	{r3, lr}
 8001446:	f003 fa3f 	bl	80048c8 <__wrap_exit>

0800144a <mbed_die>:
 800144a:	b500      	push	{lr}
 800144c:	b089      	sub	sp, #36	; 0x24
 800144e:	f7ff ffcd 	bl	80013ec <core_util_critical_section_enter>
 8001452:	2105      	movs	r1, #5
 8001454:	a801      	add	r0, sp, #4
 8001456:	f7ff ff27 	bl	80012a8 <gpio_init_out>
 800145a:	9b03      	ldr	r3, [sp, #12]
 800145c:	9a01      	ldr	r2, [sp, #4]
 800145e:	601a      	str	r2, [r3, #0]
 8001460:	2096      	movs	r0, #150	; 0x96
 8001462:	f003 f92d 	bl	80046c0 <wait_ms>
 8001466:	9b01      	ldr	r3, [sp, #4]
 8001468:	9a04      	ldr	r2, [sp, #16]
 800146a:	041b      	lsls	r3, r3, #16
 800146c:	6013      	str	r3, [r2, #0]
 800146e:	2096      	movs	r0, #150	; 0x96
 8001470:	f003 f926 	bl	80046c0 <wait_ms>
 8001474:	e7f1      	b.n	800145a <mbed_die+0x10>

08001476 <default_idle_hook>:
 8001476:	f001 bbe4 	b.w	8002c42 <hal_sleep>
	...

0800147c <rtos_idle_loop>:
 800147c:	b508      	push	{r3, lr}
 800147e:	4c02      	ldr	r4, [pc, #8]	; (8001488 <rtos_idle_loop+0xc>)
 8001480:	6823      	ldr	r3, [r4, #0]
 8001482:	4798      	blx	r3
 8001484:	e7fc      	b.n	8001480 <rtos_idle_loop+0x4>
 8001486:	bf00      	nop
 8001488:	200001a4 	.word	0x200001a4

0800148c <pre_main>:
 800148c:	b508      	push	{r3, lr}
 800148e:	480b      	ldr	r0, [pc, #44]	; (80014bc <pre_main+0x30>)
 8001490:	f000 fe42 	bl	8002118 <osMutexCreate>
 8001494:	4b0a      	ldr	r3, [pc, #40]	; (80014c0 <pre_main+0x34>)
 8001496:	6018      	str	r0, [r3, #0]
 8001498:	480a      	ldr	r0, [pc, #40]	; (80014c4 <pre_main+0x38>)
 800149a:	f000 fe3d 	bl	8002118 <osMutexCreate>
 800149e:	4b0a      	ldr	r3, [pc, #40]	; (80014c8 <pre_main+0x3c>)
 80014a0:	6018      	str	r0, [r3, #0]
 80014a2:	480a      	ldr	r0, [pc, #40]	; (80014cc <pre_main+0x40>)
 80014a4:	f000 fe38 	bl	8002118 <osMutexCreate>
 80014a8:	4b09      	ldr	r3, [pc, #36]	; (80014d0 <pre_main+0x44>)
 80014aa:	6018      	str	r0, [r3, #0]
 80014ac:	f003 fcce 	bl	8004e4c <__libc_init_array>
 80014b0:	2100      	movs	r1, #0
 80014b2:	4608      	mov	r0, r1
 80014b4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80014b8:	f003 b9c9 	b.w	800484e <__wrap_main>
 80014bc:	08005c60 	.word	0x08005c60
 80014c0:	20001fcc 	.word	0x20001fcc
 80014c4:	08005c5c 	.word	0x08005c5c
 80014c8:	200008c0 	.word	0x200008c0
 80014cc:	08005c58 	.word	0x08005c58
 80014d0:	200008b8 	.word	0x200008b8

080014d4 <os_idle_demon>:
 80014d4:	f7ff bfd2 	b.w	800147c <rtos_idle_loop>

080014d8 <os_error>:
 80014d8:	b510      	push	{r4, lr}
 80014da:	4604      	mov	r4, r0
 80014dc:	f000 fd8a 	bl	8001ff4 <svcThreadGetId>
 80014e0:	4621      	mov	r1, r4
 80014e2:	4602      	mov	r2, r0
 80014e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80014e8:	4801      	ldr	r0, [pc, #4]	; (80014f0 <os_error+0x18>)
 80014ea:	f7ff bfa9 	b.w	8001440 <error>
 80014ee:	bf00      	nop
 80014f0:	08005c20 	.word	0x08005c20

080014f4 <sysThreadTerminate>:
 80014f4:	f003 ba06 	b.w	8004904 <thread_terminate_hook>

080014f8 <set_stack_heap>:
 80014f8:	4a0b      	ldr	r2, [pc, #44]	; (8001528 <set_stack_heap+0x30>)
 80014fa:	4b0c      	ldr	r3, [pc, #48]	; (800152c <set_stack_heap+0x34>)
 80014fc:	480c      	ldr	r0, [pc, #48]	; (8001530 <set_stack_heap+0x38>)
 80014fe:	b430      	push	{r4, r5}
 8001500:	601a      	str	r2, [r3, #0]
 8001502:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 8001506:	f503 33c0 	add.w	r3, r3, #98304	; 0x18000
 800150a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800150e:	4619      	mov	r1, r3
 8001510:	bf28      	it	cs
 8001512:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 8001516:	4d07      	ldr	r5, [pc, #28]	; (8001534 <set_stack_heap+0x3c>)
 8001518:	4c07      	ldr	r4, [pc, #28]	; (8001538 <set_stack_heap+0x40>)
 800151a:	6001      	str	r1, [r0, #0]
 800151c:	1a5b      	subs	r3, r3, r1
 800151e:	441a      	add	r2, r3
 8001520:	602a      	str	r2, [r5, #0]
 8001522:	6023      	str	r3, [r4, #0]
 8001524:	bc30      	pop	{r4, r5}
 8001526:	4770      	bx	lr
 8001528:	20002830 	.word	0x20002830
 800152c:	20001ce8 	.word	0x20001ce8
 8001530:	200008c4 	.word	0x200008c4
 8001534:	200008c8 	.word	0x200008c8
 8001538:	20001ce4 	.word	0x20001ce4

0800153c <software_init_hook_rtos>:
 800153c:	f000 fec0 	bl	80022c0 <osKernelInitialize>
 8001540:	f7ff ffda 	bl	80014f8 <set_stack_heap>
 8001544:	4803      	ldr	r0, [pc, #12]	; (8001554 <software_init_hook_rtos+0x18>)
 8001546:	2100      	movs	r1, #0
 8001548:	f000 fe6e 	bl	8002228 <osThreadCreate>
 800154c:	f000 fcd4 	bl	8001ef8 <osKernelStart>
 8001550:	e7fe      	b.n	8001550 <software_init_hook_rtos+0x14>
 8001552:	0000      	.short	0x0000
 8001554:	200001a8 	.word	0x200001a8

08001558 <__rtos_malloc_lock>:
 8001558:	4b02      	ldr	r3, [pc, #8]	; (8001564 <__rtos_malloc_lock+0xc>)
 800155a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800155e:	6818      	ldr	r0, [r3, #0]
 8001560:	f000 bdf8 	b.w	8002154 <osMutexWait>
 8001564:	200008c0 	.word	0x200008c0

08001568 <__rtos_malloc_unlock>:
 8001568:	4b01      	ldr	r3, [pc, #4]	; (8001570 <__rtos_malloc_unlock+0x8>)
 800156a:	6818      	ldr	r0, [r3, #0]
 800156c:	f000 be1a 	b.w	80021a4 <osMutexRelease>
 8001570:	200008c0 	.word	0x200008c0

08001574 <rt_put_prio>:
 8001574:	b530      	push	{r4, r5, lr}
 8001576:	7802      	ldrb	r2, [r0, #0]
 8001578:	788c      	ldrb	r4, [r1, #2]
 800157a:	6843      	ldr	r3, [r0, #4]
 800157c:	3a01      	subs	r2, #1
 800157e:	b2d2      	uxtb	r2, r2
 8001580:	b113      	cbz	r3, 8001588 <rt_put_prio+0x14>
 8001582:	789d      	ldrb	r5, [r3, #2]
 8001584:	42a5      	cmp	r5, r4
 8001586:	d207      	bcs.n	8001598 <rt_put_prio+0x24>
 8001588:	2a02      	cmp	r2, #2
 800158a:	604b      	str	r3, [r1, #4]
 800158c:	6041      	str	r1, [r0, #4]
 800158e:	d806      	bhi.n	800159e <rt_put_prio+0x2a>
 8001590:	b103      	cbz	r3, 8001594 <rt_put_prio+0x20>
 8001592:	6099      	str	r1, [r3, #8]
 8001594:	6088      	str	r0, [r1, #8]
 8001596:	bd30      	pop	{r4, r5, pc}
 8001598:	4618      	mov	r0, r3
 800159a:	685b      	ldr	r3, [r3, #4]
 800159c:	e7f0      	b.n	8001580 <rt_put_prio+0xc>
 800159e:	2300      	movs	r3, #0
 80015a0:	608b      	str	r3, [r1, #8]
 80015a2:	bd30      	pop	{r4, r5, pc}

080015a4 <rt_get_first>:
 80015a4:	7802      	ldrb	r2, [r0, #0]
 80015a6:	6843      	ldr	r3, [r0, #4]
 80015a8:	3a01      	subs	r2, #1
 80015aa:	6859      	ldr	r1, [r3, #4]
 80015ac:	6041      	str	r1, [r0, #4]
 80015ae:	2a02      	cmp	r2, #2
 80015b0:	f04f 0200 	mov.w	r2, #0
 80015b4:	d805      	bhi.n	80015c2 <rt_get_first+0x1e>
 80015b6:	b109      	cbz	r1, 80015bc <rt_get_first+0x18>
 80015b8:	6088      	str	r0, [r1, #8]
 80015ba:	605a      	str	r2, [r3, #4]
 80015bc:	609a      	str	r2, [r3, #8]
 80015be:	4618      	mov	r0, r3
 80015c0:	4770      	bx	lr
 80015c2:	605a      	str	r2, [r3, #4]
 80015c4:	e7fb      	b.n	80015be <rt_get_first+0x1a>
	...

080015c8 <rt_put_rdy_first>:
 80015c8:	4b03      	ldr	r3, [pc, #12]	; (80015d8 <rt_put_rdy_first+0x10>)
 80015ca:	685a      	ldr	r2, [r3, #4]
 80015cc:	6042      	str	r2, [r0, #4]
 80015ce:	2200      	movs	r2, #0
 80015d0:	6082      	str	r2, [r0, #8]
 80015d2:	6058      	str	r0, [r3, #4]
 80015d4:	4770      	bx	lr
 80015d6:	bf00      	nop
 80015d8:	200026c0 	.word	0x200026c0

080015dc <rt_put_dly>:
 80015dc:	4b10      	ldr	r3, [pc, #64]	; (8001620 <rt_put_dly+0x44>)
 80015de:	68da      	ldr	r2, [r3, #12]
 80015e0:	b510      	push	{r4, lr}
 80015e2:	b18a      	cbz	r2, 8001608 <rt_put_dly+0x2c>
 80015e4:	8a9a      	ldrh	r2, [r3, #20]
 80015e6:	68dc      	ldr	r4, [r3, #12]
 80015e8:	428a      	cmp	r2, r1
 80015ea:	d30c      	bcc.n	8001606 <rt_put_dly+0x2a>
 80015ec:	60c4      	str	r4, [r0, #12]
 80015ee:	60d8      	str	r0, [r3, #12]
 80015f0:	68c4      	ldr	r4, [r0, #12]
 80015f2:	6103      	str	r3, [r0, #16]
 80015f4:	b104      	cbz	r4, 80015f8 <rt_put_dly+0x1c>
 80015f6:	6120      	str	r0, [r4, #16]
 80015f8:	1a52      	subs	r2, r2, r1
 80015fa:	b292      	uxth	r2, r2
 80015fc:	8282      	strh	r2, [r0, #20]
 80015fe:	8a99      	ldrh	r1, [r3, #20]
 8001600:	1a8a      	subs	r2, r1, r2
 8001602:	829a      	strh	r2, [r3, #20]
 8001604:	bd10      	pop	{r4, pc}
 8001606:	b93c      	cbnz	r4, 8001618 <rt_put_dly+0x3c>
 8001608:	2400      	movs	r4, #0
 800160a:	1a8a      	subs	r2, r1, r2
 800160c:	60c4      	str	r4, [r0, #12]
 800160e:	60d8      	str	r0, [r3, #12]
 8001610:	6103      	str	r3, [r0, #16]
 8001612:	829a      	strh	r2, [r3, #20]
 8001614:	8284      	strh	r4, [r0, #20]
 8001616:	bd10      	pop	{r4, pc}
 8001618:	8aa3      	ldrh	r3, [r4, #20]
 800161a:	441a      	add	r2, r3
 800161c:	4623      	mov	r3, r4
 800161e:	e7e2      	b.n	80015e6 <rt_put_dly+0xa>
 8001620:	200026d8 	.word	0x200026d8

08001624 <rt_dec_dly>:
 8001624:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001628:	4d17      	ldr	r5, [pc, #92]	; (8001688 <rt_dec_dly+0x64>)
 800162a:	68eb      	ldr	r3, [r5, #12]
 800162c:	b153      	cbz	r3, 8001644 <rt_dec_dly+0x20>
 800162e:	8aab      	ldrh	r3, [r5, #20]
 8001630:	4f16      	ldr	r7, [pc, #88]	; (800168c <rt_dec_dly+0x68>)
 8001632:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8001690 <rt_dec_dly+0x6c>
 8001636:	3b01      	subs	r3, #1
 8001638:	82ab      	strh	r3, [r5, #20]
 800163a:	2600      	movs	r6, #0
 800163c:	8aaa      	ldrh	r2, [r5, #20]
 800163e:	b90a      	cbnz	r2, 8001644 <rt_dec_dly+0x20>
 8001640:	68ec      	ldr	r4, [r5, #12]
 8001642:	b90c      	cbnz	r4, 8001648 <rt_dec_dly+0x24>
 8001644:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001648:	68a3      	ldr	r3, [r4, #8]
 800164a:	b133      	cbz	r3, 800165a <rt_dec_dly+0x36>
 800164c:	6861      	ldr	r1, [r4, #4]
 800164e:	6059      	str	r1, [r3, #4]
 8001650:	6861      	ldr	r1, [r4, #4]
 8001652:	b109      	cbz	r1, 8001658 <rt_dec_dly+0x34>
 8001654:	608b      	str	r3, [r1, #8]
 8001656:	6062      	str	r2, [r4, #4]
 8001658:	60a6      	str	r6, [r4, #8]
 800165a:	4621      	mov	r1, r4
 800165c:	4638      	mov	r0, r7
 800165e:	f7ff ff89 	bl	8001574 <rt_put_prio>
 8001662:	8aa3      	ldrh	r3, [r4, #20]
 8001664:	82ab      	strh	r3, [r5, #20]
 8001666:	7863      	ldrb	r3, [r4, #1]
 8001668:	2b04      	cmp	r3, #4
 800166a:	bf01      	itttt	eq
 800166c:	f8d8 3000 	ldreq.w	r3, [r8]
 8001670:	8ae2      	ldrheq	r2, [r4, #22]
 8001672:	189b      	addeq	r3, r3, r2
 8001674:	82a3      	strheq	r3, [r4, #20]
 8001676:	2301      	movs	r3, #1
 8001678:	7063      	strb	r3, [r4, #1]
 800167a:	68e3      	ldr	r3, [r4, #12]
 800167c:	60eb      	str	r3, [r5, #12]
 800167e:	b10b      	cbz	r3, 8001684 <rt_dec_dly+0x60>
 8001680:	611d      	str	r5, [r3, #16]
 8001682:	60e6      	str	r6, [r4, #12]
 8001684:	6126      	str	r6, [r4, #16]
 8001686:	e7d9      	b.n	800163c <rt_dec_dly+0x18>
 8001688:	200026d8 	.word	0x200026d8
 800168c:	200026c0 	.word	0x200026c0
 8001690:	20002754 	.word	0x20002754

08001694 <rt_rmv_list>:
 8001694:	6883      	ldr	r3, [r0, #8]
 8001696:	b12b      	cbz	r3, 80016a4 <rt_rmv_list+0x10>
 8001698:	6842      	ldr	r2, [r0, #4]
 800169a:	605a      	str	r2, [r3, #4]
 800169c:	6842      	ldr	r2, [r0, #4]
 800169e:	b15a      	cbz	r2, 80016b8 <rt_rmv_list+0x24>
 80016a0:	6093      	str	r3, [r2, #8]
 80016a2:	4770      	bx	lr
 80016a4:	4b05      	ldr	r3, [pc, #20]	; (80016bc <rt_rmv_list+0x28>)
 80016a6:	685a      	ldr	r2, [r3, #4]
 80016a8:	4290      	cmp	r0, r2
 80016aa:	d102      	bne.n	80016b2 <rt_rmv_list+0x1e>
 80016ac:	6842      	ldr	r2, [r0, #4]
 80016ae:	605a      	str	r2, [r3, #4]
 80016b0:	4770      	bx	lr
 80016b2:	4613      	mov	r3, r2
 80016b4:	2a00      	cmp	r2, #0
 80016b6:	d1f6      	bne.n	80016a6 <rt_rmv_list+0x12>
 80016b8:	4770      	bx	lr
 80016ba:	bf00      	nop
 80016bc:	200026c0 	.word	0x200026c0

080016c0 <rt_resort_prio>:
 80016c0:	b510      	push	{r4, lr}
 80016c2:	6884      	ldr	r4, [r0, #8]
 80016c4:	4601      	mov	r1, r0
 80016c6:	b92c      	cbnz	r4, 80016d4 <rt_resort_prio+0x14>
 80016c8:	7843      	ldrb	r3, [r0, #1]
 80016ca:	2b01      	cmp	r3, #1
 80016cc:	d10d      	bne.n	80016ea <rt_resort_prio+0x2a>
 80016ce:	4c07      	ldr	r4, [pc, #28]	; (80016ec <rt_resort_prio+0x2c>)
 80016d0:	e003      	b.n	80016da <rt_resort_prio+0x1a>
 80016d2:	68a4      	ldr	r4, [r4, #8]
 80016d4:	7823      	ldrb	r3, [r4, #0]
 80016d6:	2b00      	cmp	r3, #0
 80016d8:	d0fb      	beq.n	80016d2 <rt_resort_prio+0x12>
 80016da:	4608      	mov	r0, r1
 80016dc:	f7ff ffda 	bl	8001694 <rt_rmv_list>
 80016e0:	4620      	mov	r0, r4
 80016e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80016e6:	f7ff bf45 	b.w	8001574 <rt_put_prio>
 80016ea:	bd10      	pop	{r4, pc}
 80016ec:	200026c0 	.word	0x200026c0

080016f0 <rt_rmv_dly>:
 80016f0:	6903      	ldr	r3, [r0, #16]
 80016f2:	b510      	push	{r4, lr}
 80016f4:	b163      	cbz	r3, 8001710 <rt_rmv_dly+0x20>
 80016f6:	68c2      	ldr	r2, [r0, #12]
 80016f8:	60da      	str	r2, [r3, #12]
 80016fa:	68c2      	ldr	r2, [r0, #12]
 80016fc:	b14a      	cbz	r2, 8001712 <rt_rmv_dly+0x22>
 80016fe:	8a99      	ldrh	r1, [r3, #20]
 8001700:	8a84      	ldrh	r4, [r0, #20]
 8001702:	4421      	add	r1, r4
 8001704:	8299      	strh	r1, [r3, #20]
 8001706:	6113      	str	r3, [r2, #16]
 8001708:	2300      	movs	r3, #0
 800170a:	60c3      	str	r3, [r0, #12]
 800170c:	2300      	movs	r3, #0
 800170e:	6103      	str	r3, [r0, #16]
 8001710:	bd10      	pop	{r4, pc}
 8001712:	829a      	strh	r2, [r3, #20]
 8001714:	e7fa      	b.n	800170c <rt_rmv_dly+0x1c>
	...

08001718 <rt_psq_enq>:
 8001718:	b470      	push	{r4, r5, r6}
 800171a:	4b11      	ldr	r3, [pc, #68]	; (8001760 <rt_psq_enq+0x48>)
 800171c:	78dd      	ldrb	r5, [r3, #3]
 800171e:	f3ef 8610 	mrs	r6, PRIMASK
 8001722:	f3ef 8210 	mrs	r2, PRIMASK
 8001726:	b672      	cpsid	i
 8001728:	789a      	ldrb	r2, [r3, #2]
 800172a:	4295      	cmp	r5, r2
 800172c:	d911      	bls.n	8001752 <rt_psq_enq+0x3a>
 800172e:	3201      	adds	r2, #1
 8001730:	709a      	strb	r2, [r3, #2]
 8001732:	781a      	ldrb	r2, [r3, #0]
 8001734:	1c54      	adds	r4, r2, #1
 8001736:	42a5      	cmp	r5, r4
 8001738:	bf08      	it	eq
 800173a:	2400      	moveq	r4, #0
 800173c:	701c      	strb	r4, [r3, #0]
 800173e:	b906      	cbnz	r6, 8001742 <rt_psq_enq+0x2a>
 8001740:	b662      	cpsie	i
 8001742:	4295      	cmp	r5, r2
 8001744:	d907      	bls.n	8001756 <rt_psq_enq+0x3e>
 8001746:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800174a:	bc70      	pop	{r4, r5, r6}
 800174c:	6058      	str	r0, [r3, #4]
 800174e:	6099      	str	r1, [r3, #8]
 8001750:	4770      	bx	lr
 8001752:	2e00      	cmp	r6, #0
 8001754:	d0f4      	beq.n	8001740 <rt_psq_enq+0x28>
 8001756:	2002      	movs	r0, #2
 8001758:	bc70      	pop	{r4, r5, r6}
 800175a:	f7ff bebd 	b.w	80014d8 <os_error>
 800175e:	bf00      	nop
 8001760:	20001f44 	.word	0x20001f44

08001764 <rt_mut_init>:
 8001764:	2303      	movs	r3, #3
 8001766:	7003      	strb	r3, [r0, #0]
 8001768:	2300      	movs	r3, #0
 800176a:	8043      	strh	r3, [r0, #2]
 800176c:	6043      	str	r3, [r0, #4]
 800176e:	6083      	str	r3, [r0, #8]
 8001770:	60c3      	str	r3, [r0, #12]
 8001772:	4770      	bx	lr

08001774 <rt_mut_release>:
 8001774:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001778:	8843      	ldrh	r3, [r0, #2]
 800177a:	4605      	mov	r5, r0
 800177c:	2b00      	cmp	r3, #0
 800177e:	d063      	beq.n	8001848 <rt_mut_release+0xd4>
 8001780:	4f32      	ldr	r7, [pc, #200]	; (800184c <rt_mut_release+0xd8>)
 8001782:	6881      	ldr	r1, [r0, #8]
 8001784:	683a      	ldr	r2, [r7, #0]
 8001786:	4291      	cmp	r1, r2
 8001788:	d15e      	bne.n	8001848 <rt_mut_release+0xd4>
 800178a:	3b01      	subs	r3, #1
 800178c:	b29b      	uxth	r3, r3
 800178e:	8043      	strh	r3, [r0, #2]
 8001790:	b11b      	cbz	r3, 800179a <rt_mut_release+0x26>
 8001792:	2400      	movs	r4, #0
 8001794:	4620      	mov	r0, r4
 8001796:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800179a:	6a0b      	ldr	r3, [r1, #32]
 800179c:	4298      	cmp	r0, r3
 800179e:	d129      	bne.n	80017f4 <rt_mut_release+0x80>
 80017a0:	68c3      	ldr	r3, [r0, #12]
 80017a2:	620b      	str	r3, [r1, #32]
 80017a4:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 80017a8:	6a0c      	ldr	r4, [r1, #32]
 80017aa:	bb5c      	cbnz	r4, 8001804 <rt_mut_release+0x90>
 80017ac:	708b      	strb	r3, [r1, #2]
 80017ae:	686a      	ldr	r2, [r5, #4]
 80017b0:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8001850 <rt_mut_release+0xdc>
 80017b4:	2a00      	cmp	r2, #0
 80017b6:	d03b      	beq.n	8001830 <rt_mut_release+0xbc>
 80017b8:	4628      	mov	r0, r5
 80017ba:	f7ff fef3 	bl	80015a4 <rt_get_first>
 80017be:	4621      	mov	r1, r4
 80017c0:	4606      	mov	r6, r0
 80017c2:	f000 f8c1 	bl	8001948 <rt_ret_val>
 80017c6:	4630      	mov	r0, r6
 80017c8:	f7ff ff92 	bl	80016f0 <rt_rmv_dly>
 80017cc:	6a33      	ldr	r3, [r6, #32]
 80017ce:	60eb      	str	r3, [r5, #12]
 80017d0:	f04f 0901 	mov.w	r9, #1
 80017d4:	6839      	ldr	r1, [r7, #0]
 80017d6:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80017da:	f8a5 9002 	strh.w	r9, [r5, #2]
 80017de:	60ae      	str	r6, [r5, #8]
 80017e0:	6235      	str	r5, [r6, #32]
 80017e2:	788a      	ldrb	r2, [r1, #2]
 80017e4:	789b      	ldrb	r3, [r3, #2]
 80017e6:	429a      	cmp	r2, r3
 80017e8:	d314      	bcc.n	8001814 <rt_mut_release+0xa0>
 80017ea:	4630      	mov	r0, r6
 80017ec:	f000 fe5c 	bl	80024a8 <rt_dispatch>
 80017f0:	e7d0      	b.n	8001794 <rt_mut_release+0x20>
 80017f2:	4613      	mov	r3, r2
 80017f4:	2b00      	cmp	r3, #0
 80017f6:	d0d5      	beq.n	80017a4 <rt_mut_release+0x30>
 80017f8:	68da      	ldr	r2, [r3, #12]
 80017fa:	4295      	cmp	r5, r2
 80017fc:	d1f9      	bne.n	80017f2 <rt_mut_release+0x7e>
 80017fe:	68ea      	ldr	r2, [r5, #12]
 8001800:	60da      	str	r2, [r3, #12]
 8001802:	e7cf      	b.n	80017a4 <rt_mut_release+0x30>
 8001804:	6862      	ldr	r2, [r4, #4]
 8001806:	b11a      	cbz	r2, 8001810 <rt_mut_release+0x9c>
 8001808:	7892      	ldrb	r2, [r2, #2]
 800180a:	4293      	cmp	r3, r2
 800180c:	bf38      	it	cc
 800180e:	4613      	movcc	r3, r2
 8001810:	68e4      	ldr	r4, [r4, #12]
 8001812:	e7ca      	b.n	80017aa <rt_mut_release+0x36>
 8001814:	4640      	mov	r0, r8
 8001816:	f7ff fead 	bl	8001574 <rt_put_prio>
 800181a:	4631      	mov	r1, r6
 800181c:	4640      	mov	r0, r8
 800181e:	f7ff fea9 	bl	8001574 <rt_put_prio>
 8001822:	683b      	ldr	r3, [r7, #0]
 8001824:	f883 9001 	strb.w	r9, [r3, #1]
 8001828:	f886 9001 	strb.w	r9, [r6, #1]
 800182c:	4620      	mov	r0, r4
 800182e:	e7dd      	b.n	80017ec <rt_mut_release+0x78>
 8001830:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8001834:	7892      	ldrb	r2, [r2, #2]
 8001836:	429a      	cmp	r2, r3
 8001838:	d9ab      	bls.n	8001792 <rt_mut_release+0x1e>
 800183a:	4640      	mov	r0, r8
 800183c:	f7ff fe9a 	bl	8001574 <rt_put_prio>
 8001840:	683b      	ldr	r3, [r7, #0]
 8001842:	2201      	movs	r2, #1
 8001844:	705a      	strb	r2, [r3, #1]
 8001846:	e7f1      	b.n	800182c <rt_mut_release+0xb8>
 8001848:	24ff      	movs	r4, #255	; 0xff
 800184a:	e7a3      	b.n	8001794 <rt_mut_release+0x20>
 800184c:	2000270c 	.word	0x2000270c
 8001850:	200026c0 	.word	0x200026c0

08001854 <rt_mut_wait>:
 8001854:	8843      	ldrh	r3, [r0, #2]
 8001856:	b570      	push	{r4, r5, r6, lr}
 8001858:	4604      	mov	r4, r0
 800185a:	460e      	mov	r6, r1
 800185c:	4d13      	ldr	r5, [pc, #76]	; (80018ac <rt_mut_wait+0x58>)
 800185e:	b943      	cbnz	r3, 8001872 <rt_mut_wait+0x1e>
 8001860:	682a      	ldr	r2, [r5, #0]
 8001862:	6082      	str	r2, [r0, #8]
 8001864:	6a11      	ldr	r1, [r2, #32]
 8001866:	60c1      	str	r1, [r0, #12]
 8001868:	6210      	str	r0, [r2, #32]
 800186a:	3301      	adds	r3, #1
 800186c:	8063      	strh	r3, [r4, #2]
 800186e:	2000      	movs	r0, #0
 8001870:	bd70      	pop	{r4, r5, r6, pc}
 8001872:	6880      	ldr	r0, [r0, #8]
 8001874:	682a      	ldr	r2, [r5, #0]
 8001876:	4290      	cmp	r0, r2
 8001878:	d0f7      	beq.n	800186a <rt_mut_wait+0x16>
 800187a:	b181      	cbz	r1, 800189e <rt_mut_wait+0x4a>
 800187c:	7893      	ldrb	r3, [r2, #2]
 800187e:	7882      	ldrb	r2, [r0, #2]
 8001880:	429a      	cmp	r2, r3
 8001882:	d202      	bcs.n	800188a <rt_mut_wait+0x36>
 8001884:	7083      	strb	r3, [r0, #2]
 8001886:	f7ff ff1b 	bl	80016c0 <rt_resort_prio>
 800188a:	6862      	ldr	r2, [r4, #4]
 800188c:	b14a      	cbz	r2, 80018a2 <rt_mut_wait+0x4e>
 800188e:	6829      	ldr	r1, [r5, #0]
 8001890:	4620      	mov	r0, r4
 8001892:	f7ff fe6f 	bl	8001574 <rt_put_prio>
 8001896:	2109      	movs	r1, #9
 8001898:	4630      	mov	r0, r6
 800189a:	f000 fe29 	bl	80024f0 <rt_block>
 800189e:	2001      	movs	r0, #1
 80018a0:	bd70      	pop	{r4, r5, r6, pc}
 80018a2:	682b      	ldr	r3, [r5, #0]
 80018a4:	6063      	str	r3, [r4, #4]
 80018a6:	605a      	str	r2, [r3, #4]
 80018a8:	609c      	str	r4, [r3, #8]
 80018aa:	e7f4      	b.n	8001896 <rt_mut_wait+0x42>
 80018ac:	2000270c 	.word	0x2000270c

080018b0 <rt_init_stack>:
 80018b0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80018b2:	089b      	lsrs	r3, r3, #2
 80018b4:	bf04      	itt	eq
 80018b6:	4b22      	ldreq	r3, [pc, #136]	; (8001940 <rt_init_stack+0x90>)
 80018b8:	881b      	ldrheq	r3, [r3, #0]
 80018ba:	b5f0      	push	{r4, r5, r6, r7, lr}
 80018bc:	6b05      	ldr	r5, [r0, #48]	; 0x30
 80018be:	bf08      	it	eq
 80018c0:	089b      	lsreq	r3, r3, #2
 80018c2:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 80018c6:	0754      	lsls	r4, r2, #29
 80018c8:	bf48      	it	mi
 80018ca:	3a04      	submi	r2, #4
 80018cc:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 80018d0:	e902 0042 	stmdb	r2, {r1, r6}
 80018d4:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 80018d8:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 80018dc:	f1a2 070c 	sub.w	r7, r2, #12
 80018e0:	f04f 0e00 	mov.w	lr, #0
 80018e4:	f846 ef04 	str.w	lr, [r6, #4]!
 80018e8:	42be      	cmp	r6, r7
 80018ea:	d1fb      	bne.n	80018e4 <rt_init_stack+0x34>
 80018ec:	69c6      	ldr	r6, [r0, #28]
 80018ee:	f842 6c20 	str.w	r6, [r2, #-32]
 80018f2:	6341      	str	r1, [r0, #52]	; 0x34
 80018f4:	4912      	ldr	r1, [pc, #72]	; (8001940 <rt_init_stack+0x90>)
 80018f6:	62c4      	str	r4, [r0, #44]	; 0x2c
 80018f8:	6809      	ldr	r1, [r1, #0]
 80018fa:	00c9      	lsls	r1, r1, #3
 80018fc:	d517      	bpl.n	800192e <rt_init_stack+0x7e>
 80018fe:	2b11      	cmp	r3, #17
 8001900:	d915      	bls.n	800192e <rt_init_stack+0x7e>
 8001902:	3b10      	subs	r3, #16
 8001904:	f06f 0107 	mvn.w	r1, #7
 8001908:	085b      	lsrs	r3, r3, #1
 800190a:	434b      	muls	r3, r1
 800190c:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8001910:	440a      	add	r2, r1
 8001912:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 8001916:	4621      	mov	r1, r4
 8001918:	4291      	cmp	r1, r2
 800191a:	d10b      	bne.n	8001934 <rt_init_stack+0x84>
 800191c:	3308      	adds	r3, #8
 800191e:	441c      	add	r4, r3
 8001920:	1f23      	subs	r3, r4, #4
 8001922:	429d      	cmp	r5, r3
 8001924:	bf3c      	itt	cc
 8001926:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 800192a:	f844 3c04 	strcc.w	r3, [r4, #-4]
 800192e:	4b05      	ldr	r3, [pc, #20]	; (8001944 <rt_init_stack+0x94>)
 8001930:	602b      	str	r3, [r5, #0]
 8001932:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001934:	f841 0c04 	str.w	r0, [r1, #-4]
 8001938:	f841 0d08 	str.w	r0, [r1, #-8]!
 800193c:	e7ec      	b.n	8001918 <rt_init_stack+0x68>
 800193e:	bf00      	nop
 8001940:	08005c68 	.word	0x08005c68
 8001944:	e25a2ea5 	.word	0xe25a2ea5

08001948 <rt_ret_val>:
 8001948:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800194c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800194e:	b112      	cbz	r2, 8001956 <rt_ret_val+0xe>
 8001950:	3360      	adds	r3, #96	; 0x60
 8001952:	6019      	str	r1, [r3, #0]
 8001954:	4770      	bx	lr
 8001956:	3320      	adds	r3, #32
 8001958:	e7fb      	b.n	8001952 <rt_ret_val+0xa>

0800195a <rt_ret_val2>:
 800195a:	b510      	push	{r4, lr}
 800195c:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8001960:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001962:	b11c      	cbz	r4, 800196c <rt_ret_val2+0x12>
 8001964:	3360      	adds	r3, #96	; 0x60
 8001966:	e883 0006 	stmia.w	r3, {r1, r2}
 800196a:	bd10      	pop	{r4, pc}
 800196c:	3320      	adds	r3, #32
 800196e:	e7fa      	b.n	8001966 <rt_ret_val2+0xc>

08001970 <rt_psh_req>:
 8001970:	4b05      	ldr	r3, [pc, #20]	; (8001988 <rt_psh_req+0x18>)
 8001972:	781b      	ldrb	r3, [r3, #0]
 8001974:	b923      	cbnz	r3, 8001980 <rt_psh_req+0x10>
 8001976:	4b05      	ldr	r3, [pc, #20]	; (800198c <rt_psh_req+0x1c>)
 8001978:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800197c:	601a      	str	r2, [r3, #0]
 800197e:	4770      	bx	lr
 8001980:	4b03      	ldr	r3, [pc, #12]	; (8001990 <rt_psh_req+0x20>)
 8001982:	2201      	movs	r2, #1
 8001984:	701a      	strb	r2, [r3, #0]
 8001986:	4770      	bx	lr
 8001988:	2000191c 	.word	0x2000191c
 800198c:	e000ed04 	.word	0xe000ed04
 8001990:	2000191d 	.word	0x2000191d

08001994 <rt_pop_req>:
 8001994:	b538      	push	{r3, r4, r5, lr}
 8001996:	4b1a      	ldr	r3, [pc, #104]	; (8001a00 <rt_pop_req+0x6c>)
 8001998:	4c1a      	ldr	r4, [pc, #104]	; (8001a04 <rt_pop_req+0x70>)
 800199a:	6818      	ldr	r0, [r3, #0]
 800199c:	2301      	movs	r3, #1
 800199e:	7043      	strb	r3, [r0, #1]
 80019a0:	f7ff fe12 	bl	80015c8 <rt_put_rdy_first>
 80019a4:	7865      	ldrb	r5, [r4, #1]
 80019a6:	78a3      	ldrb	r3, [r4, #2]
 80019a8:	b93b      	cbnz	r3, 80019ba <rt_pop_req+0x26>
 80019aa:	4817      	ldr	r0, [pc, #92]	; (8001a08 <rt_pop_req+0x74>)
 80019ac:	7065      	strb	r5, [r4, #1]
 80019ae:	f7ff fdf9 	bl	80015a4 <rt_get_first>
 80019b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80019b6:	f000 bd5d 	b.w	8002474 <rt_switch_req>
 80019ba:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80019be:	6858      	ldr	r0, [r3, #4]
 80019c0:	7802      	ldrb	r2, [r0, #0]
 80019c2:	b99a      	cbnz	r2, 80019ec <rt_pop_req+0x58>
 80019c4:	8919      	ldrh	r1, [r3, #8]
 80019c6:	f000 f9bb 	bl	8001d40 <rt_evt_psh>
 80019ca:	78e3      	ldrb	r3, [r4, #3]
 80019cc:	3501      	adds	r5, #1
 80019ce:	429d      	cmp	r5, r3
 80019d0:	bf08      	it	eq
 80019d2:	2500      	moveq	r5, #0
 80019d4:	f3ef 8310 	mrs	r3, PRIMASK
 80019d8:	f3ef 8210 	mrs	r2, PRIMASK
 80019dc:	b672      	cpsid	i
 80019de:	78a2      	ldrb	r2, [r4, #2]
 80019e0:	3a01      	subs	r2, #1
 80019e2:	70a2      	strb	r2, [r4, #2]
 80019e4:	2b00      	cmp	r3, #0
 80019e6:	d1de      	bne.n	80019a6 <rt_pop_req+0x12>
 80019e8:	b662      	cpsie	i
 80019ea:	e7dc      	b.n	80019a6 <rt_pop_req+0x12>
 80019ec:	2a01      	cmp	r2, #1
 80019ee:	d103      	bne.n	80019f8 <rt_pop_req+0x64>
 80019f0:	6899      	ldr	r1, [r3, #8]
 80019f2:	f000 f933 	bl	8001c5c <rt_mbx_psh>
 80019f6:	e7e8      	b.n	80019ca <rt_pop_req+0x36>
 80019f8:	f000 ff9e 	bl	8002938 <rt_sem_psh>
 80019fc:	e7e5      	b.n	80019ca <rt_pop_req+0x36>
 80019fe:	bf00      	nop
 8001a00:	2000270c 	.word	0x2000270c
 8001a04:	20001f44 	.word	0x20001f44
 8001a08:	200026c0 	.word	0x200026c0

08001a0c <os_tick_init>:
 8001a0c:	4b08      	ldr	r3, [pc, #32]	; (8001a30 <os_tick_init+0x24>)
 8001a0e:	681a      	ldr	r2, [r3, #0]
 8001a10:	4b08      	ldr	r3, [pc, #32]	; (8001a34 <os_tick_init+0x28>)
 8001a12:	601a      	str	r2, [r3, #0]
 8001a14:	2200      	movs	r2, #0
 8001a16:	605a      	str	r2, [r3, #4]
 8001a18:	2207      	movs	r2, #7
 8001a1a:	f843 2c04 	str.w	r2, [r3, #-4]
 8001a1e:	4a06      	ldr	r2, [pc, #24]	; (8001a38 <os_tick_init+0x2c>)
 8001a20:	6813      	ldr	r3, [r2, #0]
 8001a22:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001a26:	6013      	str	r3, [r2, #0]
 8001a28:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001a2c:	4770      	bx	lr
 8001a2e:	bf00      	nop
 8001a30:	08005c80 	.word	0x08005c80
 8001a34:	e000e014 	.word	0xe000e014
 8001a38:	e000ed20 	.word	0xe000ed20

08001a3c <os_tick_irqack>:
 8001a3c:	4770      	bx	lr
	...

08001a40 <rt_systick>:
 8001a40:	b508      	push	{r3, lr}
 8001a42:	4b0b      	ldr	r3, [pc, #44]	; (8001a70 <rt_systick+0x30>)
 8001a44:	6818      	ldr	r0, [r3, #0]
 8001a46:	2301      	movs	r3, #1
 8001a48:	7043      	strb	r3, [r0, #1]
 8001a4a:	f7ff fdbd 	bl	80015c8 <rt_put_rdy_first>
 8001a4e:	f000 f9ad 	bl	8001dac <rt_chk_robin>
 8001a52:	4a08      	ldr	r2, [pc, #32]	; (8001a74 <rt_systick+0x34>)
 8001a54:	6813      	ldr	r3, [r2, #0]
 8001a56:	3301      	adds	r3, #1
 8001a58:	6013      	str	r3, [r2, #0]
 8001a5a:	f7ff fde3 	bl	8001624 <rt_dec_dly>
 8001a5e:	f000 fc91 	bl	8002384 <sysTimerTick>
 8001a62:	4805      	ldr	r0, [pc, #20]	; (8001a78 <rt_systick+0x38>)
 8001a64:	f7ff fd9e 	bl	80015a4 <rt_get_first>
 8001a68:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001a6c:	f000 bd02 	b.w	8002474 <rt_switch_req>
 8001a70:	2000270c 	.word	0x2000270c
 8001a74:	20002754 	.word	0x20002754
 8001a78:	200026c0 	.word	0x200026c0

08001a7c <rt_stk_check>:
 8001a7c:	4b06      	ldr	r3, [pc, #24]	; (8001a98 <rt_stk_check+0x1c>)
 8001a7e:	681a      	ldr	r2, [r3, #0]
 8001a80:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001a82:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8001a84:	4293      	cmp	r3, r2
 8001a86:	d803      	bhi.n	8001a90 <rt_stk_check+0x14>
 8001a88:	681a      	ldr	r2, [r3, #0]
 8001a8a:	4b04      	ldr	r3, [pc, #16]	; (8001a9c <rt_stk_check+0x20>)
 8001a8c:	429a      	cmp	r2, r3
 8001a8e:	d002      	beq.n	8001a96 <rt_stk_check+0x1a>
 8001a90:	2001      	movs	r0, #1
 8001a92:	f7ff bd21 	b.w	80014d8 <os_error>
 8001a96:	4770      	bx	lr
 8001a98:	2000270c 	.word	0x2000270c
 8001a9c:	e25a2ea5 	.word	0xe25a2ea5

08001aa0 <_init_box>:
 8001aa0:	2a00      	cmp	r2, #0
 8001aa2:	bfbb      	ittet	lt
 8001aa4:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 8001aa8:	3207      	addlt	r2, #7
 8001aaa:	3203      	addge	r2, #3
 8001aac:	f022 0207 	biclt.w	r2, r2, #7
 8001ab0:	bfa8      	it	ge
 8001ab2:	f022 0203 	bicge.w	r2, r2, #3
 8001ab6:	b510      	push	{r4, lr}
 8001ab8:	bfb4      	ite	lt
 8001aba:	2310      	movlt	r3, #16
 8001abc:	230c      	movge	r3, #12
 8001abe:	b192      	cbz	r2, 8001ae6 <_init_box+0x46>
 8001ac0:	18d4      	adds	r4, r2, r3
 8001ac2:	428c      	cmp	r4, r1
 8001ac4:	d80f      	bhi.n	8001ae6 <_init_box+0x46>
 8001ac6:	4401      	add	r1, r0
 8001ac8:	4403      	add	r3, r0
 8001aca:	4254      	negs	r4, r2
 8001acc:	6041      	str	r1, [r0, #4]
 8001ace:	6003      	str	r3, [r0, #0]
 8001ad0:	6082      	str	r2, [r0, #8]
 8001ad2:	4421      	add	r1, r4
 8001ad4:	1898      	adds	r0, r3, r2
 8001ad6:	4281      	cmp	r1, r0
 8001ad8:	d302      	bcc.n	8001ae0 <_init_box+0x40>
 8001ada:	5100      	str	r0, [r0, r4]
 8001adc:	4603      	mov	r3, r0
 8001ade:	e7f9      	b.n	8001ad4 <_init_box+0x34>
 8001ae0:	2000      	movs	r0, #0
 8001ae2:	6018      	str	r0, [r3, #0]
 8001ae4:	bd10      	pop	{r4, pc}
 8001ae6:	2001      	movs	r0, #1
 8001ae8:	bd10      	pop	{r4, pc}

08001aea <rt_alloc_box>:
 8001aea:	f3ef 8310 	mrs	r3, PRIMASK
 8001aee:	b672      	cpsid	i
 8001af0:	6802      	ldr	r2, [r0, #0]
 8001af2:	f003 0301 	and.w	r3, r3, #1
 8001af6:	b10a      	cbz	r2, 8001afc <rt_alloc_box+0x12>
 8001af8:	6811      	ldr	r1, [r2, #0]
 8001afa:	6001      	str	r1, [r0, #0]
 8001afc:	b903      	cbnz	r3, 8001b00 <rt_alloc_box+0x16>
 8001afe:	b662      	cpsie	i
 8001b00:	4610      	mov	r0, r2
 8001b02:	4770      	bx	lr

08001b04 <rt_free_box>:
 8001b04:	4281      	cmp	r1, r0
 8001b06:	d30d      	bcc.n	8001b24 <rt_free_box+0x20>
 8001b08:	6843      	ldr	r3, [r0, #4]
 8001b0a:	4299      	cmp	r1, r3
 8001b0c:	d20a      	bcs.n	8001b24 <rt_free_box+0x20>
 8001b0e:	f3ef 8310 	mrs	r3, PRIMASK
 8001b12:	b672      	cpsid	i
 8001b14:	6802      	ldr	r2, [r0, #0]
 8001b16:	600a      	str	r2, [r1, #0]
 8001b18:	6001      	str	r1, [r0, #0]
 8001b1a:	f013 0001 	ands.w	r0, r3, #1
 8001b1e:	d103      	bne.n	8001b28 <rt_free_box+0x24>
 8001b20:	b662      	cpsie	i
 8001b22:	4770      	bx	lr
 8001b24:	2001      	movs	r0, #1
 8001b26:	4770      	bx	lr
 8001b28:	2000      	movs	r0, #0
 8001b2a:	4770      	bx	lr

08001b2c <rt_mbx_init>:
 8001b2c:	2301      	movs	r3, #1
 8001b2e:	3910      	subs	r1, #16
 8001b30:	7003      	strb	r3, [r0, #0]
 8001b32:	0889      	lsrs	r1, r1, #2
 8001b34:	2300      	movs	r3, #0
 8001b36:	7043      	strb	r3, [r0, #1]
 8001b38:	7083      	strb	r3, [r0, #2]
 8001b3a:	6043      	str	r3, [r0, #4]
 8001b3c:	8103      	strh	r3, [r0, #8]
 8001b3e:	8143      	strh	r3, [r0, #10]
 8001b40:	8183      	strh	r3, [r0, #12]
 8001b42:	81c1      	strh	r1, [r0, #14]
 8001b44:	4770      	bx	lr
	...

08001b48 <rt_mbx_wait>:
 8001b48:	b570      	push	{r4, r5, r6, lr}
 8001b4a:	8985      	ldrh	r5, [r0, #12]
 8001b4c:	4604      	mov	r4, r0
 8001b4e:	4616      	mov	r6, r2
 8001b50:	2d00      	cmp	r5, #0
 8001b52:	d038      	beq.n	8001bc6 <rt_mbx_wait+0x7e>
 8001b54:	8943      	ldrh	r3, [r0, #10]
 8001b56:	1d1a      	adds	r2, r3, #4
 8001b58:	3301      	adds	r3, #1
 8001b5a:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8001b5e:	600a      	str	r2, [r1, #0]
 8001b60:	89c2      	ldrh	r2, [r0, #14]
 8001b62:	b29b      	uxth	r3, r3
 8001b64:	429a      	cmp	r2, r3
 8001b66:	8143      	strh	r3, [r0, #10]
 8001b68:	bf04      	itt	eq
 8001b6a:	2300      	moveq	r3, #0
 8001b6c:	8143      	strheq	r3, [r0, #10]
 8001b6e:	6843      	ldr	r3, [r0, #4]
 8001b70:	b1f3      	cbz	r3, 8001bb0 <rt_mbx_wait+0x68>
 8001b72:	7843      	ldrb	r3, [r0, #1]
 8001b74:	2b02      	cmp	r3, #2
 8001b76:	d11b      	bne.n	8001bb0 <rt_mbx_wait+0x68>
 8001b78:	f7ff fd14 	bl	80015a4 <rt_get_first>
 8001b7c:	2100      	movs	r1, #0
 8001b7e:	4605      	mov	r5, r0
 8001b80:	f7ff fee2 	bl	8001948 <rt_ret_val>
 8001b84:	8923      	ldrh	r3, [r4, #8]
 8001b86:	69e9      	ldr	r1, [r5, #28]
 8001b88:	1d1a      	adds	r2, r3, #4
 8001b8a:	3301      	adds	r3, #1
 8001b8c:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001b90:	89e2      	ldrh	r2, [r4, #14]
 8001b92:	b29b      	uxth	r3, r3
 8001b94:	429a      	cmp	r2, r3
 8001b96:	8123      	strh	r3, [r4, #8]
 8001b98:	bf08      	it	eq
 8001b9a:	2300      	moveq	r3, #0
 8001b9c:	4628      	mov	r0, r5
 8001b9e:	bf08      	it	eq
 8001ba0:	8123      	strheq	r3, [r4, #8]
 8001ba2:	f7ff fda5 	bl	80016f0 <rt_rmv_dly>
 8001ba6:	4628      	mov	r0, r5
 8001ba8:	f000 fc7e 	bl	80024a8 <rt_dispatch>
 8001bac:	2000      	movs	r0, #0
 8001bae:	bd70      	pop	{r4, r5, r6, pc}
 8001bb0:	f3ef 8010 	mrs	r0, PRIMASK
 8001bb4:	f3ef 8310 	mrs	r3, PRIMASK
 8001bb8:	b672      	cpsid	i
 8001bba:	3d01      	subs	r5, #1
 8001bbc:	81a5      	strh	r5, [r4, #12]
 8001bbe:	2800      	cmp	r0, #0
 8001bc0:	d1f4      	bne.n	8001bac <rt_mbx_wait+0x64>
 8001bc2:	b662      	cpsie	i
 8001bc4:	bd70      	pop	{r4, r5, r6, pc}
 8001bc6:	b14a      	cbz	r2, 8001bdc <rt_mbx_wait+0x94>
 8001bc8:	6842      	ldr	r2, [r0, #4]
 8001bca:	4b09      	ldr	r3, [pc, #36]	; (8001bf0 <rt_mbx_wait+0xa8>)
 8001bcc:	b142      	cbz	r2, 8001be0 <rt_mbx_wait+0x98>
 8001bce:	6819      	ldr	r1, [r3, #0]
 8001bd0:	f7ff fcd0 	bl	8001574 <rt_put_prio>
 8001bd4:	2108      	movs	r1, #8
 8001bd6:	4630      	mov	r0, r6
 8001bd8:	f000 fc8a 	bl	80024f0 <rt_block>
 8001bdc:	2001      	movs	r0, #1
 8001bde:	bd70      	pop	{r4, r5, r6, pc}
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	6043      	str	r3, [r0, #4]
 8001be4:	605a      	str	r2, [r3, #4]
 8001be6:	6098      	str	r0, [r3, #8]
 8001be8:	2301      	movs	r3, #1
 8001bea:	7043      	strb	r3, [r0, #1]
 8001bec:	e7f2      	b.n	8001bd4 <rt_mbx_wait+0x8c>
 8001bee:	bf00      	nop
 8001bf0:	2000270c 	.word	0x2000270c

08001bf4 <rt_mbx_check>:
 8001bf4:	89c2      	ldrh	r2, [r0, #14]
 8001bf6:	8980      	ldrh	r0, [r0, #12]
 8001bf8:	1a10      	subs	r0, r2, r0
 8001bfa:	4770      	bx	lr

08001bfc <isr_mbx_send>:
 8001bfc:	b508      	push	{r3, lr}
 8001bfe:	f7ff fd8b 	bl	8001718 <rt_psq_enq>
 8001c02:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001c06:	f7ff beb3 	b.w	8001970 <rt_psh_req>

08001c0a <isr_mbx_receive>:
 8001c0a:	8983      	ldrh	r3, [r0, #12]
 8001c0c:	b510      	push	{r4, lr}
 8001c0e:	4604      	mov	r4, r0
 8001c10:	b30b      	cbz	r3, 8001c56 <isr_mbx_receive+0x4c>
 8001c12:	8943      	ldrh	r3, [r0, #10]
 8001c14:	3304      	adds	r3, #4
 8001c16:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8001c1a:	600b      	str	r3, [r1, #0]
 8001c1c:	7843      	ldrb	r3, [r0, #1]
 8001c1e:	2b02      	cmp	r3, #2
 8001c20:	d104      	bne.n	8001c2c <isr_mbx_receive+0x22>
 8001c22:	2100      	movs	r1, #0
 8001c24:	f7ff fd78 	bl	8001718 <rt_psq_enq>
 8001c28:	f7ff fea2 	bl	8001970 <rt_psh_req>
 8001c2c:	f3ef 8310 	mrs	r3, PRIMASK
 8001c30:	f3ef 8210 	mrs	r2, PRIMASK
 8001c34:	b672      	cpsid	i
 8001c36:	89a2      	ldrh	r2, [r4, #12]
 8001c38:	3a01      	subs	r2, #1
 8001c3a:	81a2      	strh	r2, [r4, #12]
 8001c3c:	b903      	cbnz	r3, 8001c40 <isr_mbx_receive+0x36>
 8001c3e:	b662      	cpsie	i
 8001c40:	8963      	ldrh	r3, [r4, #10]
 8001c42:	89e2      	ldrh	r2, [r4, #14]
 8001c44:	3301      	adds	r3, #1
 8001c46:	b29b      	uxth	r3, r3
 8001c48:	429a      	cmp	r2, r3
 8001c4a:	8163      	strh	r3, [r4, #10]
 8001c4c:	d101      	bne.n	8001c52 <isr_mbx_receive+0x48>
 8001c4e:	2300      	movs	r3, #0
 8001c50:	8163      	strh	r3, [r4, #10]
 8001c52:	2004      	movs	r0, #4
 8001c54:	bd10      	pop	{r4, pc}
 8001c56:	4618      	mov	r0, r3
 8001c58:	bd10      	pop	{r4, pc}
	...

08001c5c <rt_mbx_psh>:
 8001c5c:	6843      	ldr	r3, [r0, #4]
 8001c5e:	b570      	push	{r4, r5, r6, lr}
 8001c60:	4604      	mov	r4, r0
 8001c62:	460e      	mov	r6, r1
 8001c64:	2b00      	cmp	r3, #0
 8001c66:	d04b      	beq.n	8001d00 <rt_mbx_psh+0xa4>
 8001c68:	7845      	ldrb	r5, [r0, #1]
 8001c6a:	2d02      	cmp	r5, #2
 8001c6c:	d020      	beq.n	8001cb0 <rt_mbx_psh+0x54>
 8001c6e:	2d03      	cmp	r5, #3
 8001c70:	d00a      	beq.n	8001c88 <rt_mbx_psh+0x2c>
 8001c72:	2d01      	cmp	r5, #1
 8001c74:	d161      	bne.n	8001d3a <rt_mbx_psh+0xde>
 8001c76:	f7ff fc95 	bl	80015a4 <rt_get_first>
 8001c7a:	4604      	mov	r4, r0
 8001c7c:	4632      	mov	r2, r6
 8001c7e:	2110      	movs	r1, #16
 8001c80:	f7ff fe6b 	bl	800195a <rt_ret_val2>
 8001c84:	7065      	strb	r5, [r4, #1]
 8001c86:	e00e      	b.n	8001ca6 <rt_mbx_psh+0x4a>
 8001c88:	4608      	mov	r0, r1
 8001c8a:	f7ff ff2e 	bl	8001aea <rt_alloc_box>
 8001c8e:	4605      	mov	r5, r0
 8001c90:	2800      	cmp	r0, #0
 8001c92:	d052      	beq.n	8001d3a <rt_mbx_psh+0xde>
 8001c94:	4620      	mov	r0, r4
 8001c96:	f7ff fc85 	bl	80015a4 <rt_get_first>
 8001c9a:	4629      	mov	r1, r5
 8001c9c:	4604      	mov	r4, r0
 8001c9e:	f7ff fe53 	bl	8001948 <rt_ret_val>
 8001ca2:	2301      	movs	r3, #1
 8001ca4:	7063      	strb	r3, [r4, #1]
 8001ca6:	4620      	mov	r0, r4
 8001ca8:	f7ff fd22 	bl	80016f0 <rt_rmv_dly>
 8001cac:	4621      	mov	r1, r4
 8001cae:	e022      	b.n	8001cf6 <rt_mbx_psh+0x9a>
 8001cb0:	f7ff fc78 	bl	80015a4 <rt_get_first>
 8001cb4:	2100      	movs	r1, #0
 8001cb6:	4605      	mov	r5, r0
 8001cb8:	f7ff fe46 	bl	8001948 <rt_ret_val>
 8001cbc:	8923      	ldrh	r3, [r4, #8]
 8001cbe:	69e9      	ldr	r1, [r5, #28]
 8001cc0:	1d1a      	adds	r2, r3, #4
 8001cc2:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001cc6:	f3ef 8210 	mrs	r2, PRIMASK
 8001cca:	f3ef 8110 	mrs	r1, PRIMASK
 8001cce:	b672      	cpsid	i
 8001cd0:	89a1      	ldrh	r1, [r4, #12]
 8001cd2:	3101      	adds	r1, #1
 8001cd4:	81a1      	strh	r1, [r4, #12]
 8001cd6:	b902      	cbnz	r2, 8001cda <rt_mbx_psh+0x7e>
 8001cd8:	b662      	cpsie	i
 8001cda:	89e2      	ldrh	r2, [r4, #14]
 8001cdc:	3301      	adds	r3, #1
 8001cde:	b29b      	uxth	r3, r3
 8001ce0:	429a      	cmp	r2, r3
 8001ce2:	8123      	strh	r3, [r4, #8]
 8001ce4:	bf04      	itt	eq
 8001ce6:	2300      	moveq	r3, #0
 8001ce8:	8123      	strheq	r3, [r4, #8]
 8001cea:	2301      	movs	r3, #1
 8001cec:	706b      	strb	r3, [r5, #1]
 8001cee:	4628      	mov	r0, r5
 8001cf0:	f7ff fcfe 	bl	80016f0 <rt_rmv_dly>
 8001cf4:	4629      	mov	r1, r5
 8001cf6:	4811      	ldr	r0, [pc, #68]	; (8001d3c <rt_mbx_psh+0xe0>)
 8001cf8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001cfc:	f7ff bc3a 	b.w	8001574 <rt_put_prio>
 8001d00:	8980      	ldrh	r0, [r0, #12]
 8001d02:	89e1      	ldrh	r1, [r4, #14]
 8001d04:	4288      	cmp	r0, r1
 8001d06:	d213      	bcs.n	8001d30 <rt_mbx_psh+0xd4>
 8001d08:	8923      	ldrh	r3, [r4, #8]
 8001d0a:	1d1a      	adds	r2, r3, #4
 8001d0c:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8001d10:	f3ef 8210 	mrs	r2, PRIMASK
 8001d14:	f3ef 8510 	mrs	r5, PRIMASK
 8001d18:	b672      	cpsid	i
 8001d1a:	3001      	adds	r0, #1
 8001d1c:	81a0      	strh	r0, [r4, #12]
 8001d1e:	b902      	cbnz	r2, 8001d22 <rt_mbx_psh+0xc6>
 8001d20:	b662      	cpsie	i
 8001d22:	3301      	adds	r3, #1
 8001d24:	b29b      	uxth	r3, r3
 8001d26:	4299      	cmp	r1, r3
 8001d28:	bf08      	it	eq
 8001d2a:	2300      	moveq	r3, #0
 8001d2c:	8123      	strh	r3, [r4, #8]
 8001d2e:	bd70      	pop	{r4, r5, r6, pc}
 8001d30:	2003      	movs	r0, #3
 8001d32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001d36:	f7ff bbcf 	b.w	80014d8 <os_error>
 8001d3a:	bd70      	pop	{r4, r5, r6, pc}
 8001d3c:	200026c0 	.word	0x200026c0

08001d40 <rt_evt_psh>:
 8001d40:	b510      	push	{r4, lr}
 8001d42:	8b03      	ldrh	r3, [r0, #24]
 8001d44:	7842      	ldrb	r2, [r0, #1]
 8001d46:	4319      	orrs	r1, r3
 8001d48:	2a06      	cmp	r2, #6
 8001d4a:	4604      	mov	r4, r0
 8001d4c:	8301      	strh	r1, [r0, #24]
 8001d4e:	8b43      	ldrh	r3, [r0, #26]
 8001d50:	d115      	bne.n	8001d7e <rt_evt_psh+0x3e>
 8001d52:	ea33 0201 	bics.w	r2, r3, r1
 8001d56:	d119      	bne.n	8001d8c <rt_evt_psh+0x4c>
 8001d58:	ea21 0103 	bic.w	r1, r1, r3
 8001d5c:	8321      	strh	r1, [r4, #24]
 8001d5e:	4620      	mov	r0, r4
 8001d60:	f7ff fcc6 	bl	80016f0 <rt_rmv_dly>
 8001d64:	2301      	movs	r3, #1
 8001d66:	4620      	mov	r0, r4
 8001d68:	7063      	strb	r3, [r4, #1]
 8001d6a:	8b62      	ldrh	r2, [r4, #26]
 8001d6c:	2108      	movs	r1, #8
 8001d6e:	f7ff fdf4 	bl	800195a <rt_ret_val2>
 8001d72:	4621      	mov	r1, r4
 8001d74:	4806      	ldr	r0, [pc, #24]	; (8001d90 <rt_evt_psh+0x50>)
 8001d76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d7a:	f7ff bbfb 	b.w	8001574 <rt_put_prio>
 8001d7e:	2a05      	cmp	r2, #5
 8001d80:	d104      	bne.n	8001d8c <rt_evt_psh+0x4c>
 8001d82:	ea11 0203 	ands.w	r2, r1, r3
 8001d86:	d001      	beq.n	8001d8c <rt_evt_psh+0x4c>
 8001d88:	8342      	strh	r2, [r0, #26]
 8001d8a:	e7e5      	b.n	8001d58 <rt_evt_psh+0x18>
 8001d8c:	bd10      	pop	{r4, pc}
 8001d8e:	bf00      	nop
 8001d90:	200026c0 	.word	0x200026c0

08001d94 <rt_init_robin>:
 8001d94:	4b03      	ldr	r3, [pc, #12]	; (8001da4 <rt_init_robin+0x10>)
 8001d96:	2200      	movs	r2, #0
 8001d98:	601a      	str	r2, [r3, #0]
 8001d9a:	4a03      	ldr	r2, [pc, #12]	; (8001da8 <rt_init_robin+0x14>)
 8001d9c:	6812      	ldr	r2, [r2, #0]
 8001d9e:	80da      	strh	r2, [r3, #6]
 8001da0:	4770      	bx	lr
 8001da2:	bf00      	nop
 8001da4:	200026f8 	.word	0x200026f8
 8001da8:	08005c64 	.word	0x08005c64

08001dac <rt_chk_robin>:
 8001dac:	b508      	push	{r3, lr}
 8001dae:	4b0e      	ldr	r3, [pc, #56]	; (8001de8 <rt_chk_robin+0x3c>)
 8001db0:	685a      	ldr	r2, [r3, #4]
 8001db2:	4b0e      	ldr	r3, [pc, #56]	; (8001dec <rt_chk_robin+0x40>)
 8001db4:	6819      	ldr	r1, [r3, #0]
 8001db6:	4291      	cmp	r1, r2
 8001db8:	490d      	ldr	r1, [pc, #52]	; (8001df0 <rt_chk_robin+0x44>)
 8001dba:	d005      	beq.n	8001dc8 <rt_chk_robin+0x1c>
 8001dbc:	601a      	str	r2, [r3, #0]
 8001dbe:	88da      	ldrh	r2, [r3, #6]
 8001dc0:	6808      	ldr	r0, [r1, #0]
 8001dc2:	3a01      	subs	r2, #1
 8001dc4:	4402      	add	r2, r0
 8001dc6:	809a      	strh	r2, [r3, #4]
 8001dc8:	8898      	ldrh	r0, [r3, #4]
 8001dca:	880a      	ldrh	r2, [r1, #0]
 8001dcc:	4290      	cmp	r0, r2
 8001dce:	d10a      	bne.n	8001de6 <rt_chk_robin+0x3a>
 8001dd0:	2200      	movs	r2, #0
 8001dd2:	4805      	ldr	r0, [pc, #20]	; (8001de8 <rt_chk_robin+0x3c>)
 8001dd4:	601a      	str	r2, [r3, #0]
 8001dd6:	f7ff fbe5 	bl	80015a4 <rt_get_first>
 8001dda:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001dde:	4601      	mov	r1, r0
 8001de0:	4801      	ldr	r0, [pc, #4]	; (8001de8 <rt_chk_robin+0x3c>)
 8001de2:	f7ff bbc7 	b.w	8001574 <rt_put_prio>
 8001de6:	bd08      	pop	{r3, pc}
 8001de8:	200026c0 	.word	0x200026c0
 8001dec:	200026f8 	.word	0x200026f8
 8001df0:	20002754 	.word	0x20002754

08001df4 <rt_timer_insert>:
 8001df4:	4a0b      	ldr	r2, [pc, #44]	; (8001e24 <rt_timer_insert+0x30>)
 8001df6:	6813      	ldr	r3, [r2, #0]
 8001df8:	b530      	push	{r4, r5, lr}
 8001dfa:	2400      	movs	r4, #0
 8001dfc:	b943      	cbnz	r3, 8001e10 <rt_timer_insert+0x1c>
 8001dfe:	6003      	str	r3, [r0, #0]
 8001e00:	6081      	str	r1, [r0, #8]
 8001e02:	b113      	cbz	r3, 8001e0a <rt_timer_insert+0x16>
 8001e04:	689d      	ldr	r5, [r3, #8]
 8001e06:	1a69      	subs	r1, r5, r1
 8001e08:	6099      	str	r1, [r3, #8]
 8001e0a:	b144      	cbz	r4, 8001e1e <rt_timer_insert+0x2a>
 8001e0c:	6020      	str	r0, [r4, #0]
 8001e0e:	bd30      	pop	{r4, r5, pc}
 8001e10:	689d      	ldr	r5, [r3, #8]
 8001e12:	42a9      	cmp	r1, r5
 8001e14:	d3f3      	bcc.n	8001dfe <rt_timer_insert+0xa>
 8001e16:	461c      	mov	r4, r3
 8001e18:	1b49      	subs	r1, r1, r5
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	e7ee      	b.n	8001dfc <rt_timer_insert+0x8>
 8001e1e:	6010      	str	r0, [r2, #0]
 8001e20:	bd30      	pop	{r4, r5, pc}
 8001e22:	bf00      	nop
 8001e24:	20002708 	.word	0x20002708

08001e28 <rt_ms2tick>:
 8001e28:	b1c0      	cbz	r0, 8001e5c <rt_ms2tick+0x34>
 8001e2a:	1c43      	adds	r3, r0, #1
 8001e2c:	d011      	beq.n	8001e52 <rt_ms2tick+0x2a>
 8001e2e:	4b0c      	ldr	r3, [pc, #48]	; (8001e60 <rt_ms2tick+0x38>)
 8001e30:	4298      	cmp	r0, r3
 8001e32:	d811      	bhi.n	8001e58 <rt_ms2tick+0x30>
 8001e34:	4b0b      	ldr	r3, [pc, #44]	; (8001e64 <rt_ms2tick+0x3c>)
 8001e36:	681b      	ldr	r3, [r3, #0]
 8001e38:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001e3c:	1e5a      	subs	r2, r3, #1
 8001e3e:	fb01 2000 	mla	r0, r1, r0, r2
 8001e42:	fbb0 f3f3 	udiv	r3, r0, r3
 8001e46:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001e4a:	4283      	cmp	r3, r0
 8001e4c:	d806      	bhi.n	8001e5c <rt_ms2tick+0x34>
 8001e4e:	b298      	uxth	r0, r3
 8001e50:	4770      	bx	lr
 8001e52:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001e56:	4770      	bx	lr
 8001e58:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001e5c:	4770      	bx	lr
 8001e5e:	bf00      	nop
 8001e60:	003d0900 	.word	0x003d0900
 8001e64:	08005c1c 	.word	0x08005c1c

08001e68 <rt_tid2ptcb>:
 8001e68:	b138      	cbz	r0, 8001e7a <rt_tid2ptcb+0x12>
 8001e6a:	0783      	lsls	r3, r0, #30
 8001e6c:	d104      	bne.n	8001e78 <rt_tid2ptcb+0x10>
 8001e6e:	7803      	ldrb	r3, [r0, #0]
 8001e70:	2b00      	cmp	r3, #0
 8001e72:	bf18      	it	ne
 8001e74:	2000      	movne	r0, #0
 8001e76:	4770      	bx	lr
 8001e78:	2000      	movs	r0, #0
 8001e7a:	4770      	bx	lr

08001e7c <svcKernelStart>:
 8001e7c:	b5b0      	push	{r4, r5, r7, lr}
 8001e7e:	4d0e      	ldr	r5, [pc, #56]	; (8001eb8 <svcKernelStart+0x3c>)
 8001e80:	7828      	ldrb	r0, [r5, #0]
 8001e82:	af00      	add	r7, sp, #0
 8001e84:	b9a8      	cbnz	r0, 8001eb2 <svcKernelStart+0x36>
 8001e86:	4c0d      	ldr	r4, [pc, #52]	; (8001ebc <svcKernelStart+0x40>)
 8001e88:	6823      	ldr	r3, [r4, #0]
 8001e8a:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8001e8e:	f000 fb51 	bl	8002534 <rt_tsk_prio>
 8001e92:	6823      	ldr	r3, [r4, #0]
 8001e94:	78da      	ldrb	r2, [r3, #3]
 8001e96:	2aff      	cmp	r2, #255	; 0xff
 8001e98:	d103      	bne.n	8001ea2 <svcKernelStart+0x26>
 8001e9a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001e9c:	3220      	adds	r2, #32
 8001e9e:	f382 8809 	msr	PSP, r2
 8001ea2:	6862      	ldr	r2, [r4, #4]
 8001ea4:	b90a      	cbnz	r2, 8001eaa <svcKernelStart+0x2e>
 8001ea6:	e884 000c 	stmia.w	r4, {r2, r3}
 8001eaa:	f000 fcfb 	bl	80028a4 <rt_sys_start>
 8001eae:	2301      	movs	r3, #1
 8001eb0:	702b      	strb	r3, [r5, #0]
 8001eb2:	2000      	movs	r0, #0
 8001eb4:	bdb0      	pop	{r4, r5, r7, pc}
 8001eb6:	bf00      	nop
 8001eb8:	20002705 	.word	0x20002705
 8001ebc:	2000270c 	.word	0x2000270c

08001ec0 <svcKernelRunning>:
 8001ec0:	4b01      	ldr	r3, [pc, #4]	; (8001ec8 <svcKernelRunning+0x8>)
 8001ec2:	7818      	ldrb	r0, [r3, #0]
 8001ec4:	4770      	bx	lr
 8001ec6:	bf00      	nop
 8001ec8:	20002705 	.word	0x20002705

08001ecc <osKernelRunning>:
 8001ecc:	b510      	push	{r4, lr}
 8001ece:	f3ef 8410 	mrs	r4, PRIMASK
 8001ed2:	b934      	cbnz	r4, 8001ee2 <osKernelRunning+0x16>
 8001ed4:	f3ef 8405 	mrs	r4, IPSR
 8001ed8:	b91c      	cbnz	r4, 8001ee2 <osKernelRunning+0x16>
 8001eda:	f3ef 8414 	mrs	r4, CONTROL
 8001ede:	07e4      	lsls	r4, r4, #31
 8001ee0:	d402      	bmi.n	8001ee8 <osKernelRunning+0x1c>
 8001ee2:	4b03      	ldr	r3, [pc, #12]	; (8001ef0 <osKernelRunning+0x24>)
 8001ee4:	7818      	ldrb	r0, [r3, #0]
 8001ee6:	bd10      	pop	{r4, pc}
 8001ee8:	f8df c008 	ldr.w	r12, [pc, #8]	; 8001ef4 <osKernelRunning+0x28>
 8001eec:	df00      	svc	0
 8001eee:	bd10      	pop	{r4, pc}
 8001ef0:	20002705 	.word	0x20002705
 8001ef4:	08001ec1 	.word	0x08001ec1

08001ef8 <osKernelStart>:
 8001ef8:	b590      	push	{r4, r7, lr}
 8001efa:	b089      	sub	sp, #36	; 0x24
 8001efc:	af00      	add	r7, sp, #0
 8001efe:	f3ef 8310 	mrs	r3, PRIMASK
 8001f02:	2b00      	cmp	r3, #0
 8001f04:	d137      	bne.n	8001f76 <osKernelStart+0x7e>
 8001f06:	f3ef 8305 	mrs	r3, IPSR
 8001f0a:	2b00      	cmp	r3, #0
 8001f0c:	d133      	bne.n	8001f76 <osKernelStart+0x7e>
 8001f0e:	f7ff ffdd 	bl	8001ecc <osKernelRunning>
 8001f12:	b928      	cbnz	r0, 8001f20 <osKernelStart+0x28>
 8001f14:	4c19      	ldr	r4, [pc, #100]	; (8001f7c <osKernelStart+0x84>)
 8001f16:	6824      	ldr	r4, [r4, #0]
 8001f18:	b114      	cbz	r4, 8001f20 <osKernelStart+0x28>
 8001f1a:	6864      	ldr	r4, [r4, #4]
 8001f1c:	b104      	cbz	r4, 8001f20 <osKernelStart+0x28>
 8001f1e:	47a0      	blx	r4
 8001f20:	f3ef 8414 	mrs	r4, CONTROL
 8001f24:	f004 0403 	and.w	r4, r4, #3
 8001f28:	2c02      	cmp	r4, #2
 8001f2a:	d018      	beq.n	8001f5e <osKernelStart+0x66>
 8001f2c:	2c03      	cmp	r4, #3
 8001f2e:	d01c      	beq.n	8001f6a <osKernelStart+0x72>
 8001f30:	2c01      	cmp	r4, #1
 8001f32:	d01e      	beq.n	8001f72 <osKernelStart+0x7a>
 8001f34:	f107 0420 	add.w	r4, r7, #32
 8001f38:	f384 8809 	msr	PSP, r4
 8001f3c:	4c10      	ldr	r4, [pc, #64]	; (8001f80 <osKernelStart+0x88>)
 8001f3e:	7824      	ldrb	r4, [r4, #0]
 8001f40:	07e4      	lsls	r4, r4, #31
 8001f42:	d510      	bpl.n	8001f66 <osKernelStart+0x6e>
 8001f44:	2402      	movs	r4, #2
 8001f46:	f384 8814 	msr	CONTROL, r4
 8001f4a:	f3bf 8f4f 	dsb	sy
 8001f4e:	f3bf 8f6f 	isb	sy
 8001f52:	f8df c030 	ldr.w	r12, [pc, #48]	; 8001f84 <osKernelStart+0x8c>
 8001f56:	df00      	svc	0
 8001f58:	3724      	adds	r7, #36	; 0x24
 8001f5a:	46bd      	mov	sp, r7
 8001f5c:	bd90      	pop	{r4, r7, pc}
 8001f5e:	4c08      	ldr	r4, [pc, #32]	; (8001f80 <osKernelStart+0x88>)
 8001f60:	7824      	ldrb	r4, [r4, #0]
 8001f62:	07e4      	lsls	r4, r4, #31
 8001f64:	d4f5      	bmi.n	8001f52 <osKernelStart+0x5a>
 8001f66:	2403      	movs	r4, #3
 8001f68:	e7ed      	b.n	8001f46 <osKernelStart+0x4e>
 8001f6a:	4c05      	ldr	r4, [pc, #20]	; (8001f80 <osKernelStart+0x88>)
 8001f6c:	7824      	ldrb	r4, [r4, #0]
 8001f6e:	07e4      	lsls	r4, r4, #31
 8001f70:	d5ef      	bpl.n	8001f52 <osKernelStart+0x5a>
 8001f72:	20ff      	movs	r0, #255	; 0xff
 8001f74:	e7f0      	b.n	8001f58 <osKernelStart+0x60>
 8001f76:	2082      	movs	r0, #130	; 0x82
 8001f78:	e7ee      	b.n	8001f58 <osKernelStart+0x60>
 8001f7a:	bf00      	nop
 8001f7c:	200026f4 	.word	0x200026f4
 8001f80:	08005c4a 	.word	0x08005c4a
 8001f84:	08001e7d 	.word	0x08001e7d

08001f88 <svcThreadCreate>:
 8001f88:	b570      	push	{r4, r5, r6, lr}
 8001f8a:	460b      	mov	r3, r1
 8001f8c:	4616      	mov	r6, r2
 8001f8e:	4602      	mov	r2, r0
 8001f90:	b910      	cbnz	r0, 8001f98 <svcThreadCreate+0x10>
 8001f92:	2400      	movs	r4, #0
 8001f94:	4620      	mov	r0, r4
 8001f96:	bd70      	pop	{r4, r5, r6, pc}
 8001f98:	6800      	ldr	r0, [r0, #0]
 8001f9a:	2800      	cmp	r0, #0
 8001f9c:	d0f9      	beq.n	8001f92 <svcThreadCreate+0xa>
 8001f9e:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 8001fa2:	1ce5      	adds	r5, r4, #3
 8001fa4:	b2ad      	uxth	r5, r5
 8001fa6:	2d06      	cmp	r5, #6
 8001fa8:	d8f3      	bhi.n	8001f92 <svcThreadCreate+0xa>
 8001faa:	68d1      	ldr	r1, [r2, #12]
 8001fac:	b1c1      	cbz	r1, 8001fe0 <svcThreadCreate+0x58>
 8001fae:	6912      	ldr	r2, [r2, #16]
 8001fb0:	3404      	adds	r4, #4
 8001fb2:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 8001fb6:	f000 fafb 	bl	80025b0 <rt_tsk_create>
 8001fba:	2800      	cmp	r0, #0
 8001fbc:	d0e9      	beq.n	8001f92 <svcThreadCreate+0xa>
 8001fbe:	4b0a      	ldr	r3, [pc, #40]	; (8001fe8 <svcThreadCreate+0x60>)
 8001fc0:	4a0a      	ldr	r2, [pc, #40]	; (8001fec <svcThreadCreate+0x64>)
 8001fc2:	3801      	subs	r0, #1
 8001fc4:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8001fc8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001fca:	635a      	str	r2, [r3, #52]	; 0x34
 8001fcc:	4b08      	ldr	r3, [pc, #32]	; (8001ff0 <svcThreadCreate+0x68>)
 8001fce:	681b      	ldr	r3, [r3, #0]
 8001fd0:	b143      	cbz	r3, 8001fe4 <svcThreadCreate+0x5c>
 8001fd2:	689b      	ldr	r3, [r3, #8]
 8001fd4:	b133      	cbz	r3, 8001fe4 <svcThreadCreate+0x5c>
 8001fd6:	4631      	mov	r1, r6
 8001fd8:	78e0      	ldrb	r0, [r4, #3]
 8001fda:	4798      	blx	r3
 8001fdc:	63e0      	str	r0, [r4, #60]	; 0x3c
 8001fde:	e7d9      	b.n	8001f94 <svcThreadCreate+0xc>
 8001fe0:	460a      	mov	r2, r1
 8001fe2:	e7e5      	b.n	8001fb0 <svcThreadCreate+0x28>
 8001fe4:	63e6      	str	r6, [r4, #60]	; 0x3c
 8001fe6:	e7d5      	b.n	8001f94 <svcThreadCreate+0xc>
 8001fe8:	20001f08 	.word	0x20001f08
 8001fec:	08002175 	.word	0x08002175
 8001ff0:	200026f4 	.word	0x200026f4

08001ff4 <svcThreadGetId>:
 8001ff4:	b508      	push	{r3, lr}
 8001ff6:	f000 fa95 	bl	8002524 <rt_tsk_self>
 8001ffa:	b118      	cbz	r0, 8002004 <svcThreadGetId+0x10>
 8001ffc:	3801      	subs	r0, #1
 8001ffe:	4b02      	ldr	r3, [pc, #8]	; (8002008 <svcThreadGetId+0x14>)
 8002000:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002004:	bd08      	pop	{r3, pc}
 8002006:	bf00      	nop
 8002008:	20001f08 	.word	0x20001f08

0800200c <svcThreadTerminate>:
 800200c:	b510      	push	{r4, lr}
 800200e:	f7ff ff2b 	bl	8001e68 <rt_tid2ptcb>
 8002012:	4604      	mov	r4, r0
 8002014:	b170      	cbz	r0, 8002034 <svcThreadTerminate+0x28>
 8002016:	4b08      	ldr	r3, [pc, #32]	; (8002038 <svcThreadTerminate+0x2c>)
 8002018:	681b      	ldr	r3, [r3, #0]
 800201a:	b11b      	cbz	r3, 8002024 <svcThreadTerminate+0x18>
 800201c:	68db      	ldr	r3, [r3, #12]
 800201e:	b10b      	cbz	r3, 8002024 <svcThreadTerminate+0x18>
 8002020:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002022:	4798      	blx	r3
 8002024:	78e0      	ldrb	r0, [r4, #3]
 8002026:	f000 fb19 	bl	800265c <rt_tsk_delete>
 800202a:	28ff      	cmp	r0, #255	; 0xff
 800202c:	bf0c      	ite	eq
 800202e:	2081      	moveq	r0, #129	; 0x81
 8002030:	2000      	movne	r0, #0
 8002032:	bd10      	pop	{r4, pc}
 8002034:	2080      	movs	r0, #128	; 0x80
 8002036:	bd10      	pop	{r4, pc}
 8002038:	200026f4 	.word	0x200026f4

0800203c <svcDelay>:
 800203c:	b508      	push	{r3, lr}
 800203e:	b128      	cbz	r0, 800204c <svcDelay+0x10>
 8002040:	f7ff fef2 	bl	8001e28 <rt_ms2tick>
 8002044:	f000 fc74 	bl	8002930 <rt_dly_wait>
 8002048:	2040      	movs	r0, #64	; 0x40
 800204a:	bd08      	pop	{r3, pc}
 800204c:	bd08      	pop	{r3, pc}
	...

08002050 <osDelay>:
 8002050:	b510      	push	{r4, lr}
 8002052:	f3ef 8410 	mrs	r4, PRIMASK
 8002056:	b934      	cbnz	r4, 8002066 <osDelay+0x16>
 8002058:	f3ef 8405 	mrs	r4, IPSR
 800205c:	b91c      	cbnz	r4, 8002066 <osDelay+0x16>
 800205e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800206c <osDelay+0x1c>
 8002062:	df00      	svc	0
 8002064:	bd10      	pop	{r4, pc}
 8002066:	2082      	movs	r0, #130	; 0x82
 8002068:	bd10      	pop	{r4, pc}
 800206a:	0000      	.short	0x0000
 800206c:	0800203d 	.word	0x0800203d

08002070 <svcTimerCall>:
 8002070:	0783      	lsls	r3, r0, #30
 8002072:	d105      	bne.n	8002080 <svcTimerCall+0x10>
 8002074:	b138      	cbz	r0, 8002086 <svcTimerCall+0x16>
 8002076:	6943      	ldr	r3, [r0, #20]
 8002078:	6901      	ldr	r1, [r0, #16]
 800207a:	681b      	ldr	r3, [r3, #0]
 800207c:	4618      	mov	r0, r3
 800207e:	4770      	bx	lr
 8002080:	2300      	movs	r3, #0
 8002082:	4619      	mov	r1, r3
 8002084:	e7fa      	b.n	800207c <svcTimerCall+0xc>
 8002086:	4603      	mov	r3, r0
 8002088:	e7fb      	b.n	8002082 <svcTimerCall+0x12>
	...

0800208c <osTimerCall>:
 800208c:	b510      	push	{r4, lr}
 800208e:	4604      	mov	r4, r0
 8002090:	4608      	mov	r0, r1
 8002092:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80020a0 <osTimerCall+0x14>
 8002096:	df00      	svc	0
 8002098:	e884 0003 	stmia.w	r4, {r0, r1}
 800209c:	4620      	mov	r0, r4
 800209e:	bd10      	pop	{r4, pc}
 80020a0:	08002071 	.word	0x08002071

080020a4 <svcMutexCreate>:
 80020a4:	b510      	push	{r4, lr}
 80020a6:	b148      	cbz	r0, 80020bc <svcMutexCreate+0x18>
 80020a8:	6804      	ldr	r4, [r0, #0]
 80020aa:	b124      	cbz	r4, 80020b6 <svcMutexCreate+0x12>
 80020ac:	7823      	ldrb	r3, [r4, #0]
 80020ae:	b923      	cbnz	r3, 80020ba <svcMutexCreate+0x16>
 80020b0:	4620      	mov	r0, r4
 80020b2:	f7ff fb57 	bl	8001764 <rt_mut_init>
 80020b6:	4620      	mov	r0, r4
 80020b8:	bd10      	pop	{r4, pc}
 80020ba:	2000      	movs	r0, #0
 80020bc:	bd10      	pop	{r4, pc}

080020be <svcMutexWait>:
 80020be:	b570      	push	{r4, r5, r6, lr}
 80020c0:	f010 0403 	ands.w	r4, r0, #3
 80020c4:	4605      	mov	r5, r0
 80020c6:	460e      	mov	r6, r1
 80020c8:	d111      	bne.n	80020ee <svcMutexWait+0x30>
 80020ca:	b180      	cbz	r0, 80020ee <svcMutexWait+0x30>
 80020cc:	7803      	ldrb	r3, [r0, #0]
 80020ce:	2b03      	cmp	r3, #3
 80020d0:	d10d      	bne.n	80020ee <svcMutexWait+0x30>
 80020d2:	4608      	mov	r0, r1
 80020d4:	f7ff fea8 	bl	8001e28 <rt_ms2tick>
 80020d8:	4601      	mov	r1, r0
 80020da:	4628      	mov	r0, r5
 80020dc:	f7ff fbba 	bl	8001854 <rt_mut_wait>
 80020e0:	2801      	cmp	r0, #1
 80020e2:	d106      	bne.n	80020f2 <svcMutexWait+0x34>
 80020e4:	2e00      	cmp	r6, #0
 80020e6:	bf14      	ite	ne
 80020e8:	20c1      	movne	r0, #193	; 0xc1
 80020ea:	2081      	moveq	r0, #129	; 0x81
 80020ec:	bd70      	pop	{r4, r5, r6, pc}
 80020ee:	2080      	movs	r0, #128	; 0x80
 80020f0:	bd70      	pop	{r4, r5, r6, pc}
 80020f2:	4620      	mov	r0, r4
 80020f4:	bd70      	pop	{r4, r5, r6, pc}

080020f6 <svcMutexRelease>:
 80020f6:	0782      	lsls	r2, r0, #30
 80020f8:	b508      	push	{r3, lr}
 80020fa:	d10a      	bne.n	8002112 <svcMutexRelease+0x1c>
 80020fc:	b148      	cbz	r0, 8002112 <svcMutexRelease+0x1c>
 80020fe:	7803      	ldrb	r3, [r0, #0]
 8002100:	2b03      	cmp	r3, #3
 8002102:	d106      	bne.n	8002112 <svcMutexRelease+0x1c>
 8002104:	f7ff fb36 	bl	8001774 <rt_mut_release>
 8002108:	28ff      	cmp	r0, #255	; 0xff
 800210a:	bf0c      	ite	eq
 800210c:	2081      	moveq	r0, #129	; 0x81
 800210e:	2000      	movne	r0, #0
 8002110:	bd08      	pop	{r3, pc}
 8002112:	2080      	movs	r0, #128	; 0x80
 8002114:	bd08      	pop	{r3, pc}
	...

08002118 <osMutexCreate>:
 8002118:	b570      	push	{r4, r5, r6, lr}
 800211a:	4605      	mov	r5, r0
 800211c:	f3ef 8410 	mrs	r4, PRIMASK
 8002120:	b994      	cbnz	r4, 8002148 <osMutexCreate+0x30>
 8002122:	f3ef 8605 	mrs	r6, IPSR
 8002126:	b97e      	cbnz	r6, 8002148 <osMutexCreate+0x30>
 8002128:	f3ef 8414 	mrs	r4, CONTROL
 800212c:	07e4      	lsls	r4, r4, #31
 800212e:	d406      	bmi.n	800213e <osMutexCreate+0x26>
 8002130:	4c06      	ldr	r4, [pc, #24]	; (800214c <osMutexCreate+0x34>)
 8002132:	7824      	ldrb	r4, [r4, #0]
 8002134:	b91c      	cbnz	r4, 800213e <osMutexCreate+0x26>
 8002136:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800213a:	f7ff bfb3 	b.w	80020a4 <svcMutexCreate>
 800213e:	4628      	mov	r0, r5
 8002140:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002150 <osMutexCreate+0x38>
 8002144:	df00      	svc	0
 8002146:	bd70      	pop	{r4, r5, r6, pc}
 8002148:	2000      	movs	r0, #0
 800214a:	bd70      	pop	{r4, r5, r6, pc}
 800214c:	20002705 	.word	0x20002705
 8002150:	080020a5 	.word	0x080020a5

08002154 <osMutexWait>:
 8002154:	b510      	push	{r4, lr}
 8002156:	f3ef 8410 	mrs	r4, PRIMASK
 800215a:	b934      	cbnz	r4, 800216a <osMutexWait+0x16>
 800215c:	f3ef 8405 	mrs	r4, IPSR
 8002160:	b91c      	cbnz	r4, 800216a <osMutexWait+0x16>
 8002162:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002170 <osMutexWait+0x1c>
 8002166:	df00      	svc	0
 8002168:	bd10      	pop	{r4, pc}
 800216a:	2082      	movs	r0, #130	; 0x82
 800216c:	bd10      	pop	{r4, pc}
 800216e:	0000      	.short	0x0000
 8002170:	080020bf 	.word	0x080020bf

08002174 <osThreadExit>:
 8002174:	4808      	ldr	r0, [pc, #32]	; (8002198 <osThreadExit+0x24>)
 8002176:	b508      	push	{r3, lr}
 8002178:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800217c:	6800      	ldr	r0, [r0, #0]
 800217e:	f7ff ffe9 	bl	8002154 <osMutexWait>
 8002182:	f8df c018 	ldr.w	r12, [pc, #24]	; 800219c <osThreadExit+0x28>
 8002186:	df00      	svc	0
 8002188:	4604      	mov	r4, r0
 800218a:	f7ff f9b3 	bl	80014f4 <sysThreadTerminate>
 800218e:	4620      	mov	r0, r4
 8002190:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80021a0 <osThreadExit+0x2c>
 8002194:	df00      	svc	0
 8002196:	e7fe      	b.n	8002196 <osThreadExit+0x22>
 8002198:	20002700 	.word	0x20002700
 800219c:	08001ff5 	.word	0x08001ff5
 80021a0:	0800200d 	.word	0x0800200d

080021a4 <osMutexRelease>:
 80021a4:	b510      	push	{r4, lr}
 80021a6:	f3ef 8410 	mrs	r4, PRIMASK
 80021aa:	b934      	cbnz	r4, 80021ba <osMutexRelease+0x16>
 80021ac:	f3ef 8405 	mrs	r4, IPSR
 80021b0:	b91c      	cbnz	r4, 80021ba <osMutexRelease+0x16>
 80021b2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80021c0 <osMutexRelease+0x1c>
 80021b6:	df00      	svc	0
 80021b8:	bd10      	pop	{r4, pc}
 80021ba:	2082      	movs	r0, #130	; 0x82
 80021bc:	bd10      	pop	{r4, pc}
 80021be:	0000      	.short	0x0000
 80021c0:	080020f7 	.word	0x080020f7

080021c4 <osThreadContextCreate>:
 80021c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80021c8:	4680      	mov	r8, r0
 80021ca:	460f      	mov	r7, r1
 80021cc:	4616      	mov	r6, r2
 80021ce:	f3ef 8410 	mrs	r4, PRIMASK
 80021d2:	bb04      	cbnz	r4, 8002216 <osThreadContextCreate+0x52>
 80021d4:	f3ef 8305 	mrs	r3, IPSR
 80021d8:	b9d3      	cbnz	r3, 8002210 <osThreadContextCreate+0x4c>
 80021da:	f3ef 8314 	mrs	r3, CONTROL
 80021de:	07db      	lsls	r3, r3, #31
 80021e0:	d406      	bmi.n	80021f0 <osThreadContextCreate+0x2c>
 80021e2:	4b0e      	ldr	r3, [pc, #56]	; (800221c <osThreadContextCreate+0x58>)
 80021e4:	781b      	ldrb	r3, [r3, #0]
 80021e6:	b91b      	cbnz	r3, 80021f0 <osThreadContextCreate+0x2c>
 80021e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80021ec:	f7ff becc 	b.w	8001f88 <svcThreadCreate>
 80021f0:	4d0b      	ldr	r5, [pc, #44]	; (8002220 <osThreadContextCreate+0x5c>)
 80021f2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80021f6:	6828      	ldr	r0, [r5, #0]
 80021f8:	f7ff ffac 	bl	8002154 <osMutexWait>
 80021fc:	4640      	mov	r0, r8
 80021fe:	4639      	mov	r1, r7
 8002200:	4632      	mov	r2, r6
 8002202:	f8df c020 	ldr.w	r12, [pc, #32]	; 8002224 <osThreadContextCreate+0x60>
 8002206:	df00      	svc	0
 8002208:	4604      	mov	r4, r0
 800220a:	6828      	ldr	r0, [r5, #0]
 800220c:	f7ff ffca 	bl	80021a4 <osMutexRelease>
 8002210:	4620      	mov	r0, r4
 8002212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002216:	2400      	movs	r4, #0
 8002218:	e7fa      	b.n	8002210 <osThreadContextCreate+0x4c>
 800221a:	bf00      	nop
 800221c:	20002705 	.word	0x20002705
 8002220:	20002700 	.word	0x20002700
 8002224:	08001f89 	.word	0x08001f89

08002228 <osThreadCreate>:
 8002228:	2200      	movs	r2, #0
 800222a:	f7ff bfcb 	b.w	80021c4 <osThreadContextCreate>

0800222e <svcMessageCreate>:
 800222e:	b510      	push	{r4, lr}
 8002230:	4604      	mov	r4, r0
 8002232:	b160      	cbz	r0, 800224e <svcMessageCreate+0x20>
 8002234:	6801      	ldr	r1, [r0, #0]
 8002236:	b151      	cbz	r1, 800224e <svcMessageCreate+0x20>
 8002238:	6840      	ldr	r0, [r0, #4]
 800223a:	b148      	cbz	r0, 8002250 <svcMessageCreate+0x22>
 800223c:	7803      	ldrb	r3, [r0, #0]
 800223e:	b933      	cbnz	r3, 800224e <svcMessageCreate+0x20>
 8002240:	3104      	adds	r1, #4
 8002242:	0089      	lsls	r1, r1, #2
 8002244:	b289      	uxth	r1, r1
 8002246:	f7ff fc71 	bl	8001b2c <rt_mbx_init>
 800224a:	6860      	ldr	r0, [r4, #4]
 800224c:	bd10      	pop	{r4, pc}
 800224e:	2000      	movs	r0, #0
 8002250:	bd10      	pop	{r4, pc}
	...

08002254 <svcKernelInitialize>:
 8002254:	b538      	push	{r3, r4, r5, lr}
 8002256:	4c11      	ldr	r4, [pc, #68]	; (800229c <svcKernelInitialize+0x48>)
 8002258:	7823      	ldrb	r3, [r4, #0]
 800225a:	b90b      	cbnz	r3, 8002260 <svcKernelInitialize+0xc>
 800225c:	f000 faa8 	bl	80027b0 <rt_sys_init>
 8002260:	4b0f      	ldr	r3, [pc, #60]	; (80022a0 <svcKernelInitialize+0x4c>)
 8002262:	7825      	ldrb	r5, [r4, #0]
 8002264:	681b      	ldr	r3, [r3, #0]
 8002266:	22ff      	movs	r2, #255	; 0xff
 8002268:	709a      	strb	r2, [r3, #2]
 800226a:	b98d      	cbnz	r5, 8002290 <svcKernelInitialize+0x3c>
 800226c:	4629      	mov	r1, r5
 800226e:	480d      	ldr	r0, [pc, #52]	; (80022a4 <svcKernelInitialize+0x50>)
 8002270:	f7ff ffdd 	bl	800222e <svcMessageCreate>
 8002274:	4b0c      	ldr	r3, [pc, #48]	; (80022a8 <svcKernelInitialize+0x54>)
 8002276:	462a      	mov	r2, r5
 8002278:	6018      	str	r0, [r3, #0]
 800227a:	4629      	mov	r1, r5
 800227c:	480b      	ldr	r0, [pc, #44]	; (80022ac <svcKernelInitialize+0x58>)
 800227e:	f7ff fe83 	bl	8001f88 <svcThreadCreate>
 8002282:	4b0b      	ldr	r3, [pc, #44]	; (80022b0 <svcKernelInitialize+0x5c>)
 8002284:	6018      	str	r0, [r3, #0]
 8002286:	480b      	ldr	r0, [pc, #44]	; (80022b4 <svcKernelInitialize+0x60>)
 8002288:	f7ff ff46 	bl	8002118 <osMutexCreate>
 800228c:	4b0a      	ldr	r3, [pc, #40]	; (80022b8 <svcKernelInitialize+0x64>)
 800228e:	6018      	str	r0, [r3, #0]
 8002290:	2301      	movs	r3, #1
 8002292:	7023      	strb	r3, [r4, #0]
 8002294:	4b09      	ldr	r3, [pc, #36]	; (80022bc <svcKernelInitialize+0x68>)
 8002296:	2000      	movs	r0, #0
 8002298:	7018      	strb	r0, [r3, #0]
 800229a:	bd38      	pop	{r3, r4, r5, pc}
 800229c:	20002704 	.word	0x20002704
 80022a0:	2000270c 	.word	0x2000270c
 80022a4:	08005c50 	.word	0x08005c50
 80022a8:	20001fc8 	.word	0x20001fc8
 80022ac:	08005c6c 	.word	0x08005c6c
 80022b0:	200026bc 	.word	0x200026bc
 80022b4:	08005c84 	.word	0x08005c84
 80022b8:	20002700 	.word	0x20002700
 80022bc:	20002705 	.word	0x20002705

080022c0 <osKernelInitialize>:
 80022c0:	b510      	push	{r4, lr}
 80022c2:	f3ef 8410 	mrs	r4, PRIMASK
 80022c6:	b974      	cbnz	r4, 80022e6 <osKernelInitialize+0x26>
 80022c8:	f3ef 8405 	mrs	r4, IPSR
 80022cc:	b95c      	cbnz	r4, 80022e6 <osKernelInitialize+0x26>
 80022ce:	f3ef 8414 	mrs	r4, CONTROL
 80022d2:	07e4      	lsls	r4, r4, #31
 80022d4:	d403      	bmi.n	80022de <osKernelInitialize+0x1e>
 80022d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80022da:	f7ff bfbb 	b.w	8002254 <svcKernelInitialize>
 80022de:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80022ec <osKernelInitialize+0x2c>
 80022e2:	df00      	svc	0
 80022e4:	bd10      	pop	{r4, pc}
 80022e6:	2082      	movs	r0, #130	; 0x82
 80022e8:	bd10      	pop	{r4, pc}
 80022ea:	0000      	.short	0x0000
 80022ec:	08002255 	.word	0x08002255

080022f0 <svcMessageGet>:
 80022f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80022f4:	460c      	mov	r4, r1
 80022f6:	4680      	mov	r8, r0
 80022f8:	b318      	cbz	r0, 8002342 <svcMessageGet+0x52>
 80022fa:	7803      	ldrb	r3, [r0, #0]
 80022fc:	2b01      	cmp	r3, #1
 80022fe:	d125      	bne.n	800234c <svcMessageGet+0x5c>
 8002300:	4608      	mov	r0, r1
 8002302:	f7ff fd91 	bl	8001e28 <rt_ms2tick>
 8002306:	a902      	add	r1, sp, #8
 8002308:	4602      	mov	r2, r0
 800230a:	4640      	mov	r0, r8
 800230c:	f7ff fc1c 	bl	8001b48 <rt_mbx_wait>
 8002310:	2801      	cmp	r0, #1
 8002312:	d111      	bne.n	8002338 <svcMessageGet+0x48>
 8002314:	2000      	movs	r0, #0
 8002316:	2c00      	cmp	r4, #0
 8002318:	4602      	mov	r2, r0
 800231a:	4603      	mov	r3, r0
 800231c:	bf18      	it	ne
 800231e:	2040      	movne	r0, #64	; 0x40
 8002320:	9902      	ldr	r1, [sp, #8]
 8002322:	4604      	mov	r4, r0
 8002324:	460d      	mov	r5, r1
 8002326:	4616      	mov	r6, r2
 8002328:	461f      	mov	r7, r3
 800232a:	4620      	mov	r0, r4
 800232c:	4629      	mov	r1, r5
 800232e:	4632      	mov	r2, r6
 8002330:	463b      	mov	r3, r7
 8002332:	b004      	add	sp, #16
 8002334:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002338:	2000      	movs	r0, #0
 800233a:	4602      	mov	r2, r0
 800233c:	4603      	mov	r3, r0
 800233e:	2010      	movs	r0, #16
 8002340:	e7ee      	b.n	8002320 <svcMessageGet+0x30>
 8002342:	2480      	movs	r4, #128	; 0x80
 8002344:	4605      	mov	r5, r0
 8002346:	4606      	mov	r6, r0
 8002348:	4607      	mov	r7, r0
 800234a:	e7ee      	b.n	800232a <svcMessageGet+0x3a>
 800234c:	2500      	movs	r5, #0
 800234e:	2480      	movs	r4, #128	; 0x80
 8002350:	462e      	mov	r6, r5
 8002352:	462f      	mov	r7, r5
 8002354:	e7e9      	b.n	800232a <svcMessageGet+0x3a>

08002356 <isrMessagePut>:
 8002356:	b570      	push	{r4, r5, r6, lr}
 8002358:	460e      	mov	r6, r1
 800235a:	4614      	mov	r4, r2
 800235c:	4605      	mov	r5, r0
 800235e:	b160      	cbz	r0, 800237a <isrMessagePut+0x24>
 8002360:	b95a      	cbnz	r2, 800237a <isrMessagePut+0x24>
 8002362:	7803      	ldrb	r3, [r0, #0]
 8002364:	2b01      	cmp	r3, #1
 8002366:	d108      	bne.n	800237a <isrMessagePut+0x24>
 8002368:	f7ff fc44 	bl	8001bf4 <rt_mbx_check>
 800236c:	b138      	cbz	r0, 800237e <isrMessagePut+0x28>
 800236e:	4628      	mov	r0, r5
 8002370:	4631      	mov	r1, r6
 8002372:	f7ff fc43 	bl	8001bfc <isr_mbx_send>
 8002376:	4620      	mov	r0, r4
 8002378:	bd70      	pop	{r4, r5, r6, pc}
 800237a:	2080      	movs	r0, #128	; 0x80
 800237c:	bd70      	pop	{r4, r5, r6, pc}
 800237e:	2081      	movs	r0, #129	; 0x81
 8002380:	bd70      	pop	{r4, r5, r6, pc}
	...

08002384 <sysTimerTick>:
 8002384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002386:	4e11      	ldr	r6, [pc, #68]	; (80023cc <sysTimerTick+0x48>)
 8002388:	6834      	ldr	r4, [r6, #0]
 800238a:	b12c      	cbz	r4, 8002398 <sysTimerTick+0x14>
 800238c:	68a3      	ldr	r3, [r4, #8]
 800238e:	4f10      	ldr	r7, [pc, #64]	; (80023d0 <sysTimerTick+0x4c>)
 8002390:	3b01      	subs	r3, #1
 8002392:	60a3      	str	r3, [r4, #8]
 8002394:	68a2      	ldr	r2, [r4, #8]
 8002396:	b102      	cbz	r2, 800239a <sysTimerTick+0x16>
 8002398:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800239a:	6825      	ldr	r5, [r4, #0]
 800239c:	6838      	ldr	r0, [r7, #0]
 800239e:	6035      	str	r5, [r6, #0]
 80023a0:	4621      	mov	r1, r4
 80023a2:	f7ff ffd8 	bl	8002356 <isrMessagePut>
 80023a6:	b110      	cbz	r0, 80023ae <sysTimerTick+0x2a>
 80023a8:	2004      	movs	r0, #4
 80023aa:	f7ff f895 	bl	80014d8 <os_error>
 80023ae:	7963      	ldrb	r3, [r4, #5]
 80023b0:	2b01      	cmp	r3, #1
 80023b2:	d107      	bne.n	80023c4 <sysTimerTick+0x40>
 80023b4:	68e1      	ldr	r1, [r4, #12]
 80023b6:	4620      	mov	r0, r4
 80023b8:	f7ff fd1c 	bl	8001df4 <rt_timer_insert>
 80023bc:	2d00      	cmp	r5, #0
 80023be:	d0eb      	beq.n	8002398 <sysTimerTick+0x14>
 80023c0:	462c      	mov	r4, r5
 80023c2:	e7e7      	b.n	8002394 <sysTimerTick+0x10>
 80023c4:	2301      	movs	r3, #1
 80023c6:	7123      	strb	r3, [r4, #4]
 80023c8:	e7f8      	b.n	80023bc <sysTimerTick+0x38>
 80023ca:	bf00      	nop
 80023cc:	20002708 	.word	0x20002708
 80023d0:	20001fc8 	.word	0x20001fc8

080023d4 <isrMessageGet>:
 80023d4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80023d6:	4604      	mov	r4, r0
 80023d8:	4616      	mov	r6, r2
 80023da:	4608      	mov	r0, r1
 80023dc:	b101      	cbz	r1, 80023e0 <isrMessageGet+0xc>
 80023de:	b122      	cbz	r2, 80023ea <isrMessageGet+0x16>
 80023e0:	2380      	movs	r3, #128	; 0x80
 80023e2:	6023      	str	r3, [r4, #0]
 80023e4:	4620      	mov	r0, r4
 80023e6:	b004      	add	sp, #16
 80023e8:	bd70      	pop	{r4, r5, r6, pc}
 80023ea:	780b      	ldrb	r3, [r1, #0]
 80023ec:	2b01      	cmp	r3, #1
 80023ee:	d1f7      	bne.n	80023e0 <isrMessageGet+0xc>
 80023f0:	a902      	add	r1, sp, #8
 80023f2:	f7ff fc0a 	bl	8001c0a <isr_mbx_receive>
 80023f6:	2804      	cmp	r0, #4
 80023f8:	bf08      	it	eq
 80023fa:	2310      	moveq	r3, #16
 80023fc:	ad01      	add	r5, sp, #4
 80023fe:	bf14      	ite	ne
 8002400:	9601      	strne	r6, [sp, #4]
 8002402:	9301      	streq	r3, [sp, #4]
 8002404:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002408:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800240c:	e7ea      	b.n	80023e4 <isrMessageGet+0x10>
	...

08002410 <osMessageGet>:
 8002410:	b538      	push	{r3, r4, r5, lr}
 8002412:	4604      	mov	r4, r0
 8002414:	4615      	mov	r5, r2
 8002416:	f3ef 8010 	mrs	r0, PRIMASK
 800241a:	b910      	cbnz	r0, 8002422 <osMessageGet+0x12>
 800241c:	f3ef 8005 	mrs	r0, IPSR
 8002420:	b128      	cbz	r0, 800242e <osMessageGet+0x1e>
 8002422:	462a      	mov	r2, r5
 8002424:	4620      	mov	r0, r4
 8002426:	f7ff ffd5 	bl	80023d4 <isrMessageGet>
 800242a:	4620      	mov	r0, r4
 800242c:	bd38      	pop	{r3, r4, r5, pc}
 800242e:	4608      	mov	r0, r1
 8002430:	4611      	mov	r1, r2
 8002432:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002440 <osMessageGet+0x30>
 8002436:	df00      	svc	0
 8002438:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800243c:	e7f5      	b.n	800242a <osMessageGet+0x1a>
 800243e:	0000      	.short	0x0000
 8002440:	080022f1 	.word	0x080022f1

08002444 <osTimerThread>:
 8002444:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002446:	4c0a      	ldr	r4, [pc, #40]	; (8002470 <osTimerThread+0x2c>)
 8002448:	6821      	ldr	r1, [r4, #0]
 800244a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800244e:	a803      	add	r0, sp, #12
 8002450:	f7ff ffde 	bl	8002410 <osMessageGet>
 8002454:	9b03      	ldr	r3, [sp, #12]
 8002456:	2b10      	cmp	r3, #16
 8002458:	d1f6      	bne.n	8002448 <osTimerThread+0x4>
 800245a:	9904      	ldr	r1, [sp, #16]
 800245c:	a801      	add	r0, sp, #4
 800245e:	f7ff fe15 	bl	800208c <osTimerCall>
 8002462:	9b01      	ldr	r3, [sp, #4]
 8002464:	2b00      	cmp	r3, #0
 8002466:	d0ef      	beq.n	8002448 <osTimerThread+0x4>
 8002468:	9802      	ldr	r0, [sp, #8]
 800246a:	4798      	blx	r3
 800246c:	e7ec      	b.n	8002448 <osTimerThread+0x4>
 800246e:	bf00      	nop
 8002470:	20001fc8 	.word	0x20001fc8

08002474 <rt_switch_req>:
 8002474:	4b05      	ldr	r3, [pc, #20]	; (800248c <rt_switch_req+0x18>)
 8002476:	6058      	str	r0, [r3, #4]
 8002478:	2302      	movs	r3, #2
 800247a:	7043      	strb	r3, [r0, #1]
 800247c:	4b04      	ldr	r3, [pc, #16]	; (8002490 <rt_switch_req+0x1c>)
 800247e:	681b      	ldr	r3, [r3, #0]
 8002480:	b11b      	cbz	r3, 800248a <rt_switch_req+0x16>
 8002482:	691b      	ldr	r3, [r3, #16]
 8002484:	b10b      	cbz	r3, 800248a <rt_switch_req+0x16>
 8002486:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002488:	4718      	bx	r3
 800248a:	4770      	bx	lr
 800248c:	2000270c 	.word	0x2000270c
 8002490:	200026f4 	.word	0x200026f4

08002494 <rt_dispatch.part.0>:
 8002494:	b508      	push	{r3, lr}
 8002496:	4803      	ldr	r0, [pc, #12]	; (80024a4 <rt_dispatch.part.0+0x10>)
 8002498:	f7ff f884 	bl	80015a4 <rt_get_first>
 800249c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80024a0:	f7ff bfe8 	b.w	8002474 <rt_switch_req>
 80024a4:	200026c0 	.word	0x200026c0

080024a8 <rt_dispatch>:
 80024a8:	b570      	push	{r4, r5, r6, lr}
 80024aa:	4604      	mov	r4, r0
 80024ac:	b918      	cbnz	r0, 80024b6 <rt_dispatch+0xe>
 80024ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80024b2:	f7ff bfef 	b.w	8002494 <rt_dispatch.part.0>
 80024b6:	4e0c      	ldr	r6, [pc, #48]	; (80024e8 <rt_dispatch+0x40>)
 80024b8:	78a2      	ldrb	r2, [r4, #2]
 80024ba:	6830      	ldr	r0, [r6, #0]
 80024bc:	7883      	ldrb	r3, [r0, #2]
 80024be:	429a      	cmp	r2, r3
 80024c0:	f04f 0501 	mov.w	r5, #1
 80024c4:	d908      	bls.n	80024d8 <rt_dispatch+0x30>
 80024c6:	f7ff f87f 	bl	80015c8 <rt_put_rdy_first>
 80024ca:	6833      	ldr	r3, [r6, #0]
 80024cc:	705d      	strb	r5, [r3, #1]
 80024ce:	4620      	mov	r0, r4
 80024d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80024d4:	f7ff bfce 	b.w	8002474 <rt_switch_req>
 80024d8:	7065      	strb	r5, [r4, #1]
 80024da:	4621      	mov	r1, r4
 80024dc:	4803      	ldr	r0, [pc, #12]	; (80024ec <rt_dispatch+0x44>)
 80024de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80024e2:	f7ff b847 	b.w	8001574 <rt_put_prio>
 80024e6:	bf00      	nop
 80024e8:	2000270c 	.word	0x2000270c
 80024ec:	200026c0 	.word	0x200026c0

080024f0 <rt_block>:
 80024f0:	b538      	push	{r3, r4, r5, lr}
 80024f2:	460d      	mov	r5, r1
 80024f4:	4601      	mov	r1, r0
 80024f6:	b180      	cbz	r0, 800251a <rt_block+0x2a>
 80024f8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024fc:	4298      	cmp	r0, r3
 80024fe:	4c07      	ldr	r4, [pc, #28]	; (800251c <rt_block+0x2c>)
 8002500:	d002      	beq.n	8002508 <rt_block+0x18>
 8002502:	6820      	ldr	r0, [r4, #0]
 8002504:	f7ff f86a 	bl	80015dc <rt_put_dly>
 8002508:	6823      	ldr	r3, [r4, #0]
 800250a:	4805      	ldr	r0, [pc, #20]	; (8002520 <rt_block+0x30>)
 800250c:	705d      	strb	r5, [r3, #1]
 800250e:	f7ff f849 	bl	80015a4 <rt_get_first>
 8002512:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002516:	f7ff bfad 	b.w	8002474 <rt_switch_req>
 800251a:	bd38      	pop	{r3, r4, r5, pc}
 800251c:	2000270c 	.word	0x2000270c
 8002520:	200026c0 	.word	0x200026c0

08002524 <rt_tsk_self>:
 8002524:	4b02      	ldr	r3, [pc, #8]	; (8002530 <rt_tsk_self+0xc>)
 8002526:	6818      	ldr	r0, [r3, #0]
 8002528:	b100      	cbz	r0, 800252c <rt_tsk_self+0x8>
 800252a:	78c0      	ldrb	r0, [r0, #3]
 800252c:	4770      	bx	lr
 800252e:	bf00      	nop
 8002530:	2000270c 	.word	0x2000270c

08002534 <rt_tsk_prio>:
 8002534:	b510      	push	{r4, lr}
 8002536:	b9a8      	cbnz	r0, 8002564 <rt_tsk_prio+0x30>
 8002538:	4b19      	ldr	r3, [pc, #100]	; (80025a0 <rt_tsk_prio+0x6c>)
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	7099      	strb	r1, [r3, #2]
 800253e:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8002542:	4818      	ldr	r0, [pc, #96]	; (80025a4 <rt_tsk_prio+0x70>)
 8002544:	6843      	ldr	r3, [r0, #4]
 8002546:	789b      	ldrb	r3, [r3, #2]
 8002548:	428b      	cmp	r3, r1
 800254a:	d801      	bhi.n	8002550 <rt_tsk_prio+0x1c>
 800254c:	2000      	movs	r0, #0
 800254e:	bd10      	pop	{r4, pc}
 8002550:	4c13      	ldr	r4, [pc, #76]	; (80025a0 <rt_tsk_prio+0x6c>)
 8002552:	6821      	ldr	r1, [r4, #0]
 8002554:	f7ff f80e 	bl	8001574 <rt_put_prio>
 8002558:	6823      	ldr	r3, [r4, #0]
 800255a:	2201      	movs	r2, #1
 800255c:	705a      	strb	r2, [r3, #1]
 800255e:	f7ff ff99 	bl	8002494 <rt_dispatch.part.0>
 8002562:	e7f3      	b.n	800254c <rt_tsk_prio+0x18>
 8002564:	4b10      	ldr	r3, [pc, #64]	; (80025a8 <rt_tsk_prio+0x74>)
 8002566:	881b      	ldrh	r3, [r3, #0]
 8002568:	4298      	cmp	r0, r3
 800256a:	d817      	bhi.n	800259c <rt_tsk_prio+0x68>
 800256c:	3801      	subs	r0, #1
 800256e:	4b0f      	ldr	r3, [pc, #60]	; (80025ac <rt_tsk_prio+0x78>)
 8002570:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002574:	b194      	cbz	r4, 800259c <rt_tsk_prio+0x68>
 8002576:	4b0a      	ldr	r3, [pc, #40]	; (80025a0 <rt_tsk_prio+0x6c>)
 8002578:	70a1      	strb	r1, [r4, #2]
 800257a:	681b      	ldr	r3, [r3, #0]
 800257c:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 8002580:	429c      	cmp	r4, r3
 8002582:	d0de      	beq.n	8002542 <rt_tsk_prio+0xe>
 8002584:	4620      	mov	r0, r4
 8002586:	f7ff f89b 	bl	80016c0 <rt_resort_prio>
 800258a:	7863      	ldrb	r3, [r4, #1]
 800258c:	2b01      	cmp	r3, #1
 800258e:	d1dd      	bne.n	800254c <rt_tsk_prio+0x18>
 8002590:	4804      	ldr	r0, [pc, #16]	; (80025a4 <rt_tsk_prio+0x70>)
 8002592:	f7ff f807 	bl	80015a4 <rt_get_first>
 8002596:	f7ff ff87 	bl	80024a8 <rt_dispatch>
 800259a:	e7d7      	b.n	800254c <rt_tsk_prio+0x18>
 800259c:	20ff      	movs	r0, #255	; 0xff
 800259e:	bd10      	pop	{r4, pc}
 80025a0:	2000270c 	.word	0x2000270c
 80025a4:	200026c0 	.word	0x200026c0
 80025a8:	08005c4c 	.word	0x08005c4c
 80025ac:	20001f08 	.word	0x20001f08

080025b0 <rt_tsk_create>:
 80025b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80025b4:	f011 0fff 	tst.w	r1, #255	; 0xff
 80025b8:	460d      	mov	r5, r1
 80025ba:	4680      	mov	r8, r0
 80025bc:	4823      	ldr	r0, [pc, #140]	; (800264c <rt_tsk_create+0x9c>)
 80025be:	4616      	mov	r6, r2
 80025c0:	469a      	mov	r10, r3
 80025c2:	bf08      	it	eq
 80025c4:	3501      	addeq	r5, #1
 80025c6:	f7ff fa90 	bl	8001aea <rt_alloc_box>
 80025ca:	4604      	mov	r4, r0
 80025cc:	b920      	cbnz	r0, 80025d8 <rt_tsk_create+0x28>
 80025ce:	f04f 0900 	mov.w	r9, #0
 80025d2:	4648      	mov	r0, r9
 80025d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80025d8:	4b1d      	ldr	r3, [pc, #116]	; (8002650 <rt_tsk_create+0xa0>)
 80025da:	6306      	str	r6, [r0, #48]	; 0x30
 80025dc:	881b      	ldrh	r3, [r3, #0]
 80025de:	4e1d      	ldr	r6, [pc, #116]	; (8002654 <rt_tsk_create+0xa4>)
 80025e0:	0a28      	lsrs	r0, r5, #8
 80025e2:	62a0      	str	r0, [r4, #40]	; 0x28
 80025e4:	2100      	movs	r1, #0
 80025e6:	428b      	cmp	r3, r1
 80025e8:	f101 0901 	add.w	r9, r1, #1
 80025ec:	d0ef      	beq.n	80025ce <rt_tsk_create+0x1e>
 80025ee:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 80025f2:	460f      	mov	r7, r1
 80025f4:	f852 2c04 	ldr.w	r2, [r2, #-4]
 80025f8:	4649      	mov	r1, r9
 80025fa:	2a00      	cmp	r2, #0
 80025fc:	d1f3      	bne.n	80025e6 <rt_tsk_create+0x36>
 80025fe:	b2ed      	uxtb	r5, r5
 8002600:	2301      	movs	r3, #1
 8002602:	f884 9003 	strb.w	r9, [r4, #3]
 8002606:	f8c4 a01c 	str.w	r10, [r4, #28]
 800260a:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 800260e:	7022      	strb	r2, [r4, #0]
 8002610:	7063      	strb	r3, [r4, #1]
 8002612:	70a5      	strb	r5, [r4, #2]
 8002614:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002618:	6062      	str	r2, [r4, #4]
 800261a:	60a2      	str	r2, [r4, #8]
 800261c:	60e2      	str	r2, [r4, #12]
 800261e:	6122      	str	r2, [r4, #16]
 8002620:	6222      	str	r2, [r4, #32]
 8002622:	82a2      	strh	r2, [r4, #20]
 8002624:	82e2      	strh	r2, [r4, #22]
 8002626:	8322      	strh	r2, [r4, #24]
 8002628:	8362      	strh	r2, [r4, #26]
 800262a:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800262e:	b918      	cbnz	r0, 8002638 <rt_tsk_create+0x88>
 8002630:	4809      	ldr	r0, [pc, #36]	; (8002658 <rt_tsk_create+0xa8>)
 8002632:	f7ff fa5a 	bl	8001aea <rt_alloc_box>
 8002636:	6320      	str	r0, [r4, #48]	; 0x30
 8002638:	4620      	mov	r0, r4
 800263a:	4641      	mov	r1, r8
 800263c:	f7ff f938 	bl	80018b0 <rt_init_stack>
 8002640:	4620      	mov	r0, r4
 8002642:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 8002646:	f7ff ff2f 	bl	80024a8 <rt_dispatch>
 800264a:	e7c2      	b.n	80025d2 <rt_tsk_create+0x22>
 800264c:	200022f0 	.word	0x200022f0
 8002650:	08005c4c 	.word	0x08005c4c
 8002654:	20001f08 	.word	0x20001f08
 8002658:	20001cf8 	.word	0x20001cf8

0800265c <rt_tsk_delete>:
 800265c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8002660:	4d4d      	ldr	r5, [pc, #308]	; (8002798 <rt_tsk_delete+0x13c>)
 8002662:	b118      	cbz	r0, 800266c <rt_tsk_delete+0x10>
 8002664:	682b      	ldr	r3, [r5, #0]
 8002666:	78db      	ldrb	r3, [r3, #3]
 8002668:	4298      	cmp	r0, r3
 800266a:	d141      	bne.n	80026f0 <rt_tsk_delete+0x94>
 800266c:	682c      	ldr	r4, [r5, #0]
 800266e:	f8df 813c 	ldr.w	r8, [pc, #316]	; 80027ac <rt_tsk_delete+0x150>
 8002672:	2300      	movs	r3, #0
 8002674:	7063      	strb	r3, [r4, #1]
 8002676:	f002 f970 	bl	800495a <rt_get_PSP>
 800267a:	62e0      	str	r0, [r4, #44]	; 0x2c
 800267c:	f7ff f9fe 	bl	8001a7c <rt_stk_check>
 8002680:	682b      	ldr	r3, [r5, #0]
 8002682:	6a1c      	ldr	r4, [r3, #32]
 8002684:	2701      	movs	r7, #1
 8002686:	b9a4      	cbnz	r4, 80026b2 <rt_tsk_delete+0x56>
 8002688:	682a      	ldr	r2, [r5, #0]
 800268a:	4944      	ldr	r1, [pc, #272]	; (800279c <rt_tsk_delete+0x140>)
 800268c:	78d3      	ldrb	r3, [r2, #3]
 800268e:	4844      	ldr	r0, [pc, #272]	; (80027a0 <rt_tsk_delete+0x144>)
 8002690:	3b01      	subs	r3, #1
 8002692:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 8002696:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8002698:	f7ff fa34 	bl	8001b04 <rt_free_box>
 800269c:	6829      	ldr	r1, [r5, #0]
 800269e:	4841      	ldr	r0, [pc, #260]	; (80027a4 <rt_tsk_delete+0x148>)
 80026a0:	630c      	str	r4, [r1, #48]	; 0x30
 80026a2:	f7ff fa2f 	bl	8001b04 <rt_free_box>
 80026a6:	602c      	str	r4, [r5, #0]
 80026a8:	f7ff fef4 	bl	8002494 <rt_dispatch.part.0>
 80026ac:	4620      	mov	r0, r4
 80026ae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80026b2:	6863      	ldr	r3, [r4, #4]
 80026b4:	b1b3      	cbz	r3, 80026e4 <rt_tsk_delete+0x88>
 80026b6:	4620      	mov	r0, r4
 80026b8:	f7fe ff74 	bl	80015a4 <rt_get_first>
 80026bc:	2100      	movs	r1, #0
 80026be:	4606      	mov	r6, r0
 80026c0:	f7ff f942 	bl	8001948 <rt_ret_val>
 80026c4:	4630      	mov	r0, r6
 80026c6:	f7ff f813 	bl	80016f0 <rt_rmv_dly>
 80026ca:	7077      	strb	r7, [r6, #1]
 80026cc:	4631      	mov	r1, r6
 80026ce:	4640      	mov	r0, r8
 80026d0:	f7fe ff50 	bl	8001574 <rt_put_prio>
 80026d4:	68e3      	ldr	r3, [r4, #12]
 80026d6:	6a32      	ldr	r2, [r6, #32]
 80026d8:	8067      	strh	r7, [r4, #2]
 80026da:	60a6      	str	r6, [r4, #8]
 80026dc:	60e2      	str	r2, [r4, #12]
 80026de:	6234      	str	r4, [r6, #32]
 80026e0:	461c      	mov	r4, r3
 80026e2:	e7d0      	b.n	8002686 <rt_tsk_delete+0x2a>
 80026e4:	68e2      	ldr	r2, [r4, #12]
 80026e6:	8063      	strh	r3, [r4, #2]
 80026e8:	60a3      	str	r3, [r4, #8]
 80026ea:	60e3      	str	r3, [r4, #12]
 80026ec:	4614      	mov	r4, r2
 80026ee:	e7ca      	b.n	8002686 <rt_tsk_delete+0x2a>
 80026f0:	4b2d      	ldr	r3, [pc, #180]	; (80027a8 <rt_tsk_delete+0x14c>)
 80026f2:	881b      	ldrh	r3, [r3, #0]
 80026f4:	4298      	cmp	r0, r3
 80026f6:	d84d      	bhi.n	8002794 <rt_tsk_delete+0x138>
 80026f8:	4b28      	ldr	r3, [pc, #160]	; (800279c <rt_tsk_delete+0x140>)
 80026fa:	1e47      	subs	r7, r0, #1
 80026fc:	4699      	mov	r9, r3
 80026fe:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 8002702:	2e00      	cmp	r6, #0
 8002704:	d046      	beq.n	8002794 <rt_tsk_delete+0x138>
 8002706:	4630      	mov	r0, r6
 8002708:	f7fe ffc4 	bl	8001694 <rt_rmv_list>
 800270c:	4630      	mov	r0, r6
 800270e:	f7fe ffef 	bl	80016f0 <rt_rmv_dly>
 8002712:	f8df b098 	ldr.w	r11, [pc, #152]	; 80027ac <rt_tsk_delete+0x150>
 8002716:	6a34      	ldr	r4, [r6, #32]
 8002718:	f04f 0a01 	mov.w	r10, #1
 800271c:	b9b4      	cbnz	r4, 800274c <rt_tsk_delete+0xf0>
 800271e:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8002720:	481f      	ldr	r0, [pc, #124]	; (80027a0 <rt_tsk_delete+0x144>)
 8002722:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 8002726:	f7ff f9ed 	bl	8001b04 <rt_free_box>
 800272a:	4631      	mov	r1, r6
 800272c:	6334      	str	r4, [r6, #48]	; 0x30
 800272e:	481d      	ldr	r0, [pc, #116]	; (80027a4 <rt_tsk_delete+0x148>)
 8002730:	f7ff f9e8 	bl	8001b04 <rt_free_box>
 8002734:	481d      	ldr	r0, [pc, #116]	; (80027ac <rt_tsk_delete+0x150>)
 8002736:	6829      	ldr	r1, [r5, #0]
 8002738:	6843      	ldr	r3, [r0, #4]
 800273a:	789a      	ldrb	r2, [r3, #2]
 800273c:	788b      	ldrb	r3, [r1, #2]
 800273e:	429a      	cmp	r2, r3
 8002740:	d9b4      	bls.n	80026ac <rt_tsk_delete+0x50>
 8002742:	2301      	movs	r3, #1
 8002744:	704b      	strb	r3, [r1, #1]
 8002746:	f7fe ff15 	bl	8001574 <rt_put_prio>
 800274a:	e7ad      	b.n	80026a8 <rt_tsk_delete+0x4c>
 800274c:	6863      	ldr	r3, [r4, #4]
 800274e:	b1db      	cbz	r3, 8002788 <rt_tsk_delete+0x12c>
 8002750:	4620      	mov	r0, r4
 8002752:	f7fe ff27 	bl	80015a4 <rt_get_first>
 8002756:	2100      	movs	r1, #0
 8002758:	4680      	mov	r8, r0
 800275a:	f7ff f8f5 	bl	8001948 <rt_ret_val>
 800275e:	4640      	mov	r0, r8
 8002760:	f7fe ffc6 	bl	80016f0 <rt_rmv_dly>
 8002764:	f888 a001 	strb.w	r10, [r8, #1]
 8002768:	4641      	mov	r1, r8
 800276a:	4658      	mov	r0, r11
 800276c:	f7fe ff02 	bl	8001574 <rt_put_prio>
 8002770:	68e3      	ldr	r3, [r4, #12]
 8002772:	f8d8 2020 	ldr.w	r2, [r8, #32]
 8002776:	f8a4 a002 	strh.w	r10, [r4, #2]
 800277a:	f8c4 8008 	str.w	r8, [r4, #8]
 800277e:	60e2      	str	r2, [r4, #12]
 8002780:	f8c8 4020 	str.w	r4, [r8, #32]
 8002784:	461c      	mov	r4, r3
 8002786:	e7c9      	b.n	800271c <rt_tsk_delete+0xc0>
 8002788:	68e2      	ldr	r2, [r4, #12]
 800278a:	8063      	strh	r3, [r4, #2]
 800278c:	60a3      	str	r3, [r4, #8]
 800278e:	60e3      	str	r3, [r4, #12]
 8002790:	4614      	mov	r4, r2
 8002792:	e7c3      	b.n	800271c <rt_tsk_delete+0xc0>
 8002794:	24ff      	movs	r4, #255	; 0xff
 8002796:	e789      	b.n	80026ac <rt_tsk_delete+0x50>
 8002798:	2000270c 	.word	0x2000270c
 800279c:	20001f08 	.word	0x20001f08
 80027a0:	20001cf8 	.word	0x20001cf8
 80027a4:	200022f0 	.word	0x200022f0
 80027a8:	08005c4c 	.word	0x08005c4c
 80027ac:	200026c0 	.word	0x200026c0

080027b0 <rt_sys_init>:
 80027b0:	b538      	push	{r3, r4, r5, lr}
 80027b2:	4b2c      	ldr	r3, [pc, #176]	; (8002864 <rt_sys_init+0xb4>)
 80027b4:	492c      	ldr	r1, [pc, #176]	; (8002868 <rt_sys_init+0xb8>)
 80027b6:	881a      	ldrh	r2, [r3, #0]
 80027b8:	2300      	movs	r3, #0
 80027ba:	4618      	mov	r0, r3
 80027bc:	4293      	cmp	r3, r2
 80027be:	d34d      	bcc.n	800285c <rt_sys_init+0xac>
 80027c0:	4b2a      	ldr	r3, [pc, #168]	; (800286c <rt_sys_init+0xbc>)
 80027c2:	482b      	ldr	r0, [pc, #172]	; (8002870 <rt_sys_init+0xc0>)
 80027c4:	8819      	ldrh	r1, [r3, #0]
 80027c6:	4c2b      	ldr	r4, [pc, #172]	; (8002874 <rt_sys_init+0xc4>)
 80027c8:	2240      	movs	r2, #64	; 0x40
 80027ca:	f7ff f969 	bl	8001aa0 <_init_box>
 80027ce:	4b2a      	ldr	r3, [pc, #168]	; (8002878 <rt_sys_init+0xc8>)
 80027d0:	482a      	ldr	r0, [pc, #168]	; (800287c <rt_sys_init+0xcc>)
 80027d2:	881a      	ldrh	r2, [r3, #0]
 80027d4:	4b2a      	ldr	r3, [pc, #168]	; (8002880 <rt_sys_init+0xd0>)
 80027d6:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 80027da:	6819      	ldr	r1, [r3, #0]
 80027dc:	f7ff f960 	bl	8001aa0 <_init_box>
 80027e0:	4b28      	ldr	r3, [pc, #160]	; (8002884 <rt_sys_init+0xd4>)
 80027e2:	8819      	ldrh	r1, [r3, #0]
 80027e4:	4b28      	ldr	r3, [pc, #160]	; (8002888 <rt_sys_init+0xd8>)
 80027e6:	2208      	movs	r2, #8
 80027e8:	6818      	ldr	r0, [r3, #0]
 80027ea:	f7ff f959 	bl	8001aa0 <_init_box>
 80027ee:	23ff      	movs	r3, #255	; 0xff
 80027f0:	2500      	movs	r5, #0
 80027f2:	70e3      	strb	r3, [r4, #3]
 80027f4:	4821      	ldr	r0, [pc, #132]	; (800287c <rt_sys_init+0xcc>)
 80027f6:	62a5      	str	r5, [r4, #40]	; 0x28
 80027f8:	2301      	movs	r3, #1
 80027fa:	7063      	strb	r3, [r4, #1]
 80027fc:	7025      	strb	r5, [r4, #0]
 80027fe:	70a5      	strb	r5, [r4, #2]
 8002800:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002804:	6065      	str	r5, [r4, #4]
 8002806:	60a5      	str	r5, [r4, #8]
 8002808:	60e5      	str	r5, [r4, #12]
 800280a:	6125      	str	r5, [r4, #16]
 800280c:	6225      	str	r5, [r4, #32]
 800280e:	82a5      	strh	r5, [r4, #20]
 8002810:	82e5      	strh	r5, [r4, #22]
 8002812:	8325      	strh	r5, [r4, #24]
 8002814:	8365      	strh	r5, [r4, #26]
 8002816:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 800281a:	f7ff f966 	bl	8001aea <rt_alloc_box>
 800281e:	491b      	ldr	r1, [pc, #108]	; (800288c <rt_sys_init+0xdc>)
 8002820:	6320      	str	r0, [r4, #48]	; 0x30
 8002822:	4620      	mov	r0, r4
 8002824:	f7ff f844 	bl	80018b0 <rt_init_stack>
 8002828:	4b19      	ldr	r3, [pc, #100]	; (8002890 <rt_sys_init+0xe0>)
 800282a:	2204      	movs	r2, #4
 800282c:	701a      	strb	r2, [r3, #0]
 800282e:	605d      	str	r5, [r3, #4]
 8002830:	4b18      	ldr	r3, [pc, #96]	; (8002894 <rt_sys_init+0xe4>)
 8002832:	701a      	strb	r2, [r3, #0]
 8002834:	60dd      	str	r5, [r3, #12]
 8002836:	611d      	str	r5, [r3, #16]
 8002838:	829d      	strh	r5, [r3, #20]
 800283a:	4b17      	ldr	r3, [pc, #92]	; (8002898 <rt_sys_init+0xe8>)
 800283c:	4620      	mov	r0, r4
 800283e:	601c      	str	r4, [r3, #0]
 8002840:	2302      	movs	r3, #2
 8002842:	7063      	strb	r3, [r4, #1]
 8002844:	f7ff fe16 	bl	8002474 <rt_switch_req>
 8002848:	4a14      	ldr	r2, [pc, #80]	; (800289c <rt_sys_init+0xec>)
 800284a:	4b15      	ldr	r3, [pc, #84]	; (80028a0 <rt_sys_init+0xf0>)
 800284c:	7812      	ldrb	r2, [r2, #0]
 800284e:	701d      	strb	r5, [r3, #0]
 8002850:	705d      	strb	r5, [r3, #1]
 8002852:	70da      	strb	r2, [r3, #3]
 8002854:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002858:	f7ff ba9c 	b.w	8001d94 <rt_init_robin>
 800285c:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8002860:	3301      	adds	r3, #1
 8002862:	e7ab      	b.n	80027bc <rt_sys_init+0xc>
 8002864:	08005c4c 	.word	0x08005c4c
 8002868:	20001f08 	.word	0x20001f08
 800286c:	08005c18 	.word	0x08005c18
 8002870:	200022f0 	.word	0x200022f0
 8002874:	20002714 	.word	0x20002714
 8002878:	08005c68 	.word	0x08005c68
 800287c:	20001cf8 	.word	0x20001cf8
 8002880:	08005c14 	.word	0x08005c14
 8002884:	08005c1a 	.word	0x08005c1a
 8002888:	200008bc 	.word	0x200008bc
 800288c:	080014d5 	.word	0x080014d5
 8002890:	200026c0 	.word	0x200026c0
 8002894:	200026d8 	.word	0x200026d8
 8002898:	2000270c 	.word	0x2000270c
 800289c:	08005c49 	.word	0x08005c49
 80028a0:	20001f44 	.word	0x20001f44

080028a4 <rt_sys_start>:
 80028a4:	b508      	push	{r3, lr}
 80028a6:	4b1e      	ldr	r3, [pc, #120]	; (8002920 <rt_sys_start+0x7c>)
 80028a8:	681a      	ldr	r2, [r3, #0]
 80028aa:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 80028ae:	601a      	str	r2, [r3, #0]
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	021b      	lsls	r3, r3, #8
 80028b4:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80028b8:	43db      	mvns	r3, r3
 80028ba:	fab3 f383 	clz	r3, r3
 80028be:	4a19      	ldr	r2, [pc, #100]	; (8002924 <rt_sys_start+0x80>)
 80028c0:	4819      	ldr	r0, [pc, #100]	; (8002928 <rt_sys_start+0x84>)
 80028c2:	6812      	ldr	r2, [r2, #0]
 80028c4:	6801      	ldr	r1, [r0, #0]
 80028c6:	b2db      	uxtb	r3, r3
 80028c8:	f1c3 0308 	rsb	r3, r3, #8
 80028cc:	f3c2 2202 	ubfx	r2, r2, #8, #3
 80028d0:	4293      	cmp	r3, r2
 80028d2:	bf98      	it	ls
 80028d4:	1c53      	addls	r3, r2, #1
 80028d6:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 80028da:	fa02 f303 	lsl.w	r3, r2, r3
 80028de:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80028e2:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 80028e6:	4313      	orrs	r3, r2
 80028e8:	6003      	str	r3, [r0, #0]
 80028ea:	f7ff f88f 	bl	8001a0c <os_tick_init>
 80028ee:	4b0f      	ldr	r3, [pc, #60]	; (800292c <rt_sys_start+0x88>)
 80028f0:	2800      	cmp	r0, #0
 80028f2:	6018      	str	r0, [r3, #0]
 80028f4:	db12      	blt.n	800291c <rt_sys_start+0x78>
 80028f6:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 80028fa:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 80028fe:	22ff      	movs	r2, #255	; 0xff
 8002900:	7002      	strb	r2, [r0, #0]
 8002902:	681a      	ldr	r2, [r3, #0]
 8002904:	0953      	lsrs	r3, r2, #5
 8002906:	009b      	lsls	r3, r3, #2
 8002908:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800290c:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8002910:	f002 021f 	and.w	r2, r2, #31
 8002914:	2101      	movs	r1, #1
 8002916:	fa01 f202 	lsl.w	r2, r1, r2
 800291a:	601a      	str	r2, [r3, #0]
 800291c:	bd08      	pop	{r3, pc}
 800291e:	bf00      	nop
 8002920:	e000ed20 	.word	0xe000ed20
 8002924:	e000ed0c 	.word	0xe000ed0c
 8002928:	e000ed1c 	.word	0xe000ed1c
 800292c:	200026f0 	.word	0x200026f0

08002930 <rt_dly_wait>:
 8002930:	2103      	movs	r1, #3
 8002932:	f7ff bddd 	b.w	80024f0 <rt_block>
	...

08002938 <rt_sem_psh>:
 8002938:	6842      	ldr	r2, [r0, #4]
 800293a:	b510      	push	{r4, lr}
 800293c:	b17a      	cbz	r2, 800295e <rt_sem_psh+0x26>
 800293e:	f7fe fe31 	bl	80015a4 <rt_get_first>
 8002942:	4604      	mov	r4, r0
 8002944:	f7fe fed4 	bl	80016f0 <rt_rmv_dly>
 8002948:	2101      	movs	r1, #1
 800294a:	7061      	strb	r1, [r4, #1]
 800294c:	4620      	mov	r0, r4
 800294e:	f7fe fffb 	bl	8001948 <rt_ret_val>
 8002952:	4621      	mov	r1, r4
 8002954:	4804      	ldr	r0, [pc, #16]	; (8002968 <rt_sem_psh+0x30>)
 8002956:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800295a:	f7fe be0b 	b.w	8001574 <rt_put_prio>
 800295e:	8842      	ldrh	r2, [r0, #2]
 8002960:	3201      	adds	r2, #1
 8002962:	8042      	strh	r2, [r0, #2]
 8002964:	bd10      	pop	{r4, pc}
 8002966:	bf00      	nop
 8002968:	200026c0 	.word	0x200026c0

0800296c <timer_irq_handler>:
 800296c:	b570      	push	{r4, r5, r6, lr}
 800296e:	4c13      	ldr	r4, [pc, #76]	; (80029bc <timer_irq_handler+0x50>)
 8002970:	6823      	ldr	r3, [r4, #0]
 8002972:	691a      	ldr	r2, [r3, #16]
 8002974:	0795      	lsls	r5, r2, #30
 8002976:	d507      	bpl.n	8002988 <timer_irq_handler+0x1c>
 8002978:	68da      	ldr	r2, [r3, #12]
 800297a:	0790      	lsls	r0, r2, #30
 800297c:	d504      	bpl.n	8002988 <timer_irq_handler+0x1c>
 800297e:	f06f 0202 	mvn.w	r2, #2
 8002982:	611a      	str	r2, [r3, #16]
 8002984:	f7fe fc98 	bl	80012b8 <us_ticker_irq_handler>
 8002988:	6823      	ldr	r3, [r4, #0]
 800298a:	691a      	ldr	r2, [r3, #16]
 800298c:	0751      	lsls	r1, r2, #29
 800298e:	d513      	bpl.n	80029b8 <timer_irq_handler+0x4c>
 8002990:	68da      	ldr	r2, [r3, #12]
 8002992:	0752      	lsls	r2, r2, #29
 8002994:	d510      	bpl.n	80029b8 <timer_irq_handler+0x4c>
 8002996:	f06f 0204 	mvn.w	r2, #4
 800299a:	4e09      	ldr	r6, [pc, #36]	; (80029c0 <timer_irq_handler+0x54>)
 800299c:	611a      	str	r2, [r3, #16]
 800299e:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80029a0:	6833      	ldr	r3, [r6, #0]
 80029a2:	1aeb      	subs	r3, r5, r3
 80029a4:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80029a8:	d306      	bcc.n	80029b8 <timer_irq_handler+0x4c>
 80029aa:	f001 fccf 	bl	800434c <HAL_IncTick>
 80029ae:	6823      	ldr	r3, [r4, #0]
 80029b0:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 80029b4:	639a      	str	r2, [r3, #56]	; 0x38
 80029b6:	6035      	str	r5, [r6, #0]
 80029b8:	bd70      	pop	{r4, r5, r6, pc}
 80029ba:	bf00      	nop
 80029bc:	20002758 	.word	0x20002758
 80029c0:	20001930 	.word	0x20001930

080029c4 <HAL_InitTick>:
 80029c4:	b530      	push	{r4, r5, lr}
 80029c6:	b089      	sub	sp, #36	; 0x24
 80029c8:	a901      	add	r1, sp, #4
 80029ca:	a803      	add	r0, sp, #12
 80029cc:	f001 fc88 	bl	80042e0 <HAL_RCC_GetClockConfig>
 80029d0:	f001 fc56 	bl	8004280 <HAL_RCC_GetPCLK1Freq>
 80029d4:	2300      	movs	r3, #0
 80029d6:	9302      	str	r3, [sp, #8]
 80029d8:	4b24      	ldr	r3, [pc, #144]	; (8002a6c <HAL_InitTick+0xa8>)
 80029da:	9001      	str	r0, [sp, #4]
 80029dc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80029de:	4c24      	ldr	r4, [pc, #144]	; (8002a70 <HAL_InitTick+0xac>)
 80029e0:	f042 0208 	orr.w	r2, r2, #8
 80029e4:	641a      	str	r2, [r3, #64]	; 0x40
 80029e6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80029e8:	f002 0208 	and.w	r2, r2, #8
 80029ec:	9202      	str	r2, [sp, #8]
 80029ee:	9a02      	ldr	r2, [sp, #8]
 80029f0:	6a1a      	ldr	r2, [r3, #32]
 80029f2:	f042 0208 	orr.w	r2, r2, #8
 80029f6:	621a      	str	r2, [r3, #32]
 80029f8:	6a1a      	ldr	r2, [r3, #32]
 80029fa:	f022 0208 	bic.w	r2, r2, #8
 80029fe:	621a      	str	r2, [r3, #32]
 8002a00:	9a06      	ldr	r2, [sp, #24]
 8002a02:	f5a3 330b 	sub.w	r3, r3, #142336	; 0x22c00
 8002a06:	6023      	str	r3, [r4, #0]
 8002a08:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002a0c:	60e3      	str	r3, [r4, #12]
 8002a0e:	4b19      	ldr	r3, [pc, #100]	; (8002a74 <HAL_InitTick+0xb0>)
 8002a10:	bb4a      	cbnz	r2, 8002a66 <HAL_InitTick+0xa2>
 8002a12:	fbb0 f0f3 	udiv	r0, r0, r3
 8002a16:	3801      	subs	r0, #1
 8002a18:	2500      	movs	r5, #0
 8002a1a:	6060      	str	r0, [r4, #4]
 8002a1c:	4814      	ldr	r0, [pc, #80]	; (8002a70 <HAL_InitTick+0xac>)
 8002a1e:	6125      	str	r5, [r4, #16]
 8002a20:	60a5      	str	r5, [r4, #8]
 8002a22:	6165      	str	r5, [r4, #20]
 8002a24:	f001 f97e 	bl	8003d24 <HAL_TIM_OC_Init>
 8002a28:	4913      	ldr	r1, [pc, #76]	; (8002a78 <HAL_InitTick+0xb4>)
 8002a2a:	2032      	movs	r0, #50	; 0x32
 8002a2c:	f000 fdcc 	bl	80035c8 <__NVIC_SetVector>
 8002a30:	4b12      	ldr	r3, [pc, #72]	; (8002a7c <HAL_InitTick+0xb8>)
 8002a32:	480f      	ldr	r0, [pc, #60]	; (8002a70 <HAL_InitTick+0xac>)
 8002a34:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8002a38:	605a      	str	r2, [r3, #4]
 8002a3a:	4629      	mov	r1, r5
 8002a3c:	f001 f9ae 	bl	8003d9c <HAL_TIM_OC_Start>
 8002a40:	2104      	movs	r1, #4
 8002a42:	480b      	ldr	r0, [pc, #44]	; (8002a70 <HAL_InitTick+0xac>)
 8002a44:	f001 f9aa 	bl	8003d9c <HAL_TIM_OC_Start>
 8002a48:	6823      	ldr	r3, [r4, #0]
 8002a4a:	4a0d      	ldr	r2, [pc, #52]	; (8002a80 <HAL_InitTick+0xbc>)
 8002a4c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002a4e:	6011      	str	r1, [r2, #0]
 8002a50:	6812      	ldr	r2, [r2, #0]
 8002a52:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 8002a56:	639a      	str	r2, [r3, #56]	; 0x38
 8002a58:	68da      	ldr	r2, [r3, #12]
 8002a5a:	4628      	mov	r0, r5
 8002a5c:	f042 0204 	orr.w	r2, r2, #4
 8002a60:	60da      	str	r2, [r3, #12]
 8002a62:	b009      	add	sp, #36	; 0x24
 8002a64:	bd30      	pop	{r4, r5, pc}
 8002a66:	0040      	lsls	r0, r0, #1
 8002a68:	e7d3      	b.n	8002a12 <HAL_InitTick+0x4e>
 8002a6a:	bf00      	nop
 8002a6c:	40023800 	.word	0x40023800
 8002a70:	20002758 	.word	0x20002758
 8002a74:	000f4240 	.word	0x000f4240
 8002a78:	0800296d 	.word	0x0800296d
 8002a7c:	e000e100 	.word	0xe000e100
 8002a80:	20001930 	.word	0x20001930

08002a84 <HAL_SuspendTick>:
 8002a84:	4b03      	ldr	r3, [pc, #12]	; (8002a94 <HAL_SuspendTick+0x10>)
 8002a86:	4a04      	ldr	r2, [pc, #16]	; (8002a98 <HAL_SuspendTick+0x14>)
 8002a88:	6013      	str	r3, [r2, #0]
 8002a8a:	68da      	ldr	r2, [r3, #12]
 8002a8c:	f022 0204 	bic.w	r2, r2, #4
 8002a90:	60da      	str	r2, [r3, #12]
 8002a92:	4770      	bx	lr
 8002a94:	40000c00 	.word	0x40000c00
 8002a98:	20002758 	.word	0x20002758

08002a9c <HAL_ResumeTick>:
 8002a9c:	4b03      	ldr	r3, [pc, #12]	; (8002aac <HAL_ResumeTick+0x10>)
 8002a9e:	4a04      	ldr	r2, [pc, #16]	; (8002ab0 <HAL_ResumeTick+0x14>)
 8002aa0:	6013      	str	r3, [r2, #0]
 8002aa2:	68da      	ldr	r2, [r3, #12]
 8002aa4:	f042 0204 	orr.w	r2, r2, #4
 8002aa8:	60da      	str	r2, [r3, #12]
 8002aaa:	4770      	bx	lr
 8002aac:	40000c00 	.word	0x40000c00
 8002ab0:	20002758 	.word	0x20002758

08002ab4 <Set_GPIO_Clock>:
 8002ab4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002ab6:	2300      	movs	r3, #0
 8002ab8:	2807      	cmp	r0, #7
 8002aba:	d855      	bhi.n	8002b68 <Set_GPIO_Clock+0xb4>
 8002abc:	e8df f000 	tbb	[pc, r0]
 8002ac0:	2d201304 	.word	0x2d201304
 8002ac4:	4754543a 	.word	0x4754543a
 8002ac8:	9300      	str	r3, [sp, #0]
 8002aca:	4b2a      	ldr	r3, [pc, #168]	; (8002b74 <Set_GPIO_Clock+0xc0>)
 8002acc:	482a      	ldr	r0, [pc, #168]	; (8002b78 <Set_GPIO_Clock+0xc4>)
 8002ace:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002ad0:	f042 0201 	orr.w	r2, r2, #1
 8002ad4:	631a      	str	r2, [r3, #48]	; 0x30
 8002ad6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ad8:	f003 0301 	and.w	r3, r3, #1
 8002adc:	9300      	str	r3, [sp, #0]
 8002ade:	9b00      	ldr	r3, [sp, #0]
 8002ae0:	b007      	add	sp, #28
 8002ae2:	f85d fb04 	ldr.w	pc, [sp], #4
 8002ae6:	9301      	str	r3, [sp, #4]
 8002ae8:	4b22      	ldr	r3, [pc, #136]	; (8002b74 <Set_GPIO_Clock+0xc0>)
 8002aea:	4824      	ldr	r0, [pc, #144]	; (8002b7c <Set_GPIO_Clock+0xc8>)
 8002aec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002aee:	f042 0202 	orr.w	r2, r2, #2
 8002af2:	631a      	str	r2, [r3, #48]	; 0x30
 8002af4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002af6:	f003 0302 	and.w	r3, r3, #2
 8002afa:	9301      	str	r3, [sp, #4]
 8002afc:	9b01      	ldr	r3, [sp, #4]
 8002afe:	e7ef      	b.n	8002ae0 <Set_GPIO_Clock+0x2c>
 8002b00:	9302      	str	r3, [sp, #8]
 8002b02:	4b1c      	ldr	r3, [pc, #112]	; (8002b74 <Set_GPIO_Clock+0xc0>)
 8002b04:	481e      	ldr	r0, [pc, #120]	; (8002b80 <Set_GPIO_Clock+0xcc>)
 8002b06:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b08:	f042 0204 	orr.w	r2, r2, #4
 8002b0c:	631a      	str	r2, [r3, #48]	; 0x30
 8002b0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b10:	f003 0304 	and.w	r3, r3, #4
 8002b14:	9302      	str	r3, [sp, #8]
 8002b16:	9b02      	ldr	r3, [sp, #8]
 8002b18:	e7e2      	b.n	8002ae0 <Set_GPIO_Clock+0x2c>
 8002b1a:	9303      	str	r3, [sp, #12]
 8002b1c:	4b15      	ldr	r3, [pc, #84]	; (8002b74 <Set_GPIO_Clock+0xc0>)
 8002b1e:	4819      	ldr	r0, [pc, #100]	; (8002b84 <Set_GPIO_Clock+0xd0>)
 8002b20:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b22:	f042 0208 	orr.w	r2, r2, #8
 8002b26:	631a      	str	r2, [r3, #48]	; 0x30
 8002b28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b2a:	f003 0308 	and.w	r3, r3, #8
 8002b2e:	9303      	str	r3, [sp, #12]
 8002b30:	9b03      	ldr	r3, [sp, #12]
 8002b32:	e7d5      	b.n	8002ae0 <Set_GPIO_Clock+0x2c>
 8002b34:	9304      	str	r3, [sp, #16]
 8002b36:	4b0f      	ldr	r3, [pc, #60]	; (8002b74 <Set_GPIO_Clock+0xc0>)
 8002b38:	4813      	ldr	r0, [pc, #76]	; (8002b88 <Set_GPIO_Clock+0xd4>)
 8002b3a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b3c:	f042 0210 	orr.w	r2, r2, #16
 8002b40:	631a      	str	r2, [r3, #48]	; 0x30
 8002b42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b44:	f003 0310 	and.w	r3, r3, #16
 8002b48:	9304      	str	r3, [sp, #16]
 8002b4a:	9b04      	ldr	r3, [sp, #16]
 8002b4c:	e7c8      	b.n	8002ae0 <Set_GPIO_Clock+0x2c>
 8002b4e:	9305      	str	r3, [sp, #20]
 8002b50:	4b08      	ldr	r3, [pc, #32]	; (8002b74 <Set_GPIO_Clock+0xc0>)
 8002b52:	480e      	ldr	r0, [pc, #56]	; (8002b8c <Set_GPIO_Clock+0xd8>)
 8002b54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b56:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002b5a:	631a      	str	r2, [r3, #48]	; 0x30
 8002b5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b5e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002b62:	9305      	str	r3, [sp, #20]
 8002b64:	9b05      	ldr	r3, [sp, #20]
 8002b66:	e7bb      	b.n	8002ae0 <Set_GPIO_Clock+0x2c>
 8002b68:	4809      	ldr	r0, [pc, #36]	; (8002b90 <Set_GPIO_Clock+0xdc>)
 8002b6a:	f7fe fc69 	bl	8001440 <error>
 8002b6e:	2000      	movs	r0, #0
 8002b70:	e7b6      	b.n	8002ae0 <Set_GPIO_Clock+0x2c>
 8002b72:	bf00      	nop
 8002b74:	40023800 	.word	0x40023800
 8002b78:	40020000 	.word	0x40020000
 8002b7c:	40020400 	.word	0x40020400
 8002b80:	40020800 	.word	0x40020800
 8002b84:	40020c00 	.word	0x40020c00
 8002b88:	40021000 	.word	0x40021000
 8002b8c:	40021c00 	.word	0x40021c00
 8002b90:	08005c88 	.word	0x08005c88

08002b94 <gpio_set>:
 8002b94:	b510      	push	{r4, lr}
 8002b96:	2100      	movs	r1, #0
 8002b98:	4604      	mov	r4, r0
 8002b9a:	f004 040f 	and.w	r4, r4, #15
 8002b9e:	f000 f8bf 	bl	8002d20 <pin_function>
 8002ba2:	2001      	movs	r0, #1
 8002ba4:	40a0      	lsls	r0, r4
 8002ba6:	bd10      	pop	{r4, pc}

08002ba8 <gpio_init>:
 8002ba8:	b570      	push	{r4, r5, r6, lr}
 8002baa:	4604      	mov	r4, r0
 8002bac:	1c4b      	adds	r3, r1, #1
 8002bae:	460e      	mov	r6, r1
 8002bb0:	8221      	strh	r1, [r4, #16]
 8002bb2:	d016      	beq.n	8002be2 <gpio_init+0x3a>
 8002bb4:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8002bb8:	f7ff ff7c 	bl	8002ab4 <Set_GPIO_Clock>
 8002bbc:	4605      	mov	r5, r0
 8002bbe:	4630      	mov	r0, r6
 8002bc0:	f7ff ffe8 	bl	8002b94 <gpio_set>
 8002bc4:	8a23      	ldrh	r3, [r4, #16]
 8002bc6:	4a07      	ldr	r2, [pc, #28]	; (8002be4 <gpio_init+0x3c>)
 8002bc8:	6165      	str	r5, [r4, #20]
 8002bca:	f003 030f 	and.w	r3, r3, #15
 8002bce:	6020      	str	r0, [r4, #0]
 8002bd0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002bd4:	61a3      	str	r3, [r4, #24]
 8002bd6:	f105 0310 	add.w	r3, r5, #16
 8002bda:	3518      	adds	r5, #24
 8002bdc:	6063      	str	r3, [r4, #4]
 8002bde:	60a5      	str	r5, [r4, #8]
 8002be0:	60e5      	str	r5, [r4, #12]
 8002be2:	bd70      	pop	{r4, r5, r6, pc}
 8002be4:	08005cac 	.word	0x08005cac

08002be8 <gpio_mode>:
 8002be8:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8002bec:	f000 b91c 	b.w	8002e28 <pin_mode>

08002bf0 <gpio_dir>:
 8002bf0:	b510      	push	{r4, lr}
 8002bf2:	6983      	ldr	r3, [r0, #24]
 8002bf4:	6944      	ldr	r4, [r0, #20]
 8002bf6:	b971      	cbnz	r1, 8002c16 <gpio_dir+0x26>
 8002bf8:	6821      	ldr	r1, [r4, #0]
 8002bfa:	fa93 f2a3 	rbit	r2, r3
 8002bfe:	fab2 f282 	clz	r2, r2
 8002c02:	2003      	movs	r0, #3
 8002c04:	0052      	lsls	r2, r2, #1
 8002c06:	fa00 f202 	lsl.w	r2, r0, r2
 8002c0a:	ea21 0202 	bic.w	r2, r1, r2
 8002c0e:	fa93 f3a3 	rbit	r3, r3
 8002c12:	6022      	str	r2, [r4, #0]
 8002c14:	bd10      	pop	{r4, pc}
 8002c16:	6822      	ldr	r2, [r4, #0]
 8002c18:	fa93 f1a3 	rbit	r1, r3
 8002c1c:	fab1 f181 	clz	r1, r1
 8002c20:	fa93 f3a3 	rbit	r3, r3
 8002c24:	2003      	movs	r0, #3
 8002c26:	0049      	lsls	r1, r1, #1
 8002c28:	fa00 f101 	lsl.w	r1, r0, r1
 8002c2c:	fab3 f383 	clz	r3, r3
 8002c30:	ea22 0201 	bic.w	r2, r2, r1
 8002c34:	005b      	lsls	r3, r3, #1
 8002c36:	2101      	movs	r1, #1
 8002c38:	fa01 f303 	lsl.w	r3, r1, r3
 8002c3c:	4313      	orrs	r3, r2
 8002c3e:	6023      	str	r3, [r4, #0]
 8002c40:	bd10      	pop	{r4, pc}

08002c42 <hal_sleep>:
 8002c42:	b508      	push	{r3, lr}
 8002c44:	f7ff ff1e 	bl	8002a84 <HAL_SuspendTick>
 8002c48:	2101      	movs	r1, #1
 8002c4a:	2000      	movs	r0, #0
 8002c4c:	f001 f8a8 	bl	8003da0 <HAL_PWR_EnterSLEEPMode>
 8002c50:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002c54:	f7ff bf22 	b.w	8002a9c <HAL_ResumeTick>

08002c58 <us_ticker_init>:
 8002c58:	4b05      	ldr	r3, [pc, #20]	; (8002c70 <us_ticker_init+0x18>)
 8002c5a:	6818      	ldr	r0, [r3, #0]
 8002c5c:	b930      	cbnz	r0, 8002c6c <us_ticker_init+0x14>
 8002c5e:	2201      	movs	r2, #1
 8002c60:	601a      	str	r2, [r3, #0]
 8002c62:	4b04      	ldr	r3, [pc, #16]	; (8002c74 <us_ticker_init+0x1c>)
 8002c64:	4a04      	ldr	r2, [pc, #16]	; (8002c78 <us_ticker_init+0x20>)
 8002c66:	601a      	str	r2, [r3, #0]
 8002c68:	f7ff beac 	b.w	80029c4 <HAL_InitTick>
 8002c6c:	4770      	bx	lr
 8002c6e:	bf00      	nop
 8002c70:	20001934 	.word	0x20001934
 8002c74:	20002758 	.word	0x20002758
 8002c78:	40000c00 	.word	0x40000c00

08002c7c <us_ticker_read>:
 8002c7c:	b508      	push	{r3, lr}
 8002c7e:	4b04      	ldr	r3, [pc, #16]	; (8002c90 <us_ticker_read+0x14>)
 8002c80:	681b      	ldr	r3, [r3, #0]
 8002c82:	b90b      	cbnz	r3, 8002c88 <us_ticker_read+0xc>
 8002c84:	f7ff ffe8 	bl	8002c58 <us_ticker_init>
 8002c88:	4b02      	ldr	r3, [pc, #8]	; (8002c94 <us_ticker_read+0x18>)
 8002c8a:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8002c8c:	bd08      	pop	{r3, pc}
 8002c8e:	bf00      	nop
 8002c90:	20001934 	.word	0x20001934
 8002c94:	40000c00 	.word	0x40000c00

08002c98 <us_ticker_set_interrupt>:
 8002c98:	4b04      	ldr	r3, [pc, #16]	; (8002cac <us_ticker_set_interrupt+0x14>)
 8002c9a:	4a05      	ldr	r2, [pc, #20]	; (8002cb0 <us_ticker_set_interrupt+0x18>)
 8002c9c:	6013      	str	r3, [r2, #0]
 8002c9e:	6358      	str	r0, [r3, #52]	; 0x34
 8002ca0:	68da      	ldr	r2, [r3, #12]
 8002ca2:	f042 0202 	orr.w	r2, r2, #2
 8002ca6:	60da      	str	r2, [r3, #12]
 8002ca8:	4770      	bx	lr
 8002caa:	bf00      	nop
 8002cac:	40000c00 	.word	0x40000c00
 8002cb0:	20002758 	.word	0x20002758

08002cb4 <us_ticker_disable_interrupt>:
 8002cb4:	4b03      	ldr	r3, [pc, #12]	; (8002cc4 <us_ticker_disable_interrupt+0x10>)
 8002cb6:	4a04      	ldr	r2, [pc, #16]	; (8002cc8 <us_ticker_disable_interrupt+0x14>)
 8002cb8:	6013      	str	r3, [r2, #0]
 8002cba:	68da      	ldr	r2, [r3, #12]
 8002cbc:	f022 0202 	bic.w	r2, r2, #2
 8002cc0:	60da      	str	r2, [r3, #12]
 8002cc2:	4770      	bx	lr
 8002cc4:	40000c00 	.word	0x40000c00
 8002cc8:	20002758 	.word	0x20002758

08002ccc <us_ticker_clear_interrupt>:
 8002ccc:	4a03      	ldr	r2, [pc, #12]	; (8002cdc <us_ticker_clear_interrupt+0x10>)
 8002cce:	4b04      	ldr	r3, [pc, #16]	; (8002ce0 <us_ticker_clear_interrupt+0x14>)
 8002cd0:	6013      	str	r3, [r2, #0]
 8002cd2:	f06f 0202 	mvn.w	r2, #2
 8002cd6:	611a      	str	r2, [r3, #16]
 8002cd8:	4770      	bx	lr
 8002cda:	bf00      	nop
 8002cdc:	20002758 	.word	0x20002758
 8002ce0:	40000c00 	.word	0x40000c00

08002ce4 <LL_GPIO_SetPinPull>:
 8002ce4:	b530      	push	{r4, r5, lr}
 8002ce6:	68c3      	ldr	r3, [r0, #12]
 8002ce8:	fa91 f4a1 	rbit	r4, r1
 8002cec:	fab4 f484 	clz	r4, r4
 8002cf0:	fa91 f1a1 	rbit	r1, r1
 8002cf4:	2503      	movs	r5, #3
 8002cf6:	fab1 f181 	clz	r1, r1
 8002cfa:	0064      	lsls	r4, r4, #1
 8002cfc:	fa05 f404 	lsl.w	r4, r5, r4
 8002d00:	0049      	lsls	r1, r1, #1
 8002d02:	ea23 0304 	bic.w	r3, r3, r4
 8002d06:	fa02 f101 	lsl.w	r1, r2, r1
 8002d0a:	4319      	orrs	r1, r3
 8002d0c:	60c1      	str	r1, [r0, #12]
 8002d0e:	bd30      	pop	{r4, r5, pc}

08002d10 <stm_pin_PullConfig>:
 8002d10:	2a01      	cmp	r2, #1
 8002d12:	d002      	beq.n	8002d1a <stm_pin_PullConfig+0xa>
 8002d14:	2a02      	cmp	r2, #2
 8002d16:	bf18      	it	ne
 8002d18:	2200      	movne	r2, #0
 8002d1a:	f7ff bfe3 	b.w	8002ce4 <LL_GPIO_SetPinPull>
	...

08002d20 <pin_function>:
 8002d20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002d24:	4b3f      	ldr	r3, [pc, #252]	; (8002e24 <pin_function+0x104>)
 8002d26:	f000 080f 	and.w	r8, r0, #15
 8002d2a:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8002d2e:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 8002d32:	460e      	mov	r6, r1
 8002d34:	f001 0507 	and.w	r5, r1, #7
 8002d38:	f7ff febc 	bl	8002ab4 <Set_GPIO_Clock>
 8002d3c:	6883      	ldr	r3, [r0, #8]
 8002d3e:	fa94 f1a4 	rbit	r1, r4
 8002d42:	fab1 f181 	clz	r1, r1
 8002d46:	fa94 f2a4 	rbit	r2, r4
 8002d4a:	2703      	movs	r7, #3
 8002d4c:	0049      	lsls	r1, r1, #1
 8002d4e:	fa07 f101 	lsl.w	r1, r7, r1
 8002d52:	fab2 f282 	clz	r2, r2
 8002d56:	ea23 0301 	bic.w	r3, r3, r1
 8002d5a:	0052      	lsls	r2, r2, #1
 8002d5c:	2102      	movs	r1, #2
 8002d5e:	fa01 f202 	lsl.w	r2, r1, r2
 8002d62:	4313      	orrs	r3, r2
 8002d64:	428d      	cmp	r5, r1
 8002d66:	6083      	str	r3, [r0, #8]
 8002d68:	d028      	beq.n	8002dbc <pin_function+0x9c>
 8002d6a:	42bd      	cmp	r5, r7
 8002d6c:	d041      	beq.n	8002df2 <pin_function+0xd2>
 8002d6e:	2d01      	cmp	r5, #1
 8002d70:	d03f      	beq.n	8002df2 <pin_function+0xd2>
 8002d72:	2300      	movs	r3, #0
 8002d74:	6802      	ldr	r2, [r0, #0]
 8002d76:	fa94 f7a4 	rbit	r7, r4
 8002d7a:	fab7 f787 	clz	r7, r7
 8002d7e:	fa94 f1a4 	rbit	r1, r4
 8002d82:	f04f 0e03 	mov.w	lr, #3
 8002d86:	fab1 f181 	clz	r1, r1
 8002d8a:	007f      	lsls	r7, r7, #1
 8002d8c:	fa0e f707 	lsl.w	r7, lr, r7
 8002d90:	0049      	lsls	r1, r1, #1
 8002d92:	ea22 0207 	bic.w	r2, r2, r7
 8002d96:	408b      	lsls	r3, r1
 8002d98:	3d01      	subs	r5, #1
 8002d9a:	4313      	orrs	r3, r2
 8002d9c:	2d01      	cmp	r5, #1
 8002d9e:	6003      	str	r3, [r0, #0]
 8002da0:	d805      	bhi.n	8002dae <pin_function+0x8e>
 8002da2:	6843      	ldr	r3, [r0, #4]
 8002da4:	0732      	lsls	r2, r6, #28
 8002da6:	bf4c      	ite	mi
 8002da8:	4323      	orrmi	r3, r4
 8002daa:	43a3      	bicpl	r3, r4
 8002dac:	6043      	str	r3, [r0, #4]
 8002dae:	f3c6 1201 	ubfx	r2, r6, #4, #2
 8002db2:	4621      	mov	r1, r4
 8002db4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002db8:	f7ff bfaa 	b.w	8002d10 <stm_pin_PullConfig>
 8002dbc:	f1b8 0f07 	cmp.w	r8, #7
 8002dc0:	f3c6 2703 	ubfx	r7, r6, #8, #4
 8002dc4:	d917      	bls.n	8002df6 <pin_function+0xd6>
 8002dc6:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8002dc8:	0a23      	lsrs	r3, r4, #8
 8002dca:	fa93 f1a3 	rbit	r1, r3
 8002dce:	fab1 f181 	clz	r1, r1
 8002dd2:	fa93 f3a3 	rbit	r3, r3
 8002dd6:	f04f 0e0f 	mov.w	lr, #15
 8002dda:	fab3 f383 	clz	r3, r3
 8002dde:	0089      	lsls	r1, r1, #2
 8002de0:	fa0e f101 	lsl.w	r1, lr, r1
 8002de4:	009b      	lsls	r3, r3, #2
 8002de6:	ea22 0201 	bic.w	r2, r2, r1
 8002dea:	fa07 f303 	lsl.w	r3, r7, r3
 8002dee:	4313      	orrs	r3, r2
 8002df0:	6243      	str	r3, [r0, #36]	; 0x24
 8002df2:	462b      	mov	r3, r5
 8002df4:	e7be      	b.n	8002d74 <pin_function+0x54>
 8002df6:	6a02      	ldr	r2, [r0, #32]
 8002df8:	fa94 f3a4 	rbit	r3, r4
 8002dfc:	fab3 f383 	clz	r3, r3
 8002e00:	fa94 f1a4 	rbit	r1, r4
 8002e04:	f04f 0e0f 	mov.w	lr, #15
 8002e08:	fab1 f181 	clz	r1, r1
 8002e0c:	009b      	lsls	r3, r3, #2
 8002e0e:	fa0e f303 	lsl.w	r3, lr, r3
 8002e12:	0089      	lsls	r1, r1, #2
 8002e14:	ea22 0203 	bic.w	r2, r2, r3
 8002e18:	fa07 f301 	lsl.w	r3, r7, r1
 8002e1c:	4313      	orrs	r3, r2
 8002e1e:	6203      	str	r3, [r0, #32]
 8002e20:	e7e7      	b.n	8002df2 <pin_function+0xd2>
 8002e22:	bf00      	nop
 8002e24:	08005cac 	.word	0x08005cac

08002e28 <pin_mode>:
 8002e28:	b538      	push	{r3, r4, r5, lr}
 8002e2a:	f000 020f 	and.w	r2, r0, #15
 8002e2e:	4b19      	ldr	r3, [pc, #100]	; (8002e94 <pin_mode+0x6c>)
 8002e30:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8002e34:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8002e38:	460d      	mov	r5, r1
 8002e3a:	f7ff fe3b 	bl	8002ab4 <Set_GPIO_Clock>
 8002e3e:	fb04 f204 	mul.w	r2, r4, r4
 8002e42:	6801      	ldr	r1, [r0, #0]
 8002e44:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8002e48:	400b      	ands	r3, r1
 8002e4a:	fbb3 f3f2 	udiv	r3, r3, r2
 8002e4e:	3b01      	subs	r3, #1
 8002e50:	2b01      	cmp	r3, #1
 8002e52:	d805      	bhi.n	8002e60 <pin_mode+0x38>
 8002e54:	1eeb      	subs	r3, r5, #3
 8002e56:	2b02      	cmp	r3, #2
 8002e58:	6843      	ldr	r3, [r0, #4]
 8002e5a:	d809      	bhi.n	8002e70 <pin_mode+0x48>
 8002e5c:	4323      	orrs	r3, r4
 8002e5e:	6043      	str	r3, [r0, #4]
 8002e60:	2d03      	cmp	r5, #3
 8002e62:	d108      	bne.n	8002e76 <pin_mode+0x4e>
 8002e64:	2201      	movs	r2, #1
 8002e66:	4621      	mov	r1, r4
 8002e68:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002e6c:	f7ff bf50 	b.w	8002d10 <stm_pin_PullConfig>
 8002e70:	ea23 0304 	bic.w	r3, r3, r4
 8002e74:	6043      	str	r3, [r0, #4]
 8002e76:	2d01      	cmp	r5, #1
 8002e78:	d0f4      	beq.n	8002e64 <pin_mode+0x3c>
 8002e7a:	2d05      	cmp	r5, #5
 8002e7c:	d001      	beq.n	8002e82 <pin_mode+0x5a>
 8002e7e:	2d02      	cmp	r5, #2
 8002e80:	d101      	bne.n	8002e86 <pin_mode+0x5e>
 8002e82:	2202      	movs	r2, #2
 8002e84:	e7ef      	b.n	8002e66 <pin_mode+0x3e>
 8002e86:	4621      	mov	r1, r4
 8002e88:	2200      	movs	r2, #0
 8002e8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002e8e:	f7ff bf29 	b.w	8002ce4 <LL_GPIO_SetPinPull>
 8002e92:	bf00      	nop
 8002e94:	08005cac 	.word	0x08005cac

08002e98 <adc_read>:
 8002e98:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002e9a:	4604      	mov	r4, r0
 8002e9c:	2210      	movs	r2, #16
 8002e9e:	2100      	movs	r1, #0
 8002ea0:	4668      	mov	r0, sp
 8002ea2:	f002 f882 	bl	8004faa <memset>
 8002ea6:	4b28      	ldr	r3, [pc, #160]	; (8002f48 <adc_read+0xb0>)
 8002ea8:	6822      	ldr	r2, [r4, #0]
 8002eaa:	601a      	str	r2, [r3, #0]
 8002eac:	79a2      	ldrb	r2, [r4, #6]
 8002eae:	2301      	movs	r3, #1
 8002eb0:	9301      	str	r3, [sp, #4]
 8002eb2:	9302      	str	r3, [sp, #8]
 8002eb4:	2a12      	cmp	r2, #18
 8002eb6:	d844      	bhi.n	8002f42 <adc_read+0xaa>
 8002eb8:	e8df f002 	tbb	[pc, r2]
 8002ebc:	230a0b0c 	.word	0x230a0b0c
 8002ec0:	2b292725 	.word	0x2b292725
 8002ec4:	33312f2d 	.word	0x33312f2d
 8002ec8:	3b393735 	.word	0x3b393735
 8002ecc:	3f3d      	.short	0x3f3d
 8002ece:	41          	.byte	0x41
 8002ecf:	00          	.byte	0x00
 8002ed0:	2302      	movs	r3, #2
 8002ed2:	9300      	str	r3, [sp, #0]
 8002ed4:	4a1d      	ldr	r2, [pc, #116]	; (8002f4c <adc_read+0xb4>)
 8002ed6:	481c      	ldr	r0, [pc, #112]	; (8002f48 <adc_read+0xb0>)
 8002ed8:	6853      	ldr	r3, [r2, #4]
 8002eda:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8002ede:	4669      	mov	r1, sp
 8002ee0:	6053      	str	r3, [r2, #4]
 8002ee2:	f000 fcf1 	bl	80038c8 <HAL_ADC_ConfigChannel>
 8002ee6:	4818      	ldr	r0, [pc, #96]	; (8002f48 <adc_read+0xb0>)
 8002ee8:	f000 fc3a 	bl	8003760 <HAL_ADC_Start>
 8002eec:	210a      	movs	r1, #10
 8002eee:	4816      	ldr	r0, [pc, #88]	; (8002f48 <adc_read+0xb0>)
 8002ef0:	f000 fc96 	bl	8003820 <HAL_ADC_PollForConversion>
 8002ef4:	bb28      	cbnz	r0, 8002f42 <adc_read+0xaa>
 8002ef6:	4814      	ldr	r0, [pc, #80]	; (8002f48 <adc_read+0xb0>)
 8002ef8:	f000 fce2 	bl	80038c0 <HAL_ADC_GetValue>
 8002efc:	b280      	uxth	r0, r0
 8002efe:	b004      	add	sp, #16
 8002f00:	bd10      	pop	{r4, pc}
 8002f02:	2303      	movs	r3, #3
 8002f04:	e7e5      	b.n	8002ed2 <adc_read+0x3a>
 8002f06:	2304      	movs	r3, #4
 8002f08:	e7e3      	b.n	8002ed2 <adc_read+0x3a>
 8002f0a:	2305      	movs	r3, #5
 8002f0c:	e7e1      	b.n	8002ed2 <adc_read+0x3a>
 8002f0e:	2306      	movs	r3, #6
 8002f10:	e7df      	b.n	8002ed2 <adc_read+0x3a>
 8002f12:	2307      	movs	r3, #7
 8002f14:	e7dd      	b.n	8002ed2 <adc_read+0x3a>
 8002f16:	2308      	movs	r3, #8
 8002f18:	e7db      	b.n	8002ed2 <adc_read+0x3a>
 8002f1a:	2309      	movs	r3, #9
 8002f1c:	e7d9      	b.n	8002ed2 <adc_read+0x3a>
 8002f1e:	230a      	movs	r3, #10
 8002f20:	e7d7      	b.n	8002ed2 <adc_read+0x3a>
 8002f22:	230b      	movs	r3, #11
 8002f24:	e7d5      	b.n	8002ed2 <adc_read+0x3a>
 8002f26:	230c      	movs	r3, #12
 8002f28:	e7d3      	b.n	8002ed2 <adc_read+0x3a>
 8002f2a:	230d      	movs	r3, #13
 8002f2c:	e7d1      	b.n	8002ed2 <adc_read+0x3a>
 8002f2e:	230e      	movs	r3, #14
 8002f30:	e7cf      	b.n	8002ed2 <adc_read+0x3a>
 8002f32:	230f      	movs	r3, #15
 8002f34:	e7cd      	b.n	8002ed2 <adc_read+0x3a>
 8002f36:	2310      	movs	r3, #16
 8002f38:	e7cb      	b.n	8002ed2 <adc_read+0x3a>
 8002f3a:	2311      	movs	r3, #17
 8002f3c:	e7c9      	b.n	8002ed2 <adc_read+0x3a>
 8002f3e:	2312      	movs	r3, #18
 8002f40:	e7c7      	b.n	8002ed2 <adc_read+0x3a>
 8002f42:	2000      	movs	r0, #0
 8002f44:	e7db      	b.n	8002efe <adc_read+0x66>
 8002f46:	bf00      	nop
 8002f48:	20002794 	.word	0x20002794
 8002f4c:	40012300 	.word	0x40012300

08002f50 <analogin_init>:
 8002f50:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002f54:	29ef      	cmp	r1, #239	; 0xef
 8002f56:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8002f58:	4605      	mov	r5, r0
 8002f5a:	460c      	mov	r4, r1
 8002f5c:	6003      	str	r3, [r0, #0]
 8002f5e:	dc3d      	bgt.n	8002fdc <analogin_init+0x8c>
 8002f60:	4924      	ldr	r1, [pc, #144]	; (8002ff4 <analogin_init+0xa4>)
 8002f62:	4620      	mov	r0, r4
 8002f64:	f7fe fa10 	bl	8001388 <pinmap_peripheral>
 8002f68:	4922      	ldr	r1, [pc, #136]	; (8002ff4 <analogin_init+0xa4>)
 8002f6a:	6028      	str	r0, [r5, #0]
 8002f6c:	4620      	mov	r0, r4
 8002f6e:	f7fe fa27 	bl	80013c0 <pinmap_function>
 8002f72:	4920      	ldr	r1, [pc, #128]	; (8002ff4 <analogin_init+0xa4>)
 8002f74:	4606      	mov	r6, r0
 8002f76:	4620      	mov	r0, r4
 8002f78:	f7fe f9ca 	bl	8001310 <pinmap_pinout>
 8002f7c:	6829      	ldr	r1, [r5, #0]
 8002f7e:	4b1e      	ldr	r3, [pc, #120]	; (8002ff8 <analogin_init+0xa8>)
 8002f80:	80ac      	strh	r4, [r5, #4]
 8002f82:	f3c6 3604 	ubfx	r6, r6, #12, #5
 8002f86:	4299      	cmp	r1, r3
 8002f88:	71ae      	strb	r6, [r5, #6]
 8002f8a:	d10f      	bne.n	8002fac <analogin_init+0x5c>
 8002f8c:	481b      	ldr	r0, [pc, #108]	; (8002ffc <analogin_init+0xac>)
 8002f8e:	6803      	ldr	r3, [r0, #0]
 8002f90:	bb13      	cbnz	r3, 8002fd8 <analogin_init+0x88>
 8002f92:	9301      	str	r3, [sp, #4]
 8002f94:	4b1a      	ldr	r3, [pc, #104]	; (8003000 <analogin_init+0xb0>)
 8002f96:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002f98:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002f9c:	645a      	str	r2, [r3, #68]	; 0x44
 8002f9e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002fa0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002fa4:	9301      	str	r3, [sp, #4]
 8002fa6:	9b01      	ldr	r3, [sp, #4]
 8002fa8:	2301      	movs	r3, #1
 8002faa:	6003      	str	r3, [r0, #0]
 8002fac:	4815      	ldr	r0, [pc, #84]	; (8003004 <analogin_init+0xb4>)
 8002fae:	2300      	movs	r3, #0
 8002fb0:	2201      	movs	r2, #1
 8002fb2:	6001      	str	r1, [r0, #0]
 8002fb4:	6043      	str	r3, [r0, #4]
 8002fb6:	6083      	str	r3, [r0, #8]
 8002fb8:	6103      	str	r3, [r0, #16]
 8002fba:	6183      	str	r3, [r0, #24]
 8002fbc:	6203      	str	r3, [r0, #32]
 8002fbe:	6243      	str	r3, [r0, #36]	; 0x24
 8002fc0:	62c3      	str	r3, [r0, #44]	; 0x2c
 8002fc2:	6283      	str	r3, [r0, #40]	; 0x28
 8002fc4:	60c3      	str	r3, [r0, #12]
 8002fc6:	61c2      	str	r2, [r0, #28]
 8002fc8:	6303      	str	r3, [r0, #48]	; 0x30
 8002fca:	6143      	str	r3, [r0, #20]
 8002fcc:	f000 fb1e 	bl	800360c <HAL_ADC_Init>
 8002fd0:	b110      	cbz	r0, 8002fd8 <analogin_init+0x88>
 8002fd2:	480d      	ldr	r0, [pc, #52]	; (8003008 <analogin_init+0xb8>)
 8002fd4:	f7fe fa34 	bl	8001440 <error>
 8002fd8:	b002      	add	sp, #8
 8002fda:	bd70      	pop	{r4, r5, r6, pc}
 8002fdc:	490b      	ldr	r1, [pc, #44]	; (800300c <analogin_init+0xbc>)
 8002fde:	4620      	mov	r0, r4
 8002fe0:	f7fe f9d2 	bl	8001388 <pinmap_peripheral>
 8002fe4:	4909      	ldr	r1, [pc, #36]	; (800300c <analogin_init+0xbc>)
 8002fe6:	6028      	str	r0, [r5, #0]
 8002fe8:	4620      	mov	r0, r4
 8002fea:	f7fe f9e9 	bl	80013c0 <pinmap_function>
 8002fee:	4606      	mov	r6, r0
 8002ff0:	e7c4      	b.n	8002f7c <analogin_init+0x2c>
 8002ff2:	bf00      	nop
 8002ff4:	08005d1c 	.word	0x08005d1c
 8002ff8:	40012000 	.word	0x40012000
 8002ffc:	20001938 	.word	0x20001938
 8003000:	40023800 	.word	0x40023800
 8003004:	20002794 	.word	0x20002794
 8003008:	08005cec 	.word	0x08005cec
 800300c:	08005dd0 	.word	0x08005dd0

08003010 <analogin_read_u16>:
 8003010:	b508      	push	{r3, lr}
 8003012:	f7ff ff41 	bl	8002e98 <adc_read>
 8003016:	f3c0 2303 	ubfx	r3, r0, #8, #4
 800301a:	ea43 1000 	orr.w	r0, r3, r0, lsl #4
 800301e:	b280      	uxth	r0, r0
 8003020:	bd08      	pop	{r3, pc}
	...

08003024 <__NVIC_DisableIRQ>:
 8003024:	0943      	lsrs	r3, r0, #5
 8003026:	2201      	movs	r2, #1
 8003028:	f000 001f 	and.w	r0, r0, #31
 800302c:	fa02 f000 	lsl.w	r0, r2, r0
 8003030:	3320      	adds	r3, #32
 8003032:	4a04      	ldr	r2, [pc, #16]	; (8003044 <__NVIC_DisableIRQ+0x20>)
 8003034:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8003038:	f3bf 8f4f 	dsb	sy
 800303c:	f3bf 8f6f 	isb	sy
 8003040:	4770      	bx	lr
 8003042:	bf00      	nop
 8003044:	e000e100 	.word	0xe000e100

08003048 <init_uart>:
 8003048:	6842      	ldr	r2, [r0, #4]
 800304a:	4916      	ldr	r1, [pc, #88]	; (80030a4 <init_uart+0x5c>)
 800304c:	0192      	lsls	r2, r2, #6
 800304e:	b510      	push	{r4, lr}
 8003050:	188b      	adds	r3, r1, r2
 8003052:	6804      	ldr	r4, [r0, #0]
 8003054:	508c      	str	r4, [r1, r2]
 8003056:	6882      	ldr	r2, [r0, #8]
 8003058:	605a      	str	r2, [r3, #4]
 800305a:	68c2      	ldr	r2, [r0, #12]
 800305c:	609a      	str	r2, [r3, #8]
 800305e:	6902      	ldr	r2, [r0, #16]
 8003060:	60da      	str	r2, [r3, #12]
 8003062:	6942      	ldr	r2, [r0, #20]
 8003064:	611a      	str	r2, [r3, #16]
 8003066:	6a02      	ldr	r2, [r0, #32]
 8003068:	619a      	str	r2, [r3, #24]
 800306a:	2200      	movs	r2, #0
 800306c:	61da      	str	r2, [r3, #28]
 800306e:	84da      	strh	r2, [r3, #38]	; 0x26
 8003070:	849a      	strh	r2, [r3, #36]	; 0x24
 8003072:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003074:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003076:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 800307a:	3201      	adds	r2, #1
 800307c:	d10a      	bne.n	8003094 <init_uart+0x4c>
 800307e:	2208      	movs	r2, #8
 8003080:	615a      	str	r2, [r3, #20]
 8003082:	4618      	mov	r0, r3
 8003084:	f000 fdd3 	bl	8003c2e <HAL_UART_Init>
 8003088:	b158      	cbz	r0, 80030a2 <init_uart+0x5a>
 800308a:	4807      	ldr	r0, [pc, #28]	; (80030a8 <init_uart+0x60>)
 800308c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003090:	f7fe b9d6 	b.w	8001440 <error>
 8003094:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8003098:	3201      	adds	r2, #1
 800309a:	bf0c      	ite	eq
 800309c:	2204      	moveq	r2, #4
 800309e:	220c      	movne	r2, #12
 80030a0:	e7ee      	b.n	8003080 <init_uart+0x38>
 80030a2:	bd10      	pop	{r4, pc}
 80030a4:	20001964 	.word	0x20001964
 80030a8:	08005d03 	.word	0x08005d03

080030ac <uart_irq>:
 80030ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80030ae:	4e19      	ldr	r6, [pc, #100]	; (8003114 <uart_irq+0x68>)
 80030b0:	4607      	mov	r7, r0
 80030b2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80030b6:	2800      	cmp	r0, #0
 80030b8:	d02a      	beq.n	8003110 <uart_irq+0x64>
 80030ba:	4c17      	ldr	r4, [pc, #92]	; (8003118 <uart_irq+0x6c>)
 80030bc:	01bd      	lsls	r5, r7, #6
 80030be:	5963      	ldr	r3, [r4, r5]
 80030c0:	681a      	ldr	r2, [r3, #0]
 80030c2:	0652      	lsls	r2, r2, #25
 80030c4:	d50a      	bpl.n	80030dc <uart_irq+0x30>
 80030c6:	68db      	ldr	r3, [r3, #12]
 80030c8:	0659      	lsls	r1, r3, #25
 80030ca:	d507      	bpl.n	80030dc <uart_irq+0x30>
 80030cc:	4b13      	ldr	r3, [pc, #76]	; (800311c <uart_irq+0x70>)
 80030ce:	2101      	movs	r1, #1
 80030d0:	681b      	ldr	r3, [r3, #0]
 80030d2:	4798      	blx	r3
 80030d4:	5963      	ldr	r3, [r4, r5]
 80030d6:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80030da:	601a      	str	r2, [r3, #0]
 80030dc:	5963      	ldr	r3, [r4, r5]
 80030de:	681a      	ldr	r2, [r3, #0]
 80030e0:	0692      	lsls	r2, r2, #26
 80030e2:	d50c      	bpl.n	80030fe <uart_irq+0x52>
 80030e4:	68db      	ldr	r3, [r3, #12]
 80030e6:	0698      	lsls	r0, r3, #26
 80030e8:	d509      	bpl.n	80030fe <uart_irq+0x52>
 80030ea:	4b0c      	ldr	r3, [pc, #48]	; (800311c <uart_irq+0x70>)
 80030ec:	f856 0027 	ldr.w	r0, [r6, r7, lsl #2]
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	2100      	movs	r1, #0
 80030f4:	4798      	blx	r3
 80030f6:	5963      	ldr	r3, [r4, r5]
 80030f8:	f06f 0220 	mvn.w	r2, #32
 80030fc:	601a      	str	r2, [r3, #0]
 80030fe:	5963      	ldr	r3, [r4, r5]
 8003100:	681a      	ldr	r2, [r3, #0]
 8003102:	0711      	lsls	r1, r2, #28
 8003104:	d504      	bpl.n	8003110 <uart_irq+0x64>
 8003106:	695a      	ldr	r2, [r3, #20]
 8003108:	07d2      	lsls	r2, r2, #31
 800310a:	bf44      	itt	mi
 800310c:	685b      	ldrmi	r3, [r3, #4]
 800310e:	9301      	strmi	r3, [sp, #4]
 8003110:	b003      	add	sp, #12
 8003112:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003114:	20001940 	.word	0x20001940
 8003118:	20001964 	.word	0x20001964
 800311c:	2000193c 	.word	0x2000193c

08003120 <uart1_irq>:
 8003120:	2000      	movs	r0, #0
 8003122:	f7ff bfc3 	b.w	80030ac <uart_irq>

08003126 <uart2_irq>:
 8003126:	2001      	movs	r0, #1
 8003128:	f7ff bfc0 	b.w	80030ac <uart_irq>

0800312c <uart6_irq>:
 800312c:	2005      	movs	r0, #5
 800312e:	f7ff bfbd 	b.w	80030ac <uart_irq>
	...

08003134 <serial_init>:
 8003134:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003136:	460e      	mov	r6, r1
 8003138:	b085      	sub	sp, #20
 800313a:	4604      	mov	r4, r0
 800313c:	4945      	ldr	r1, [pc, #276]	; (8003254 <serial_init+0x120>)
 800313e:	4630      	mov	r0, r6
 8003140:	4615      	mov	r5, r2
 8003142:	f7fe f921 	bl	8001388 <pinmap_peripheral>
 8003146:	4944      	ldr	r1, [pc, #272]	; (8003258 <serial_init+0x124>)
 8003148:	4607      	mov	r7, r0
 800314a:	4628      	mov	r0, r5
 800314c:	f7fe f91c 	bl	8001388 <pinmap_peripheral>
 8003150:	4601      	mov	r1, r0
 8003152:	4638      	mov	r0, r7
 8003154:	f7fe f8fa 	bl	800134c <pinmap_merge>
 8003158:	4b40      	ldr	r3, [pc, #256]	; (800325c <serial_init+0x128>)
 800315a:	6020      	str	r0, [r4, #0]
 800315c:	4298      	cmp	r0, r3
 800315e:	d01e      	beq.n	800319e <serial_init+0x6a>
 8003160:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003164:	4298      	cmp	r0, r3
 8003166:	d05e      	beq.n	8003226 <serial_init+0xf2>
 8003168:	f5a3 4350 	sub.w	r3, r3, #53248	; 0xd000
 800316c:	4298      	cmp	r0, r3
 800316e:	d12b      	bne.n	80031c8 <serial_init+0x94>
 8003170:	4b3b      	ldr	r3, [pc, #236]	; (8003260 <serial_init+0x12c>)
 8003172:	6a1a      	ldr	r2, [r3, #32]
 8003174:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003178:	621a      	str	r2, [r3, #32]
 800317a:	6a1a      	ldr	r2, [r3, #32]
 800317c:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8003180:	621a      	str	r2, [r3, #32]
 8003182:	2200      	movs	r2, #0
 8003184:	9202      	str	r2, [sp, #8]
 8003186:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003188:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800318c:	641a      	str	r2, [r3, #64]	; 0x40
 800318e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003190:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003194:	9302      	str	r3, [sp, #8]
 8003196:	9b02      	ldr	r3, [sp, #8]
 8003198:	2301      	movs	r3, #1
 800319a:	6063      	str	r3, [r4, #4]
 800319c:	e014      	b.n	80031c8 <serial_init+0x94>
 800319e:	4b30      	ldr	r3, [pc, #192]	; (8003260 <serial_init+0x12c>)
 80031a0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80031a2:	f042 0210 	orr.w	r2, r2, #16
 80031a6:	625a      	str	r2, [r3, #36]	; 0x24
 80031a8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80031aa:	2100      	movs	r1, #0
 80031ac:	f022 0210 	bic.w	r2, r2, #16
 80031b0:	625a      	str	r2, [r3, #36]	; 0x24
 80031b2:	9101      	str	r1, [sp, #4]
 80031b4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80031b6:	f042 0210 	orr.w	r2, r2, #16
 80031ba:	645a      	str	r2, [r3, #68]	; 0x44
 80031bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80031be:	6061      	str	r1, [r4, #4]
 80031c0:	f003 0310 	and.w	r3, r3, #16
 80031c4:	9301      	str	r3, [sp, #4]
 80031c6:	9b01      	ldr	r3, [sp, #4]
 80031c8:	4922      	ldr	r1, [pc, #136]	; (8003254 <serial_init+0x120>)
 80031ca:	4630      	mov	r0, r6
 80031cc:	f7fe f8a0 	bl	8001310 <pinmap_pinout>
 80031d0:	4921      	ldr	r1, [pc, #132]	; (8003258 <serial_init+0x124>)
 80031d2:	4628      	mov	r0, r5
 80031d4:	f7fe f89c 	bl	8001310 <pinmap_pinout>
 80031d8:	1c72      	adds	r2, r6, #1
 80031da:	d003      	beq.n	80031e4 <serial_init+0xb0>
 80031dc:	2101      	movs	r1, #1
 80031de:	4630      	mov	r0, r6
 80031e0:	f7ff fe22 	bl	8002e28 <pin_mode>
 80031e4:	1c6b      	adds	r3, r5, #1
 80031e6:	d003      	beq.n	80031f0 <serial_init+0xbc>
 80031e8:	2101      	movs	r1, #1
 80031ea:	4628      	mov	r0, r5
 80031ec:	f7ff fe1c 	bl	8002e28 <pin_mode>
 80031f0:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80031f4:	60a3      	str	r3, [r4, #8]
 80031f6:	2300      	movs	r3, #0
 80031f8:	60e3      	str	r3, [r4, #12]
 80031fa:	6123      	str	r3, [r4, #16]
 80031fc:	6163      	str	r3, [r4, #20]
 80031fe:	6223      	str	r3, [r4, #32]
 8003200:	8326      	strh	r6, [r4, #24]
 8003202:	8365      	strh	r5, [r4, #26]
 8003204:	4620      	mov	r0, r4
 8003206:	f7ff ff1f 	bl	8003048 <init_uart>
 800320a:	6822      	ldr	r2, [r4, #0]
 800320c:	4b15      	ldr	r3, [pc, #84]	; (8003264 <serial_init+0x130>)
 800320e:	429a      	cmp	r2, r3
 8003210:	d107      	bne.n	8003222 <serial_init+0xee>
 8003212:	4b15      	ldr	r3, [pc, #84]	; (8003268 <serial_init+0x134>)
 8003214:	4815      	ldr	r0, [pc, #84]	; (800326c <serial_init+0x138>)
 8003216:	2201      	movs	r2, #1
 8003218:	601a      	str	r2, [r3, #0]
 800321a:	4621      	mov	r1, r4
 800321c:	224c      	movs	r2, #76	; 0x4c
 800321e:	f001 fe9f 	bl	8004f60 <memcpy>
 8003222:	b005      	add	sp, #20
 8003224:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003226:	4b0e      	ldr	r3, [pc, #56]	; (8003260 <serial_init+0x12c>)
 8003228:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800322a:	f042 0220 	orr.w	r2, r2, #32
 800322e:	625a      	str	r2, [r3, #36]	; 0x24
 8003230:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003232:	f022 0220 	bic.w	r2, r2, #32
 8003236:	625a      	str	r2, [r3, #36]	; 0x24
 8003238:	2200      	movs	r2, #0
 800323a:	9203      	str	r2, [sp, #12]
 800323c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800323e:	f042 0220 	orr.w	r2, r2, #32
 8003242:	645a      	str	r2, [r3, #68]	; 0x44
 8003244:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003246:	f003 0320 	and.w	r3, r3, #32
 800324a:	9303      	str	r3, [sp, #12]
 800324c:	9b03      	ldr	r3, [sp, #12]
 800324e:	2305      	movs	r3, #5
 8003250:	e7a3      	b.n	800319a <serial_init+0x66>
 8003252:	bf00      	nop
 8003254:	08005e48 	.word	0x08005e48
 8003258:	08005e00 	.word	0x08005e00
 800325c:	40011000 	.word	0x40011000
 8003260:	40023800 	.word	0x40023800
 8003264:	40004400 	.word	0x40004400
 8003268:	20001960 	.word	0x20001960
 800326c:	200027dc 	.word	0x200027dc

08003270 <serial_baud>:
 8003270:	6081      	str	r1, [r0, #8]
 8003272:	f7ff bee9 	b.w	8003048 <init_uart>
	...

08003278 <serial_irq_handler>:
 8003278:	4b03      	ldr	r3, [pc, #12]	; (8003288 <serial_irq_handler+0x10>)
 800327a:	6019      	str	r1, [r3, #0]
 800327c:	6841      	ldr	r1, [r0, #4]
 800327e:	4b03      	ldr	r3, [pc, #12]	; (800328c <serial_irq_handler+0x14>)
 8003280:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8003284:	4770      	bx	lr
 8003286:	bf00      	nop
 8003288:	2000193c 	.word	0x2000193c
 800328c:	20001940 	.word	0x20001940

08003290 <serial_irq_set>:
 8003290:	b538      	push	{r3, r4, r5, lr}
 8003292:	6843      	ldr	r3, [r0, #4]
 8003294:	2b01      	cmp	r3, #1
 8003296:	460d      	mov	r5, r1
 8003298:	d01a      	beq.n	80032d0 <serial_irq_set+0x40>
 800329a:	2b05      	cmp	r3, #5
 800329c:	d01b      	beq.n	80032d6 <serial_irq_set+0x46>
 800329e:	b9eb      	cbnz	r3, 80032dc <serial_irq_set+0x4c>
 80032a0:	491c      	ldr	r1, [pc, #112]	; (8003314 <serial_irq_set+0x84>)
 80032a2:	2425      	movs	r4, #37	; 0x25
 80032a4:	481c      	ldr	r0, [pc, #112]	; (8003318 <serial_irq_set+0x88>)
 80032a6:	019b      	lsls	r3, r3, #6
 80032a8:	b1f2      	cbz	r2, 80032e8 <serial_irq_set+0x58>
 80032aa:	58c2      	ldr	r2, [r0, r3]
 80032ac:	68d3      	ldr	r3, [r2, #12]
 80032ae:	b9c5      	cbnz	r5, 80032e2 <serial_irq_set+0x52>
 80032b0:	f043 0320 	orr.w	r3, r3, #32
 80032b4:	60d3      	str	r3, [r2, #12]
 80032b6:	4620      	mov	r0, r4
 80032b8:	f000 f986 	bl	80035c8 <__NVIC_SetVector>
 80032bc:	0962      	lsrs	r2, r4, #5
 80032be:	2301      	movs	r3, #1
 80032c0:	f004 0407 	and.w	r4, r4, #7
 80032c4:	fa03 f404 	lsl.w	r4, r3, r4
 80032c8:	4b14      	ldr	r3, [pc, #80]	; (800331c <serial_irq_set+0x8c>)
 80032ca:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80032ce:	bd38      	pop	{r3, r4, r5, pc}
 80032d0:	4913      	ldr	r1, [pc, #76]	; (8003320 <serial_irq_set+0x90>)
 80032d2:	2426      	movs	r4, #38	; 0x26
 80032d4:	e7e6      	b.n	80032a4 <serial_irq_set+0x14>
 80032d6:	4913      	ldr	r1, [pc, #76]	; (8003324 <serial_irq_set+0x94>)
 80032d8:	2447      	movs	r4, #71	; 0x47
 80032da:	e7e3      	b.n	80032a4 <serial_irq_set+0x14>
 80032dc:	2100      	movs	r1, #0
 80032de:	460c      	mov	r4, r1
 80032e0:	e7e0      	b.n	80032a4 <serial_irq_set+0x14>
 80032e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80032e6:	e7e5      	b.n	80032b4 <serial_irq_set+0x24>
 80032e8:	58c3      	ldr	r3, [r0, r3]
 80032ea:	68da      	ldr	r2, [r3, #12]
 80032ec:	b935      	cbnz	r5, 80032fc <serial_irq_set+0x6c>
 80032ee:	f022 0220 	bic.w	r2, r2, #32
 80032f2:	60da      	str	r2, [r3, #12]
 80032f4:	68db      	ldr	r3, [r3, #12]
 80032f6:	061a      	lsls	r2, r3, #24
 80032f8:	d506      	bpl.n	8003308 <serial_irq_set+0x78>
 80032fa:	bd38      	pop	{r3, r4, r5, pc}
 80032fc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003300:	60da      	str	r2, [r3, #12]
 8003302:	68db      	ldr	r3, [r3, #12]
 8003304:	069b      	lsls	r3, r3, #26
 8003306:	d404      	bmi.n	8003312 <serial_irq_set+0x82>
 8003308:	4620      	mov	r0, r4
 800330a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800330e:	f7ff be89 	b.w	8003024 <__NVIC_DisableIRQ>
 8003312:	bd38      	pop	{r3, r4, r5, pc}
 8003314:	08003121 	.word	0x08003121
 8003318:	20001964 	.word	0x20001964
 800331c:	e000e100 	.word	0xe000e100
 8003320:	08003127 	.word	0x08003127
 8003324:	0800312d 	.word	0x0800312d

08003328 <serial_readable>:
 8003328:	6843      	ldr	r3, [r0, #4]
 800332a:	4a03      	ldr	r2, [pc, #12]	; (8003338 <serial_readable+0x10>)
 800332c:	019b      	lsls	r3, r3, #6
 800332e:	58d3      	ldr	r3, [r2, r3]
 8003330:	6818      	ldr	r0, [r3, #0]
 8003332:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8003336:	4770      	bx	lr
 8003338:	20001964 	.word	0x20001964

0800333c <serial_getc>:
 800333c:	6841      	ldr	r1, [r0, #4]
 800333e:	b510      	push	{r4, lr}
 8003340:	4604      	mov	r4, r0
 8003342:	4620      	mov	r0, r4
 8003344:	f7ff fff0 	bl	8003328 <serial_readable>
 8003348:	2800      	cmp	r0, #0
 800334a:	d0fa      	beq.n	8003342 <serial_getc+0x6>
 800334c:	0189      	lsls	r1, r1, #6
 800334e:	4b03      	ldr	r3, [pc, #12]	; (800335c <serial_getc+0x20>)
 8003350:	585b      	ldr	r3, [r3, r1]
 8003352:	6858      	ldr	r0, [r3, #4]
 8003354:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8003358:	bd10      	pop	{r4, pc}
 800335a:	bf00      	nop
 800335c:	20001964 	.word	0x20001964

08003360 <serial_writable>:
 8003360:	6843      	ldr	r3, [r0, #4]
 8003362:	4a03      	ldr	r2, [pc, #12]	; (8003370 <serial_writable+0x10>)
 8003364:	019b      	lsls	r3, r3, #6
 8003366:	58d3      	ldr	r3, [r2, r3]
 8003368:	6818      	ldr	r0, [r3, #0]
 800336a:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 800336e:	4770      	bx	lr
 8003370:	20001964 	.word	0x20001964

08003374 <serial_putc>:
 8003374:	b538      	push	{r3, r4, r5, lr}
 8003376:	6844      	ldr	r4, [r0, #4]
 8003378:	4605      	mov	r5, r0
 800337a:	4628      	mov	r0, r5
 800337c:	f7ff fff0 	bl	8003360 <serial_writable>
 8003380:	2800      	cmp	r0, #0
 8003382:	d0fa      	beq.n	800337a <serial_putc+0x6>
 8003384:	01a4      	lsls	r4, r4, #6
 8003386:	4b03      	ldr	r3, [pc, #12]	; (8003394 <serial_putc+0x20>)
 8003388:	591b      	ldr	r3, [r3, r4]
 800338a:	f3c1 0108 	ubfx	r1, r1, #0, #9
 800338e:	6059      	str	r1, [r3, #4]
 8003390:	bd38      	pop	{r3, r4, r5, pc}
 8003392:	bf00      	nop
 8003394:	20001964 	.word	0x20001964

08003398 <mbed_sdk_init>:
 8003398:	b508      	push	{r3, lr}
 800339a:	f000 f819 	bl	80033d0 <SystemCoreClockUpdate>
 800339e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80033a2:	f000 bfbb 	b.w	800431c <HAL_Init>

080033a6 <SetSysClock_PLL_HSE.part.0>:
 80033a6:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80033a8:	230f      	movs	r3, #15
 80033aa:	9301      	str	r3, [sp, #4]
 80033ac:	2102      	movs	r1, #2
 80033ae:	2300      	movs	r3, #0
 80033b0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80033b4:	a801      	add	r0, sp, #4
 80033b6:	9102      	str	r1, [sp, #8]
 80033b8:	9303      	str	r3, [sp, #12]
 80033ba:	9204      	str	r2, [sp, #16]
 80033bc:	9305      	str	r3, [sp, #20]
 80033be:	f000 fea9 	bl	8004114 <HAL_RCC_ClockConfig>
 80033c2:	fab0 f080 	clz	r0, r0
 80033c6:	0940      	lsrs	r0, r0, #5
 80033c8:	b007      	add	sp, #28
 80033ca:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080033d0 <SystemCoreClockUpdate>:
 80033d0:	4a17      	ldr	r2, [pc, #92]	; (8003430 <SystemCoreClockUpdate+0x60>)
 80033d2:	4918      	ldr	r1, [pc, #96]	; (8003434 <SystemCoreClockUpdate+0x64>)
 80033d4:	6893      	ldr	r3, [r2, #8]
 80033d6:	f003 030c 	and.w	r3, r3, #12
 80033da:	2b04      	cmp	r3, #4
 80033dc:	b510      	push	{r4, lr}
 80033de:	d00d      	beq.n	80033fc <SystemCoreClockUpdate+0x2c>
 80033e0:	2b08      	cmp	r3, #8
 80033e2:	d00d      	beq.n	8003400 <SystemCoreClockUpdate+0x30>
 80033e4:	4b14      	ldr	r3, [pc, #80]	; (8003438 <SystemCoreClockUpdate+0x68>)
 80033e6:	600b      	str	r3, [r1, #0]
 80033e8:	4b11      	ldr	r3, [pc, #68]	; (8003430 <SystemCoreClockUpdate+0x60>)
 80033ea:	4a14      	ldr	r2, [pc, #80]	; (800343c <SystemCoreClockUpdate+0x6c>)
 80033ec:	689b      	ldr	r3, [r3, #8]
 80033ee:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80033f2:	5cd2      	ldrb	r2, [r2, r3]
 80033f4:	680b      	ldr	r3, [r1, #0]
 80033f6:	40d3      	lsrs	r3, r2
 80033f8:	600b      	str	r3, [r1, #0]
 80033fa:	bd10      	pop	{r4, pc}
 80033fc:	4b10      	ldr	r3, [pc, #64]	; (8003440 <SystemCoreClockUpdate+0x70>)
 80033fe:	e7f2      	b.n	80033e6 <SystemCoreClockUpdate+0x16>
 8003400:	6854      	ldr	r4, [r2, #4]
 8003402:	6850      	ldr	r0, [r2, #4]
 8003404:	6852      	ldr	r2, [r2, #4]
 8003406:	0263      	lsls	r3, r4, #9
 8003408:	f3c2 1288 	ubfx	r2, r2, #6, #9
 800340c:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8003410:	bf4c      	ite	mi
 8003412:	4b0b      	ldrmi	r3, [pc, #44]	; (8003440 <SystemCoreClockUpdate+0x70>)
 8003414:	4b08      	ldrpl	r3, [pc, #32]	; (8003438 <SystemCoreClockUpdate+0x68>)
 8003416:	fbb3 f3f0 	udiv	r3, r3, r0
 800341a:	4353      	muls	r3, r2
 800341c:	4a04      	ldr	r2, [pc, #16]	; (8003430 <SystemCoreClockUpdate+0x60>)
 800341e:	6852      	ldr	r2, [r2, #4]
 8003420:	f3c2 4201 	ubfx	r2, r2, #16, #2
 8003424:	3201      	adds	r2, #1
 8003426:	0052      	lsls	r2, r2, #1
 8003428:	fbb3 f3f2 	udiv	r3, r3, r2
 800342c:	e7db      	b.n	80033e6 <SystemCoreClockUpdate+0x16>
 800342e:	bf00      	nop
 8003430:	40023800 	.word	0x40023800
 8003434:	200001bc 	.word	0x200001bc
 8003438:	00f42400 	.word	0x00f42400
 800343c:	08005e90 	.word	0x08005e90
 8003440:	007a1200 	.word	0x007a1200

08003444 <SetSysClock_PLL_HSE>:
 8003444:	b500      	push	{lr}
 8003446:	b08f      	sub	sp, #60	; 0x3c
 8003448:	4b1b      	ldr	r3, [pc, #108]	; (80034b8 <SetSysClock_PLL_HSE+0x74>)
 800344a:	2100      	movs	r1, #0
 800344c:	9100      	str	r1, [sp, #0]
 800344e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003450:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003454:	641a      	str	r2, [r3, #64]	; 0x40
 8003456:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003458:	4a18      	ldr	r2, [pc, #96]	; (80034bc <SetSysClock_PLL_HSE+0x78>)
 800345a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800345e:	9300      	str	r3, [sp, #0]
 8003460:	9b00      	ldr	r3, [sp, #0]
 8003462:	9101      	str	r1, [sp, #4]
 8003464:	6813      	ldr	r3, [r2, #0]
 8003466:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800346a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800346e:	6013      	str	r3, [r2, #0]
 8003470:	6813      	ldr	r3, [r2, #0]
 8003472:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8003476:	9301      	str	r3, [sp, #4]
 8003478:	9b01      	ldr	r3, [sp, #4]
 800347a:	2301      	movs	r3, #1
 800347c:	9302      	str	r3, [sp, #8]
 800347e:	b9b8      	cbnz	r0, 80034b0 <SetSysClock_PLL_HSE+0x6c>
 8003480:	9303      	str	r3, [sp, #12]
 8003482:	2302      	movs	r3, #2
 8003484:	9308      	str	r3, [sp, #32]
 8003486:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800348a:	9309      	str	r3, [sp, #36]	; 0x24
 800348c:	2308      	movs	r3, #8
 800348e:	930a      	str	r3, [sp, #40]	; 0x28
 8003490:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8003494:	930b      	str	r3, [sp, #44]	; 0x2c
 8003496:	2304      	movs	r3, #4
 8003498:	930c      	str	r3, [sp, #48]	; 0x30
 800349a:	a802      	add	r0, sp, #8
 800349c:	2307      	movs	r3, #7
 800349e:	930d      	str	r3, [sp, #52]	; 0x34
 80034a0:	f000 fc8e 	bl	8003dc0 <HAL_RCC_OscConfig>
 80034a4:	b930      	cbnz	r0, 80034b4 <SetSysClock_PLL_HSE+0x70>
 80034a6:	f7ff ff7e 	bl	80033a6 <SetSysClock_PLL_HSE.part.0>
 80034aa:	b00f      	add	sp, #60	; 0x3c
 80034ac:	f85d fb04 	ldr.w	pc, [sp], #4
 80034b0:	2305      	movs	r3, #5
 80034b2:	e7e5      	b.n	8003480 <SetSysClock_PLL_HSE+0x3c>
 80034b4:	2000      	movs	r0, #0
 80034b6:	e7f8      	b.n	80034aa <SetSysClock_PLL_HSE+0x66>
 80034b8:	40023800 	.word	0x40023800
 80034bc:	40007000 	.word	0x40007000

080034c0 <SetSysClock_PLL_HSI>:
 80034c0:	b510      	push	{r4, lr}
 80034c2:	b08e      	sub	sp, #56	; 0x38
 80034c4:	2400      	movs	r4, #0
 80034c6:	4b1a      	ldr	r3, [pc, #104]	; (8003530 <SetSysClock_PLL_HSI+0x70>)
 80034c8:	9400      	str	r4, [sp, #0]
 80034ca:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80034cc:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80034d0:	641a      	str	r2, [r3, #64]	; 0x40
 80034d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80034d4:	4a17      	ldr	r2, [pc, #92]	; (8003534 <SetSysClock_PLL_HSI+0x74>)
 80034d6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80034da:	9300      	str	r3, [sp, #0]
 80034dc:	9b00      	ldr	r3, [sp, #0]
 80034de:	9401      	str	r4, [sp, #4]
 80034e0:	6813      	ldr	r3, [r2, #0]
 80034e2:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80034e6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80034ea:	6013      	str	r3, [r2, #0]
 80034ec:	6813      	ldr	r3, [r2, #0]
 80034ee:	9403      	str	r4, [sp, #12]
 80034f0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80034f4:	9301      	str	r3, [sp, #4]
 80034f6:	9b01      	ldr	r3, [sp, #4]
 80034f8:	9409      	str	r4, [sp, #36]	; 0x24
 80034fa:	2303      	movs	r3, #3
 80034fc:	9302      	str	r3, [sp, #8]
 80034fe:	2301      	movs	r3, #1
 8003500:	9305      	str	r3, [sp, #20]
 8003502:	2310      	movs	r3, #16
 8003504:	9306      	str	r3, [sp, #24]
 8003506:	930a      	str	r3, [sp, #40]	; 0x28
 8003508:	f44f 73a8 	mov.w	r3, #336	; 0x150
 800350c:	930b      	str	r3, [sp, #44]	; 0x2c
 800350e:	2304      	movs	r3, #4
 8003510:	2202      	movs	r2, #2
 8003512:	930c      	str	r3, [sp, #48]	; 0x30
 8003514:	a802      	add	r0, sp, #8
 8003516:	2307      	movs	r3, #7
 8003518:	9208      	str	r2, [sp, #32]
 800351a:	930d      	str	r3, [sp, #52]	; 0x34
 800351c:	f000 fc50 	bl	8003dc0 <HAL_RCC_OscConfig>
 8003520:	b918      	cbnz	r0, 800352a <SetSysClock_PLL_HSI+0x6a>
 8003522:	f7ff ff40 	bl	80033a6 <SetSysClock_PLL_HSE.part.0>
 8003526:	b00e      	add	sp, #56	; 0x38
 8003528:	bd10      	pop	{r4, pc}
 800352a:	4620      	mov	r0, r4
 800352c:	e7fb      	b.n	8003526 <SetSysClock_PLL_HSI+0x66>
 800352e:	bf00      	nop
 8003530:	40023800 	.word	0x40023800
 8003534:	40007000 	.word	0x40007000

08003538 <SetSysClock>:
 8003538:	b508      	push	{r3, lr}
 800353a:	2001      	movs	r0, #1
 800353c:	f7ff ff82 	bl	8003444 <SetSysClock_PLL_HSE>
 8003540:	b930      	cbnz	r0, 8003550 <SetSysClock+0x18>
 8003542:	f7ff ff7f 	bl	8003444 <SetSysClock_PLL_HSE>
 8003546:	b918      	cbnz	r0, 8003550 <SetSysClock+0x18>
 8003548:	f7ff ffba 	bl	80034c0 <SetSysClock_PLL_HSI>
 800354c:	b900      	cbnz	r0, 8003550 <SetSysClock+0x18>
 800354e:	e7fe      	b.n	800354e <SetSysClock+0x16>
 8003550:	bd08      	pop	{r3, pc}
	...

08003554 <SystemInit>:
 8003554:	4a17      	ldr	r2, [pc, #92]	; (80035b4 <SystemInit+0x60>)
 8003556:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 800355a:	b510      	push	{r4, lr}
 800355c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003560:	4c15      	ldr	r4, [pc, #84]	; (80035b8 <SystemInit+0x64>)
 8003562:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003566:	6823      	ldr	r3, [r4, #0]
 8003568:	2100      	movs	r1, #0
 800356a:	f043 0301 	orr.w	r3, r3, #1
 800356e:	6023      	str	r3, [r4, #0]
 8003570:	60a1      	str	r1, [r4, #8]
 8003572:	6823      	ldr	r3, [r4, #0]
 8003574:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8003578:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800357c:	6023      	str	r3, [r4, #0]
 800357e:	4b0f      	ldr	r3, [pc, #60]	; (80035bc <SystemInit+0x68>)
 8003580:	6063      	str	r3, [r4, #4]
 8003582:	6823      	ldr	r3, [r4, #0]
 8003584:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003588:	6023      	str	r3, [r4, #0]
 800358a:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800358e:	60e1      	str	r1, [r4, #12]
 8003590:	6093      	str	r3, [r2, #8]
 8003592:	4b0b      	ldr	r3, [pc, #44]	; (80035c0 <SystemInit+0x6c>)
 8003594:	4a0b      	ldr	r2, [pc, #44]	; (80035c4 <SystemInit+0x70>)
 8003596:	601a      	str	r2, [r3, #0]
 8003598:	f000 fec0 	bl	800431c <HAL_Init>
 800359c:	f7ff ffcc 	bl	8003538 <SetSysClock>
 80035a0:	6a23      	ldr	r3, [r4, #32]
 80035a2:	f043 0308 	orr.w	r3, r3, #8
 80035a6:	6223      	str	r3, [r4, #32]
 80035a8:	6a23      	ldr	r3, [r4, #32]
 80035aa:	f023 0308 	bic.w	r3, r3, #8
 80035ae:	6223      	str	r3, [r4, #32]
 80035b0:	bd10      	pop	{r4, pc}
 80035b2:	bf00      	nop
 80035b4:	e000ed00 	.word	0xe000ed00
 80035b8:	40023800 	.word	0x40023800
 80035bc:	24003010 	.word	0x24003010
 80035c0:	200001bc 	.word	0x200001bc
 80035c4:	00f42400 	.word	0x00f42400

080035c8 <__NVIC_SetVector>:
 80035c8:	b530      	push	{r4, r5, lr}
 80035ca:	4c0c      	ldr	r4, [pc, #48]	; (80035fc <__NVIC_SetVector+0x34>)
 80035cc:	68a2      	ldr	r2, [r4, #8]
 80035ce:	68a4      	ldr	r4, [r4, #8]
 80035d0:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 80035d4:	4613      	mov	r3, r2
 80035d6:	d10c      	bne.n	80035f2 <__NVIC_SetVector+0x2a>
 80035d8:	1f13      	subs	r3, r2, #4
 80035da:	4c09      	ldr	r4, [pc, #36]	; (8003600 <__NVIC_SetVector+0x38>)
 80035dc:	4a09      	ldr	r2, [pc, #36]	; (8003604 <__NVIC_SetVector+0x3c>)
 80035de:	f853 5f04 	ldr.w	r5, [r3, #4]!
 80035e2:	f842 5f04 	str.w	r5, [r2, #4]!
 80035e6:	42a2      	cmp	r2, r4
 80035e8:	d1f9      	bne.n	80035de <__NVIC_SetVector+0x16>
 80035ea:	4a04      	ldr	r2, [pc, #16]	; (80035fc <__NVIC_SetVector+0x34>)
 80035ec:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 80035f0:	6093      	str	r3, [r2, #8]
 80035f2:	3010      	adds	r0, #16
 80035f4:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 80035f8:	bd30      	pop	{r4, r5, pc}
 80035fa:	bf00      	nop
 80035fc:	e000ed00 	.word	0xe000ed00
 8003600:	20000190 	.word	0x20000190
 8003604:	1ffffffc 	.word	0x1ffffffc

08003608 <HAL_ADC_MspInit>:
 8003608:	4770      	bx	lr
	...

0800360c <HAL_ADC_Init>:
 800360c:	b510      	push	{r4, lr}
 800360e:	4604      	mov	r4, r0
 8003610:	2800      	cmp	r0, #0
 8003612:	f000 809f 	beq.w	8003754 <HAL_ADC_Init+0x148>
 8003616:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8003618:	b923      	cbnz	r3, 8003624 <HAL_ADC_Init+0x18>
 800361a:	6443      	str	r3, [r0, #68]	; 0x44
 800361c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
 8003620:	f7ff fff2 	bl	8003608 <HAL_ADC_MspInit>
 8003624:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003626:	06db      	lsls	r3, r3, #27
 8003628:	f100 8092 	bmi.w	8003750 <HAL_ADC_Init+0x144>
 800362c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800362e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8003632:	f023 0302 	bic.w	r3, r3, #2
 8003636:	f043 0302 	orr.w	r3, r3, #2
 800363a:	6423      	str	r3, [r4, #64]	; 0x40
 800363c:	4b46      	ldr	r3, [pc, #280]	; (8003758 <HAL_ADC_Init+0x14c>)
 800363e:	685a      	ldr	r2, [r3, #4]
 8003640:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8003644:	605a      	str	r2, [r3, #4]
 8003646:	685a      	ldr	r2, [r3, #4]
 8003648:	6861      	ldr	r1, [r4, #4]
 800364a:	430a      	orrs	r2, r1
 800364c:	605a      	str	r2, [r3, #4]
 800364e:	6823      	ldr	r3, [r4, #0]
 8003650:	6921      	ldr	r1, [r4, #16]
 8003652:	685a      	ldr	r2, [r3, #4]
 8003654:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003658:	605a      	str	r2, [r3, #4]
 800365a:	685a      	ldr	r2, [r3, #4]
 800365c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8003660:	605a      	str	r2, [r3, #4]
 8003662:	685a      	ldr	r2, [r3, #4]
 8003664:	68a1      	ldr	r1, [r4, #8]
 8003666:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800366a:	605a      	str	r2, [r3, #4]
 800366c:	685a      	ldr	r2, [r3, #4]
 800366e:	430a      	orrs	r2, r1
 8003670:	605a      	str	r2, [r3, #4]
 8003672:	689a      	ldr	r2, [r3, #8]
 8003674:	68e1      	ldr	r1, [r4, #12]
 8003676:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800367a:	609a      	str	r2, [r3, #8]
 800367c:	689a      	ldr	r2, [r3, #8]
 800367e:	430a      	orrs	r2, r1
 8003680:	609a      	str	r2, [r3, #8]
 8003682:	4936      	ldr	r1, [pc, #216]	; (800375c <HAL_ADC_Init+0x150>)
 8003684:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8003686:	428a      	cmp	r2, r1
 8003688:	d056      	beq.n	8003738 <HAL_ADC_Init+0x12c>
 800368a:	6899      	ldr	r1, [r3, #8]
 800368c:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8003690:	6099      	str	r1, [r3, #8]
 8003692:	6899      	ldr	r1, [r3, #8]
 8003694:	430a      	orrs	r2, r1
 8003696:	609a      	str	r2, [r3, #8]
 8003698:	689a      	ldr	r2, [r3, #8]
 800369a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800369c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80036a0:	609a      	str	r2, [r3, #8]
 80036a2:	689a      	ldr	r2, [r3, #8]
 80036a4:	430a      	orrs	r2, r1
 80036a6:	609a      	str	r2, [r3, #8]
 80036a8:	689a      	ldr	r2, [r3, #8]
 80036aa:	69a1      	ldr	r1, [r4, #24]
 80036ac:	f022 0202 	bic.w	r2, r2, #2
 80036b0:	609a      	str	r2, [r3, #8]
 80036b2:	689a      	ldr	r2, [r3, #8]
 80036b4:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 80036b8:	609a      	str	r2, [r3, #8]
 80036ba:	6a22      	ldr	r2, [r4, #32]
 80036bc:	2a00      	cmp	r2, #0
 80036be:	d043      	beq.n	8003748 <HAL_ADC_Init+0x13c>
 80036c0:	685a      	ldr	r2, [r3, #4]
 80036c2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80036c6:	605a      	str	r2, [r3, #4]
 80036c8:	685a      	ldr	r2, [r3, #4]
 80036ca:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 80036ce:	605a      	str	r2, [r3, #4]
 80036d0:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 80036d4:	fa92 f2a2 	rbit	r2, r2
 80036d8:	fab2 f182 	clz	r1, r2
 80036dc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80036de:	6858      	ldr	r0, [r3, #4]
 80036e0:	3a01      	subs	r2, #1
 80036e2:	408a      	lsls	r2, r1
 80036e4:	4302      	orrs	r2, r0
 80036e6:	605a      	str	r2, [r3, #4]
 80036e8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80036ea:	69e1      	ldr	r1, [r4, #28]
 80036ec:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80036f0:	62da      	str	r2, [r3, #44]	; 0x2c
 80036f2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80036f4:	3901      	subs	r1, #1
 80036f6:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 80036fa:	62da      	str	r2, [r3, #44]	; 0x2c
 80036fc:	689a      	ldr	r2, [r3, #8]
 80036fe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8003700:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003704:	609a      	str	r2, [r3, #8]
 8003706:	689a      	ldr	r2, [r3, #8]
 8003708:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 800370c:	609a      	str	r2, [r3, #8]
 800370e:	689a      	ldr	r2, [r3, #8]
 8003710:	6961      	ldr	r1, [r4, #20]
 8003712:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003716:	609a      	str	r2, [r3, #8]
 8003718:	689a      	ldr	r2, [r3, #8]
 800371a:	2000      	movs	r0, #0
 800371c:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8003720:	609a      	str	r2, [r3, #8]
 8003722:	6460      	str	r0, [r4, #68]	; 0x44
 8003724:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003726:	f023 0303 	bic.w	r3, r3, #3
 800372a:	f043 0301 	orr.w	r3, r3, #1
 800372e:	6423      	str	r3, [r4, #64]	; 0x40
 8003730:	2300      	movs	r3, #0
 8003732:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8003736:	bd10      	pop	{r4, pc}
 8003738:	689a      	ldr	r2, [r3, #8]
 800373a:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800373e:	609a      	str	r2, [r3, #8]
 8003740:	689a      	ldr	r2, [r3, #8]
 8003742:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8003746:	e7ae      	b.n	80036a6 <HAL_ADC_Init+0x9a>
 8003748:	685a      	ldr	r2, [r3, #4]
 800374a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800374e:	e7ca      	b.n	80036e6 <HAL_ADC_Init+0xda>
 8003750:	2001      	movs	r0, #1
 8003752:	e7ed      	b.n	8003730 <HAL_ADC_Init+0x124>
 8003754:	2001      	movs	r0, #1
 8003756:	bd10      	pop	{r4, pc}
 8003758:	40012300 	.word	0x40012300
 800375c:	0f000001 	.word	0x0f000001

08003760 <HAL_ADC_Start>:
 8003760:	b082      	sub	sp, #8
 8003762:	2300      	movs	r3, #0
 8003764:	9301      	str	r3, [sp, #4]
 8003766:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800376a:	2b01      	cmp	r3, #1
 800376c:	d04e      	beq.n	800380c <HAL_ADC_Start+0xac>
 800376e:	2301      	movs	r3, #1
 8003770:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
 8003774:	6803      	ldr	r3, [r0, #0]
 8003776:	689a      	ldr	r2, [r3, #8]
 8003778:	07d1      	lsls	r1, r2, #31
 800377a:	d505      	bpl.n	8003788 <HAL_ADC_Start+0x28>
 800377c:	689a      	ldr	r2, [r3, #8]
 800377e:	07d2      	lsls	r2, r2, #31
 8003780:	d414      	bmi.n	80037ac <HAL_ADC_Start+0x4c>
 8003782:	2000      	movs	r0, #0
 8003784:	b002      	add	sp, #8
 8003786:	4770      	bx	lr
 8003788:	689a      	ldr	r2, [r3, #8]
 800378a:	4921      	ldr	r1, [pc, #132]	; (8003810 <HAL_ADC_Start+0xb0>)
 800378c:	f042 0201 	orr.w	r2, r2, #1
 8003790:	609a      	str	r2, [r3, #8]
 8003792:	4a20      	ldr	r2, [pc, #128]	; (8003814 <HAL_ADC_Start+0xb4>)
 8003794:	6812      	ldr	r2, [r2, #0]
 8003796:	fbb2 f2f1 	udiv	r2, r2, r1
 800379a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800379e:	9201      	str	r2, [sp, #4]
 80037a0:	9a01      	ldr	r2, [sp, #4]
 80037a2:	2a00      	cmp	r2, #0
 80037a4:	d0ea      	beq.n	800377c <HAL_ADC_Start+0x1c>
 80037a6:	9a01      	ldr	r2, [sp, #4]
 80037a8:	3a01      	subs	r2, #1
 80037aa:	e7f8      	b.n	800379e <HAL_ADC_Start+0x3e>
 80037ac:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80037ae:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80037b2:	f022 0201 	bic.w	r2, r2, #1
 80037b6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80037ba:	6402      	str	r2, [r0, #64]	; 0x40
 80037bc:	685a      	ldr	r2, [r3, #4]
 80037be:	0551      	lsls	r1, r2, #21
 80037c0:	bf41      	itttt	mi
 80037c2:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 80037c4:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 80037c8:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 80037cc:	6402      	strmi	r2, [r0, #64]	; 0x40
 80037ce:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80037d0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80037d4:	bf1c      	itt	ne
 80037d6:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 80037d8:	f022 0206 	bicne.w	r2, r2, #6
 80037dc:	6442      	str	r2, [r0, #68]	; 0x44
 80037de:	2200      	movs	r2, #0
 80037e0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 80037e4:	f06f 0222 	mvn.w	r2, #34	; 0x22
 80037e8:	601a      	str	r2, [r3, #0]
 80037ea:	4a0b      	ldr	r2, [pc, #44]	; (8003818 <HAL_ADC_Start+0xb8>)
 80037ec:	6852      	ldr	r2, [r2, #4]
 80037ee:	06d2      	lsls	r2, r2, #27
 80037f0:	d108      	bne.n	8003804 <HAL_ADC_Start+0xa4>
 80037f2:	6898      	ldr	r0, [r3, #8]
 80037f4:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 80037f8:	d1c3      	bne.n	8003782 <HAL_ADC_Start+0x22>
 80037fa:	689a      	ldr	r2, [r3, #8]
 80037fc:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003800:	609a      	str	r2, [r3, #8]
 8003802:	e7bf      	b.n	8003784 <HAL_ADC_Start+0x24>
 8003804:	4a05      	ldr	r2, [pc, #20]	; (800381c <HAL_ADC_Start+0xbc>)
 8003806:	4293      	cmp	r3, r2
 8003808:	d1bb      	bne.n	8003782 <HAL_ADC_Start+0x22>
 800380a:	e7f2      	b.n	80037f2 <HAL_ADC_Start+0x92>
 800380c:	2002      	movs	r0, #2
 800380e:	e7b9      	b.n	8003784 <HAL_ADC_Start+0x24>
 8003810:	000f4240 	.word	0x000f4240
 8003814:	200001bc 	.word	0x200001bc
 8003818:	40012300 	.word	0x40012300
 800381c:	40012000 	.word	0x40012000

08003820 <HAL_ADC_PollForConversion>:
 8003820:	6803      	ldr	r3, [r0, #0]
 8003822:	689a      	ldr	r2, [r3, #8]
 8003824:	b570      	push	{r4, r5, r6, lr}
 8003826:	0556      	lsls	r6, r2, #21
 8003828:	4604      	mov	r4, r0
 800382a:	460d      	mov	r5, r1
 800382c:	d50b      	bpl.n	8003846 <HAL_ADC_PollForConversion+0x26>
 800382e:	689b      	ldr	r3, [r3, #8]
 8003830:	05d8      	lsls	r0, r3, #23
 8003832:	d508      	bpl.n	8003846 <HAL_ADC_PollForConversion+0x26>
 8003834:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003836:	f043 0320 	orr.w	r3, r3, #32
 800383a:	6423      	str	r3, [r4, #64]	; 0x40
 800383c:	2300      	movs	r3, #0
 800383e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8003842:	2001      	movs	r0, #1
 8003844:	bd70      	pop	{r4, r5, r6, pc}
 8003846:	f000 fd89 	bl	800435c <HAL_GetTick>
 800384a:	4606      	mov	r6, r0
 800384c:	6823      	ldr	r3, [r4, #0]
 800384e:	681a      	ldr	r2, [r3, #0]
 8003850:	0792      	lsls	r2, r2, #30
 8003852:	d50c      	bpl.n	800386e <HAL_ADC_PollForConversion+0x4e>
 8003854:	f06f 0212 	mvn.w	r2, #18
 8003858:	601a      	str	r2, [r3, #0]
 800385a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800385c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003860:	6422      	str	r2, [r4, #64]	; 0x40
 8003862:	689a      	ldr	r2, [r3, #8]
 8003864:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 8003868:	d013      	beq.n	8003892 <HAL_ADC_PollForConversion+0x72>
 800386a:	2000      	movs	r0, #0
 800386c:	bd70      	pop	{r4, r5, r6, pc}
 800386e:	1c69      	adds	r1, r5, #1
 8003870:	d0ed      	beq.n	800384e <HAL_ADC_PollForConversion+0x2e>
 8003872:	b945      	cbnz	r5, 8003886 <HAL_ADC_PollForConversion+0x66>
 8003874:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003876:	f043 0304 	orr.w	r3, r3, #4
 800387a:	6423      	str	r3, [r4, #64]	; 0x40
 800387c:	2300      	movs	r3, #0
 800387e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8003882:	2003      	movs	r0, #3
 8003884:	bd70      	pop	{r4, r5, r6, pc}
 8003886:	f000 fd69 	bl	800435c <HAL_GetTick>
 800388a:	1b80      	subs	r0, r0, r6
 800388c:	4285      	cmp	r5, r0
 800388e:	d2dd      	bcs.n	800384c <HAL_ADC_PollForConversion+0x2c>
 8003890:	e7f0      	b.n	8003874 <HAL_ADC_PollForConversion+0x54>
 8003892:	69a2      	ldr	r2, [r4, #24]
 8003894:	2a00      	cmp	r2, #0
 8003896:	d1e8      	bne.n	800386a <HAL_ADC_PollForConversion+0x4a>
 8003898:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800389a:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 800389e:	d002      	beq.n	80038a6 <HAL_ADC_PollForConversion+0x86>
 80038a0:	689b      	ldr	r3, [r3, #8]
 80038a2:	055b      	lsls	r3, r3, #21
 80038a4:	d4e1      	bmi.n	800386a <HAL_ADC_PollForConversion+0x4a>
 80038a6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80038a8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80038ac:	6423      	str	r3, [r4, #64]	; 0x40
 80038ae:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80038b0:	f410 5080 	ands.w	r0, r0, #4096	; 0x1000
 80038b4:	d1d9      	bne.n	800386a <HAL_ADC_PollForConversion+0x4a>
 80038b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80038b8:	f043 0301 	orr.w	r3, r3, #1
 80038bc:	6423      	str	r3, [r4, #64]	; 0x40
 80038be:	bd70      	pop	{r4, r5, r6, pc}

080038c0 <HAL_ADC_GetValue>:
 80038c0:	6803      	ldr	r3, [r0, #0]
 80038c2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80038c4:	4770      	bx	lr
	...

080038c8 <HAL_ADC_ConfigChannel>:
 80038c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80038ca:	2300      	movs	r3, #0
 80038cc:	9301      	str	r3, [sp, #4]
 80038ce:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80038d2:	2b01      	cmp	r3, #1
 80038d4:	f000 8083 	beq.w	80039de <HAL_ADC_ConfigChannel+0x116>
 80038d8:	680d      	ldr	r5, [r1, #0]
 80038da:	6804      	ldr	r4, [r0, #0]
 80038dc:	688a      	ldr	r2, [r1, #8]
 80038de:	2301      	movs	r3, #1
 80038e0:	2d09      	cmp	r5, #9
 80038e2:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
 80038e6:	b2ae      	uxth	r6, r5
 80038e8:	d92a      	bls.n	8003940 <HAL_ADC_ConfigChannel+0x78>
 80038ea:	eb06 0346 	add.w	r3, r6, r6, lsl #1
 80038ee:	68e7      	ldr	r7, [r4, #12]
 80038f0:	3b1e      	subs	r3, #30
 80038f2:	f04f 0e07 	mov.w	lr, #7
 80038f6:	fa0e fe03 	lsl.w	lr, lr, r3
 80038fa:	ea27 070e 	bic.w	r7, r7, lr
 80038fe:	60e7      	str	r7, [r4, #12]
 8003900:	68e7      	ldr	r7, [r4, #12]
 8003902:	fa02 f303 	lsl.w	r3, r2, r3
 8003906:	433b      	orrs	r3, r7
 8003908:	60e3      	str	r3, [r4, #12]
 800390a:	684a      	ldr	r2, [r1, #4]
 800390c:	2a06      	cmp	r2, #6
 800390e:	ea4f 0382 	mov.w	r3, r2, lsl #2
 8003912:	d825      	bhi.n	8003960 <HAL_ADC_ConfigChannel+0x98>
 8003914:	4413      	add	r3, r2
 8003916:	6b67      	ldr	r7, [r4, #52]	; 0x34
 8003918:	1f59      	subs	r1, r3, #5
 800391a:	231f      	movs	r3, #31
 800391c:	408b      	lsls	r3, r1
 800391e:	ea27 0303 	bic.w	r3, r7, r3
 8003922:	6363      	str	r3, [r4, #52]	; 0x34
 8003924:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8003926:	fa06 f101 	lsl.w	r1, r6, r1
 800392a:	4311      	orrs	r1, r2
 800392c:	6361      	str	r1, [r4, #52]	; 0x34
 800392e:	4b2d      	ldr	r3, [pc, #180]	; (80039e4 <HAL_ADC_ConfigChannel+0x11c>)
 8003930:	429c      	cmp	r4, r3
 8003932:	d034      	beq.n	800399e <HAL_ADC_ConfigChannel+0xd6>
 8003934:	2300      	movs	r3, #0
 8003936:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
 800393a:	4618      	mov	r0, r3
 800393c:	b003      	add	sp, #12
 800393e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003940:	6927      	ldr	r7, [r4, #16]
 8003942:	eb05 0345 	add.w	r3, r5, r5, lsl #1
 8003946:	f04f 0e07 	mov.w	lr, #7
 800394a:	fa0e fe03 	lsl.w	lr, lr, r3
 800394e:	ea27 070e 	bic.w	r7, r7, lr
 8003952:	6127      	str	r7, [r4, #16]
 8003954:	6927      	ldr	r7, [r4, #16]
 8003956:	fa02 f303 	lsl.w	r3, r2, r3
 800395a:	433b      	orrs	r3, r7
 800395c:	6123      	str	r3, [r4, #16]
 800395e:	e7d4      	b.n	800390a <HAL_ADC_ConfigChannel+0x42>
 8003960:	2a0c      	cmp	r2, #12
 8003962:	d80e      	bhi.n	8003982 <HAL_ADC_ConfigChannel+0xba>
 8003964:	4413      	add	r3, r2
 8003966:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8003968:	f1a3 0223 	sub.w	r2, r3, #35	; 0x23
 800396c:	231f      	movs	r3, #31
 800396e:	4093      	lsls	r3, r2
 8003970:	ea21 0303 	bic.w	r3, r1, r3
 8003974:	6323      	str	r3, [r4, #48]	; 0x30
 8003976:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003978:	fa06 f202 	lsl.w	r2, r6, r2
 800397c:	431a      	orrs	r2, r3
 800397e:	6322      	str	r2, [r4, #48]	; 0x30
 8003980:	e7d5      	b.n	800392e <HAL_ADC_ConfigChannel+0x66>
 8003982:	4413      	add	r3, r2
 8003984:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8003986:	3b41      	subs	r3, #65	; 0x41
 8003988:	221f      	movs	r2, #31
 800398a:	409a      	lsls	r2, r3
 800398c:	ea21 0202 	bic.w	r2, r1, r2
 8003990:	62e2      	str	r2, [r4, #44]	; 0x2c
 8003992:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8003994:	fa06 f103 	lsl.w	r1, r6, r3
 8003998:	4311      	orrs	r1, r2
 800399a:	62e1      	str	r1, [r4, #44]	; 0x2c
 800399c:	e7c7      	b.n	800392e <HAL_ADC_ConfigChannel+0x66>
 800399e:	2d12      	cmp	r5, #18
 80039a0:	d104      	bne.n	80039ac <HAL_ADC_ConfigChannel+0xe4>
 80039a2:	4a11      	ldr	r2, [pc, #68]	; (80039e8 <HAL_ADC_ConfigChannel+0x120>)
 80039a4:	6853      	ldr	r3, [r2, #4]
 80039a6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80039aa:	6053      	str	r3, [r2, #4]
 80039ac:	f1a5 0310 	sub.w	r3, r5, #16
 80039b0:	2b01      	cmp	r3, #1
 80039b2:	d8bf      	bhi.n	8003934 <HAL_ADC_ConfigChannel+0x6c>
 80039b4:	4a0c      	ldr	r2, [pc, #48]	; (80039e8 <HAL_ADC_ConfigChannel+0x120>)
 80039b6:	6853      	ldr	r3, [r2, #4]
 80039b8:	2d10      	cmp	r5, #16
 80039ba:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80039be:	6053      	str	r3, [r2, #4]
 80039c0:	d1b8      	bne.n	8003934 <HAL_ADC_ConfigChannel+0x6c>
 80039c2:	4b0a      	ldr	r3, [pc, #40]	; (80039ec <HAL_ADC_ConfigChannel+0x124>)
 80039c4:	4a0a      	ldr	r2, [pc, #40]	; (80039f0 <HAL_ADC_ConfigChannel+0x128>)
 80039c6:	681b      	ldr	r3, [r3, #0]
 80039c8:	fbb3 f2f2 	udiv	r2, r3, r2
 80039cc:	230a      	movs	r3, #10
 80039ce:	4353      	muls	r3, r2
 80039d0:	9301      	str	r3, [sp, #4]
 80039d2:	9b01      	ldr	r3, [sp, #4]
 80039d4:	2b00      	cmp	r3, #0
 80039d6:	d0ad      	beq.n	8003934 <HAL_ADC_ConfigChannel+0x6c>
 80039d8:	9b01      	ldr	r3, [sp, #4]
 80039da:	3b01      	subs	r3, #1
 80039dc:	e7f8      	b.n	80039d0 <HAL_ADC_ConfigChannel+0x108>
 80039de:	2002      	movs	r0, #2
 80039e0:	e7ac      	b.n	800393c <HAL_ADC_ConfigChannel+0x74>
 80039e2:	bf00      	nop
 80039e4:	40012000 	.word	0x40012000
 80039e8:	40012300 	.word	0x40012300
 80039ec:	200001bc 	.word	0x200001bc
 80039f0:	000f4240 	.word	0x000f4240

080039f4 <HAL_MspInit>:
 80039f4:	4770      	bx	lr
	...

080039f8 <UART_SetConfig>:
 80039f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80039fc:	6806      	ldr	r6, [r0, #0]
 80039fe:	68c2      	ldr	r2, [r0, #12]
 8003a00:	6933      	ldr	r3, [r6, #16]
 8003a02:	69c1      	ldr	r1, [r0, #28]
 8003a04:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8003a08:	4313      	orrs	r3, r2
 8003a0a:	6133      	str	r3, [r6, #16]
 8003a0c:	4604      	mov	r4, r0
 8003a0e:	6883      	ldr	r3, [r0, #8]
 8003a10:	6900      	ldr	r0, [r0, #16]
 8003a12:	68f2      	ldr	r2, [r6, #12]
 8003a14:	4303      	orrs	r3, r0
 8003a16:	6960      	ldr	r0, [r4, #20]
 8003a18:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 8003a1c:	4303      	orrs	r3, r0
 8003a1e:	f022 020c 	bic.w	r2, r2, #12
 8003a22:	430b      	orrs	r3, r1
 8003a24:	4313      	orrs	r3, r2
 8003a26:	60f3      	str	r3, [r6, #12]
 8003a28:	6973      	ldr	r3, [r6, #20]
 8003a2a:	69a2      	ldr	r2, [r4, #24]
 8003a2c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003a30:	4313      	orrs	r3, r2
 8003a32:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 8003a36:	6173      	str	r3, [r6, #20]
 8003a38:	4b7a      	ldr	r3, [pc, #488]	; (8003c24 <UART_SetConfig+0x22c>)
 8003a3a:	d17c      	bne.n	8003b36 <UART_SetConfig+0x13e>
 8003a3c:	429e      	cmp	r6, r3
 8003a3e:	d003      	beq.n	8003a48 <UART_SetConfig+0x50>
 8003a40:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003a44:	429e      	cmp	r6, r3
 8003a46:	d144      	bne.n	8003ad2 <UART_SetConfig+0xda>
 8003a48:	f000 fc32 	bl	80042b0 <HAL_RCC_GetPCLK2Freq>
 8003a4c:	2519      	movs	r5, #25
 8003a4e:	fb05 f300 	mul.w	r3, r5, r0
 8003a52:	6860      	ldr	r0, [r4, #4]
 8003a54:	f04f 0964 	mov.w	r9, #100	; 0x64
 8003a58:	0040      	lsls	r0, r0, #1
 8003a5a:	fbb3 f3f0 	udiv	r3, r3, r0
 8003a5e:	fbb3 f3f9 	udiv	r3, r3, r9
 8003a62:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8003a66:	f000 fc23 	bl	80042b0 <HAL_RCC_GetPCLK2Freq>
 8003a6a:	6863      	ldr	r3, [r4, #4]
 8003a6c:	4368      	muls	r0, r5
 8003a6e:	005b      	lsls	r3, r3, #1
 8003a70:	fbb0 f7f3 	udiv	r7, r0, r3
 8003a74:	f000 fc1c 	bl	80042b0 <HAL_RCC_GetPCLK2Freq>
 8003a78:	6863      	ldr	r3, [r4, #4]
 8003a7a:	4368      	muls	r0, r5
 8003a7c:	005b      	lsls	r3, r3, #1
 8003a7e:	fbb0 f3f3 	udiv	r3, r0, r3
 8003a82:	fbb3 f3f9 	udiv	r3, r3, r9
 8003a86:	fb09 7313 	mls	r3, r9, r3, r7
 8003a8a:	00db      	lsls	r3, r3, #3
 8003a8c:	3332      	adds	r3, #50	; 0x32
 8003a8e:	fbb3 f3f9 	udiv	r3, r3, r9
 8003a92:	005b      	lsls	r3, r3, #1
 8003a94:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 8003a98:	f000 fc0a 	bl	80042b0 <HAL_RCC_GetPCLK2Freq>
 8003a9c:	6862      	ldr	r2, [r4, #4]
 8003a9e:	4368      	muls	r0, r5
 8003aa0:	0052      	lsls	r2, r2, #1
 8003aa2:	fbb0 faf2 	udiv	r10, r0, r2
 8003aa6:	f000 fc03 	bl	80042b0 <HAL_RCC_GetPCLK2Freq>
 8003aaa:	6863      	ldr	r3, [r4, #4]
 8003aac:	4368      	muls	r0, r5
 8003aae:	005b      	lsls	r3, r3, #1
 8003ab0:	fbb0 f3f3 	udiv	r3, r0, r3
 8003ab4:	fbb3 f3f9 	udiv	r3, r3, r9
 8003ab8:	fb09 a313 	mls	r3, r9, r3, r10
 8003abc:	00db      	lsls	r3, r3, #3
 8003abe:	3332      	adds	r3, #50	; 0x32
 8003ac0:	fbb3 f3f9 	udiv	r3, r3, r9
 8003ac4:	f003 0307 	and.w	r3, r3, #7
 8003ac8:	4443      	add	r3, r8
 8003aca:	443b      	add	r3, r7
 8003acc:	60b3      	str	r3, [r6, #8]
 8003ace:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8003ad2:	f000 fbd5 	bl	8004280 <HAL_RCC_GetPCLK1Freq>
 8003ad6:	2519      	movs	r5, #25
 8003ad8:	fb05 f300 	mul.w	r3, r5, r0
 8003adc:	6860      	ldr	r0, [r4, #4]
 8003ade:	f04f 0964 	mov.w	r9, #100	; 0x64
 8003ae2:	0040      	lsls	r0, r0, #1
 8003ae4:	fbb3 f3f0 	udiv	r3, r3, r0
 8003ae8:	fbb3 f3f9 	udiv	r3, r3, r9
 8003aec:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8003af0:	f000 fbc6 	bl	8004280 <HAL_RCC_GetPCLK1Freq>
 8003af4:	6863      	ldr	r3, [r4, #4]
 8003af6:	4368      	muls	r0, r5
 8003af8:	005b      	lsls	r3, r3, #1
 8003afa:	fbb0 f7f3 	udiv	r7, r0, r3
 8003afe:	f000 fbbf 	bl	8004280 <HAL_RCC_GetPCLK1Freq>
 8003b02:	6863      	ldr	r3, [r4, #4]
 8003b04:	4368      	muls	r0, r5
 8003b06:	005b      	lsls	r3, r3, #1
 8003b08:	fbb0 f3f3 	udiv	r3, r0, r3
 8003b0c:	fbb3 f3f9 	udiv	r3, r3, r9
 8003b10:	fb09 7313 	mls	r3, r9, r3, r7
 8003b14:	00db      	lsls	r3, r3, #3
 8003b16:	3332      	adds	r3, #50	; 0x32
 8003b18:	fbb3 f3f9 	udiv	r3, r3, r9
 8003b1c:	005b      	lsls	r3, r3, #1
 8003b1e:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 8003b22:	f000 fbad 	bl	8004280 <HAL_RCC_GetPCLK1Freq>
 8003b26:	6862      	ldr	r2, [r4, #4]
 8003b28:	4368      	muls	r0, r5
 8003b2a:	0052      	lsls	r2, r2, #1
 8003b2c:	fbb0 faf2 	udiv	r10, r0, r2
 8003b30:	f000 fba6 	bl	8004280 <HAL_RCC_GetPCLK1Freq>
 8003b34:	e7b9      	b.n	8003aaa <UART_SetConfig+0xb2>
 8003b36:	429e      	cmp	r6, r3
 8003b38:	d002      	beq.n	8003b40 <UART_SetConfig+0x148>
 8003b3a:	4b3b      	ldr	r3, [pc, #236]	; (8003c28 <UART_SetConfig+0x230>)
 8003b3c:	429e      	cmp	r6, r3
 8003b3e:	d140      	bne.n	8003bc2 <UART_SetConfig+0x1ca>
 8003b40:	f000 fbb6 	bl	80042b0 <HAL_RCC_GetPCLK2Freq>
 8003b44:	6867      	ldr	r7, [r4, #4]
 8003b46:	2519      	movs	r5, #25
 8003b48:	f04f 0964 	mov.w	r9, #100	; 0x64
 8003b4c:	fb05 f300 	mul.w	r3, r5, r0
 8003b50:	00bf      	lsls	r7, r7, #2
 8003b52:	fbb3 f3f7 	udiv	r3, r3, r7
 8003b56:	fbb3 f3f9 	udiv	r3, r3, r9
 8003b5a:	011f      	lsls	r7, r3, #4
 8003b5c:	f000 fba8 	bl	80042b0 <HAL_RCC_GetPCLK2Freq>
 8003b60:	6863      	ldr	r3, [r4, #4]
 8003b62:	4368      	muls	r0, r5
 8003b64:	009b      	lsls	r3, r3, #2
 8003b66:	fbb0 f8f3 	udiv	r8, r0, r3
 8003b6a:	f000 fba1 	bl	80042b0 <HAL_RCC_GetPCLK2Freq>
 8003b6e:	6863      	ldr	r3, [r4, #4]
 8003b70:	4368      	muls	r0, r5
 8003b72:	009b      	lsls	r3, r3, #2
 8003b74:	fbb0 f3f3 	udiv	r3, r0, r3
 8003b78:	fbb3 f3f9 	udiv	r3, r3, r9
 8003b7c:	fb09 8313 	mls	r3, r9, r3, r8
 8003b80:	011b      	lsls	r3, r3, #4
 8003b82:	3332      	adds	r3, #50	; 0x32
 8003b84:	fbb3 f3f9 	udiv	r3, r3, r9
 8003b88:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8003b8c:	f000 fb90 	bl	80042b0 <HAL_RCC_GetPCLK2Freq>
 8003b90:	6862      	ldr	r2, [r4, #4]
 8003b92:	4368      	muls	r0, r5
 8003b94:	0092      	lsls	r2, r2, #2
 8003b96:	fbb0 faf2 	udiv	r10, r0, r2
 8003b9a:	f000 fb89 	bl	80042b0 <HAL_RCC_GetPCLK2Freq>
 8003b9e:	6863      	ldr	r3, [r4, #4]
 8003ba0:	4368      	muls	r0, r5
 8003ba2:	009b      	lsls	r3, r3, #2
 8003ba4:	fbb0 f3f3 	udiv	r3, r0, r3
 8003ba8:	fbb3 f3f9 	udiv	r3, r3, r9
 8003bac:	fb09 a313 	mls	r3, r9, r3, r10
 8003bb0:	011b      	lsls	r3, r3, #4
 8003bb2:	3332      	adds	r3, #50	; 0x32
 8003bb4:	fbb3 f3f9 	udiv	r3, r3, r9
 8003bb8:	f003 030f 	and.w	r3, r3, #15
 8003bbc:	ea43 0308 	orr.w	r3, r3, r8
 8003bc0:	e783      	b.n	8003aca <UART_SetConfig+0xd2>
 8003bc2:	f000 fb5d 	bl	8004280 <HAL_RCC_GetPCLK1Freq>
 8003bc6:	6867      	ldr	r7, [r4, #4]
 8003bc8:	2519      	movs	r5, #25
 8003bca:	f04f 0964 	mov.w	r9, #100	; 0x64
 8003bce:	fb05 f300 	mul.w	r3, r5, r0
 8003bd2:	00bf      	lsls	r7, r7, #2
 8003bd4:	fbb3 f3f7 	udiv	r3, r3, r7
 8003bd8:	fbb3 f3f9 	udiv	r3, r3, r9
 8003bdc:	011f      	lsls	r7, r3, #4
 8003bde:	f000 fb4f 	bl	8004280 <HAL_RCC_GetPCLK1Freq>
 8003be2:	6863      	ldr	r3, [r4, #4]
 8003be4:	4368      	muls	r0, r5
 8003be6:	009b      	lsls	r3, r3, #2
 8003be8:	fbb0 f8f3 	udiv	r8, r0, r3
 8003bec:	f000 fb48 	bl	8004280 <HAL_RCC_GetPCLK1Freq>
 8003bf0:	6863      	ldr	r3, [r4, #4]
 8003bf2:	4368      	muls	r0, r5
 8003bf4:	009b      	lsls	r3, r3, #2
 8003bf6:	fbb0 f3f3 	udiv	r3, r0, r3
 8003bfa:	fbb3 f3f9 	udiv	r3, r3, r9
 8003bfe:	fb09 8313 	mls	r3, r9, r3, r8
 8003c02:	011b      	lsls	r3, r3, #4
 8003c04:	3332      	adds	r3, #50	; 0x32
 8003c06:	fbb3 f3f9 	udiv	r3, r3, r9
 8003c0a:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8003c0e:	f000 fb37 	bl	8004280 <HAL_RCC_GetPCLK1Freq>
 8003c12:	6862      	ldr	r2, [r4, #4]
 8003c14:	4368      	muls	r0, r5
 8003c16:	0092      	lsls	r2, r2, #2
 8003c18:	fbb0 faf2 	udiv	r10, r0, r2
 8003c1c:	f000 fb30 	bl	8004280 <HAL_RCC_GetPCLK1Freq>
 8003c20:	e7bd      	b.n	8003b9e <UART_SetConfig+0x1a6>
 8003c22:	bf00      	nop
 8003c24:	40011000 	.word	0x40011000
 8003c28:	40011400 	.word	0x40011400

08003c2c <HAL_UART_MspInit>:
 8003c2c:	4770      	bx	lr

08003c2e <HAL_UART_Init>:
 8003c2e:	b510      	push	{r4, lr}
 8003c30:	4604      	mov	r4, r0
 8003c32:	b340      	cbz	r0, 8003c86 <HAL_UART_Init+0x58>
 8003c34:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003c38:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003c3c:	b91b      	cbnz	r3, 8003c46 <HAL_UART_Init+0x18>
 8003c3e:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8003c42:	f7ff fff3 	bl	8003c2c <HAL_UART_MspInit>
 8003c46:	6822      	ldr	r2, [r4, #0]
 8003c48:	2324      	movs	r3, #36	; 0x24
 8003c4a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8003c4e:	68d3      	ldr	r3, [r2, #12]
 8003c50:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003c54:	60d3      	str	r3, [r2, #12]
 8003c56:	4620      	mov	r0, r4
 8003c58:	f7ff fece 	bl	80039f8 <UART_SetConfig>
 8003c5c:	6823      	ldr	r3, [r4, #0]
 8003c5e:	691a      	ldr	r2, [r3, #16]
 8003c60:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003c64:	611a      	str	r2, [r3, #16]
 8003c66:	695a      	ldr	r2, [r3, #20]
 8003c68:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003c6c:	615a      	str	r2, [r3, #20]
 8003c6e:	68da      	ldr	r2, [r3, #12]
 8003c70:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003c74:	60da      	str	r2, [r3, #12]
 8003c76:	2000      	movs	r0, #0
 8003c78:	2320      	movs	r3, #32
 8003c7a:	63e0      	str	r0, [r4, #60]	; 0x3c
 8003c7c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8003c80:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 8003c84:	bd10      	pop	{r4, pc}
 8003c86:	2001      	movs	r0, #1
 8003c88:	bd10      	pop	{r4, pc}

08003c8a <HAL_TIM_OC_MspInit>:
 8003c8a:	4770      	bx	lr

08003c8c <TIM_Base_SetConfig>:
 8003c8c:	4a22      	ldr	r2, [pc, #136]	; (8003d18 <TIM_Base_SetConfig+0x8c>)
 8003c8e:	6803      	ldr	r3, [r0, #0]
 8003c90:	4290      	cmp	r0, r2
 8003c92:	d00e      	beq.n	8003cb2 <TIM_Base_SetConfig+0x26>
 8003c94:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8003c98:	d00b      	beq.n	8003cb2 <TIM_Base_SetConfig+0x26>
 8003c9a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8003c9e:	4290      	cmp	r0, r2
 8003ca0:	d007      	beq.n	8003cb2 <TIM_Base_SetConfig+0x26>
 8003ca2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003ca6:	4290      	cmp	r0, r2
 8003ca8:	d003      	beq.n	8003cb2 <TIM_Base_SetConfig+0x26>
 8003caa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003cae:	4290      	cmp	r0, r2
 8003cb0:	d119      	bne.n	8003ce6 <TIM_Base_SetConfig+0x5a>
 8003cb2:	684a      	ldr	r2, [r1, #4]
 8003cb4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003cb8:	4313      	orrs	r3, r2
 8003cba:	4a17      	ldr	r2, [pc, #92]	; (8003d18 <TIM_Base_SetConfig+0x8c>)
 8003cbc:	4290      	cmp	r0, r2
 8003cbe:	d104      	bne.n	8003cca <TIM_Base_SetConfig+0x3e>
 8003cc0:	68ca      	ldr	r2, [r1, #12]
 8003cc2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003cc6:	4313      	orrs	r3, r2
 8003cc8:	e018      	b.n	8003cfc <TIM_Base_SetConfig+0x70>
 8003cca:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8003cce:	d0f7      	beq.n	8003cc0 <TIM_Base_SetConfig+0x34>
 8003cd0:	4a12      	ldr	r2, [pc, #72]	; (8003d1c <TIM_Base_SetConfig+0x90>)
 8003cd2:	4290      	cmp	r0, r2
 8003cd4:	d0f4      	beq.n	8003cc0 <TIM_Base_SetConfig+0x34>
 8003cd6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003cda:	4290      	cmp	r0, r2
 8003cdc:	d0f0      	beq.n	8003cc0 <TIM_Base_SetConfig+0x34>
 8003cde:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003ce2:	4290      	cmp	r0, r2
 8003ce4:	d0ec      	beq.n	8003cc0 <TIM_Base_SetConfig+0x34>
 8003ce6:	4a0e      	ldr	r2, [pc, #56]	; (8003d20 <TIM_Base_SetConfig+0x94>)
 8003ce8:	4290      	cmp	r0, r2
 8003cea:	d0e9      	beq.n	8003cc0 <TIM_Base_SetConfig+0x34>
 8003cec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003cf0:	4290      	cmp	r0, r2
 8003cf2:	d0e5      	beq.n	8003cc0 <TIM_Base_SetConfig+0x34>
 8003cf4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003cf8:	4290      	cmp	r0, r2
 8003cfa:	d0e1      	beq.n	8003cc0 <TIM_Base_SetConfig+0x34>
 8003cfc:	6003      	str	r3, [r0, #0]
 8003cfe:	688b      	ldr	r3, [r1, #8]
 8003d00:	62c3      	str	r3, [r0, #44]	; 0x2c
 8003d02:	680b      	ldr	r3, [r1, #0]
 8003d04:	6283      	str	r3, [r0, #40]	; 0x28
 8003d06:	4b04      	ldr	r3, [pc, #16]	; (8003d18 <TIM_Base_SetConfig+0x8c>)
 8003d08:	4298      	cmp	r0, r3
 8003d0a:	bf04      	itt	eq
 8003d0c:	690b      	ldreq	r3, [r1, #16]
 8003d0e:	6303      	streq	r3, [r0, #48]	; 0x30
 8003d10:	2301      	movs	r3, #1
 8003d12:	6143      	str	r3, [r0, #20]
 8003d14:	4770      	bx	lr
 8003d16:	bf00      	nop
 8003d18:	40010000 	.word	0x40010000
 8003d1c:	40000400 	.word	0x40000400
 8003d20:	40014000 	.word	0x40014000

08003d24 <HAL_TIM_OC_Init>:
 8003d24:	b510      	push	{r4, lr}
 8003d26:	4604      	mov	r4, r0
 8003d28:	b1a0      	cbz	r0, 8003d54 <HAL_TIM_OC_Init+0x30>
 8003d2a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003d2e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003d32:	b91b      	cbnz	r3, 8003d3c <HAL_TIM_OC_Init+0x18>
 8003d34:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8003d38:	f7ff ffa7 	bl	8003c8a <HAL_TIM_OC_MspInit>
 8003d3c:	2302      	movs	r3, #2
 8003d3e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8003d42:	6820      	ldr	r0, [r4, #0]
 8003d44:	1d21      	adds	r1, r4, #4
 8003d46:	f7ff ffa1 	bl	8003c8c <TIM_Base_SetConfig>
 8003d4a:	2301      	movs	r3, #1
 8003d4c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8003d50:	2000      	movs	r0, #0
 8003d52:	bd10      	pop	{r4, pc}
 8003d54:	2001      	movs	r0, #1
 8003d56:	bd10      	pop	{r4, pc}

08003d58 <TIM_CCxChannelCmd>:
 8003d58:	6a03      	ldr	r3, [r0, #32]
 8003d5a:	b510      	push	{r4, lr}
 8003d5c:	2401      	movs	r4, #1
 8003d5e:	408c      	lsls	r4, r1
 8003d60:	ea23 0304 	bic.w	r3, r3, r4
 8003d64:	6203      	str	r3, [r0, #32]
 8003d66:	6a03      	ldr	r3, [r0, #32]
 8003d68:	408a      	lsls	r2, r1
 8003d6a:	431a      	orrs	r2, r3
 8003d6c:	6202      	str	r2, [r0, #32]
 8003d6e:	bd10      	pop	{r4, pc}

08003d70 <HAL_TIM_PWM_Start>:
 8003d70:	b510      	push	{r4, lr}
 8003d72:	4604      	mov	r4, r0
 8003d74:	2201      	movs	r2, #1
 8003d76:	6800      	ldr	r0, [r0, #0]
 8003d78:	f7ff ffee 	bl	8003d58 <TIM_CCxChannelCmd>
 8003d7c:	6823      	ldr	r3, [r4, #0]
 8003d7e:	4a06      	ldr	r2, [pc, #24]	; (8003d98 <HAL_TIM_PWM_Start+0x28>)
 8003d80:	4293      	cmp	r3, r2
 8003d82:	bf02      	ittt	eq
 8003d84:	6c5a      	ldreq	r2, [r3, #68]	; 0x44
 8003d86:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 8003d8a:	645a      	streq	r2, [r3, #68]	; 0x44
 8003d8c:	681a      	ldr	r2, [r3, #0]
 8003d8e:	f042 0201 	orr.w	r2, r2, #1
 8003d92:	601a      	str	r2, [r3, #0]
 8003d94:	2000      	movs	r0, #0
 8003d96:	bd10      	pop	{r4, pc}
 8003d98:	40010000 	.word	0x40010000

08003d9c <HAL_TIM_OC_Start>:
 8003d9c:	f7ff bfe8 	b.w	8003d70 <HAL_TIM_PWM_Start>

08003da0 <HAL_PWR_EnterSLEEPMode>:
 8003da0:	4a06      	ldr	r2, [pc, #24]	; (8003dbc <HAL_PWR_EnterSLEEPMode+0x1c>)
 8003da2:	6913      	ldr	r3, [r2, #16]
 8003da4:	2901      	cmp	r1, #1
 8003da6:	f023 0304 	bic.w	r3, r3, #4
 8003daa:	6113      	str	r3, [r2, #16]
 8003dac:	d101      	bne.n	8003db2 <HAL_PWR_EnterSLEEPMode+0x12>
 8003dae:	bf30      	wfi
 8003db0:	4770      	bx	lr
 8003db2:	bf40      	sev
 8003db4:	bf20      	wfe
 8003db6:	bf20      	wfe
 8003db8:	4770      	bx	lr
 8003dba:	bf00      	nop
 8003dbc:	e000ed00 	.word	0xe000ed00

08003dc0 <HAL_RCC_OscConfig>:
 8003dc0:	6803      	ldr	r3, [r0, #0]
 8003dc2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003dc4:	07dd      	lsls	r5, r3, #31
 8003dc6:	4604      	mov	r4, r0
 8003dc8:	d438      	bmi.n	8003e3c <HAL_RCC_OscConfig+0x7c>
 8003dca:	6823      	ldr	r3, [r4, #0]
 8003dcc:	0798      	lsls	r0, r3, #30
 8003dce:	d471      	bmi.n	8003eb4 <HAL_RCC_OscConfig+0xf4>
 8003dd0:	6823      	ldr	r3, [r4, #0]
 8003dd2:	071e      	lsls	r6, r3, #28
 8003dd4:	f100 80bd 	bmi.w	8003f52 <HAL_RCC_OscConfig+0x192>
 8003dd8:	6823      	ldr	r3, [r4, #0]
 8003dda:	075d      	lsls	r5, r3, #29
 8003ddc:	d528      	bpl.n	8003e30 <HAL_RCC_OscConfig+0x70>
 8003dde:	2300      	movs	r3, #0
 8003de0:	9301      	str	r3, [sp, #4]
 8003de2:	4ba8      	ldr	r3, [pc, #672]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003de4:	4da8      	ldr	r5, [pc, #672]	; (8004088 <HAL_RCC_OscConfig+0x2c8>)
 8003de6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003de8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003dec:	641a      	str	r2, [r3, #64]	; 0x40
 8003dee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003df0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003df4:	9301      	str	r3, [sp, #4]
 8003df6:	9b01      	ldr	r3, [sp, #4]
 8003df8:	682b      	ldr	r3, [r5, #0]
 8003dfa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003dfe:	602b      	str	r3, [r5, #0]
 8003e00:	f000 faac 	bl	800435c <HAL_GetTick>
 8003e04:	4606      	mov	r6, r0
 8003e06:	682b      	ldr	r3, [r5, #0]
 8003e08:	05da      	lsls	r2, r3, #23
 8003e0a:	f140 80c4 	bpl.w	8003f96 <HAL_RCC_OscConfig+0x1d6>
 8003e0e:	4b9f      	ldr	r3, [pc, #636]	; (800408c <HAL_RCC_OscConfig+0x2cc>)
 8003e10:	7a22      	ldrb	r2, [r4, #8]
 8003e12:	701a      	strb	r2, [r3, #0]
 8003e14:	68a3      	ldr	r3, [r4, #8]
 8003e16:	2b00      	cmp	r3, #0
 8003e18:	f000 80cb 	beq.w	8003fb2 <HAL_RCC_OscConfig+0x1f2>
 8003e1c:	f000 fa9e 	bl	800435c <HAL_GetTick>
 8003e20:	4d98      	ldr	r5, [pc, #608]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003e22:	4606      	mov	r6, r0
 8003e24:	f241 3788 	movw	r7, #5000	; 0x1388
 8003e28:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8003e2a:	079b      	lsls	r3, r3, #30
 8003e2c:	f140 80ba 	bpl.w	8003fa4 <HAL_RCC_OscConfig+0x1e4>
 8003e30:	69a2      	ldr	r2, [r4, #24]
 8003e32:	2a00      	cmp	r2, #0
 8003e34:	f040 80cd 	bne.w	8003fd2 <HAL_RCC_OscConfig+0x212>
 8003e38:	2000      	movs	r0, #0
 8003e3a:	e015      	b.n	8003e68 <HAL_RCC_OscConfig+0xa8>
 8003e3c:	4b91      	ldr	r3, [pc, #580]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003e3e:	689a      	ldr	r2, [r3, #8]
 8003e40:	f002 020c 	and.w	r2, r2, #12
 8003e44:	2a04      	cmp	r2, #4
 8003e46:	d007      	beq.n	8003e58 <HAL_RCC_OscConfig+0x98>
 8003e48:	689a      	ldr	r2, [r3, #8]
 8003e4a:	f002 020c 	and.w	r2, r2, #12
 8003e4e:	2a08      	cmp	r2, #8
 8003e50:	d10c      	bne.n	8003e6c <HAL_RCC_OscConfig+0xac>
 8003e52:	685b      	ldr	r3, [r3, #4]
 8003e54:	0259      	lsls	r1, r3, #9
 8003e56:	d509      	bpl.n	8003e6c <HAL_RCC_OscConfig+0xac>
 8003e58:	4b8a      	ldr	r3, [pc, #552]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003e5a:	681b      	ldr	r3, [r3, #0]
 8003e5c:	039a      	lsls	r2, r3, #14
 8003e5e:	d5b4      	bpl.n	8003dca <HAL_RCC_OscConfig+0xa>
 8003e60:	6863      	ldr	r3, [r4, #4]
 8003e62:	2b00      	cmp	r3, #0
 8003e64:	d1b1      	bne.n	8003dca <HAL_RCC_OscConfig+0xa>
 8003e66:	2001      	movs	r0, #1
 8003e68:	b003      	add	sp, #12
 8003e6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003e6c:	4b88      	ldr	r3, [pc, #544]	; (8004090 <HAL_RCC_OscConfig+0x2d0>)
 8003e6e:	7922      	ldrb	r2, [r4, #4]
 8003e70:	701a      	strb	r2, [r3, #0]
 8003e72:	6863      	ldr	r3, [r4, #4]
 8003e74:	b17b      	cbz	r3, 8003e96 <HAL_RCC_OscConfig+0xd6>
 8003e76:	f000 fa71 	bl	800435c <HAL_GetTick>
 8003e7a:	4d82      	ldr	r5, [pc, #520]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003e7c:	4606      	mov	r6, r0
 8003e7e:	f241 3788 	movw	r7, #5000	; 0x1388
 8003e82:	682b      	ldr	r3, [r5, #0]
 8003e84:	039b      	lsls	r3, r3, #14
 8003e86:	d4a0      	bmi.n	8003dca <HAL_RCC_OscConfig+0xa>
 8003e88:	f000 fa68 	bl	800435c <HAL_GetTick>
 8003e8c:	1b80      	subs	r0, r0, r6
 8003e8e:	42b8      	cmp	r0, r7
 8003e90:	d9f7      	bls.n	8003e82 <HAL_RCC_OscConfig+0xc2>
 8003e92:	2003      	movs	r0, #3
 8003e94:	e7e8      	b.n	8003e68 <HAL_RCC_OscConfig+0xa8>
 8003e96:	f000 fa61 	bl	800435c <HAL_GetTick>
 8003e9a:	4d7a      	ldr	r5, [pc, #488]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003e9c:	4606      	mov	r6, r0
 8003e9e:	f241 3788 	movw	r7, #5000	; 0x1388
 8003ea2:	682b      	ldr	r3, [r5, #0]
 8003ea4:	0398      	lsls	r0, r3, #14
 8003ea6:	d590      	bpl.n	8003dca <HAL_RCC_OscConfig+0xa>
 8003ea8:	f000 fa58 	bl	800435c <HAL_GetTick>
 8003eac:	1b80      	subs	r0, r0, r6
 8003eae:	42b8      	cmp	r0, r7
 8003eb0:	d9f7      	bls.n	8003ea2 <HAL_RCC_OscConfig+0xe2>
 8003eb2:	e7ee      	b.n	8003e92 <HAL_RCC_OscConfig+0xd2>
 8003eb4:	4b73      	ldr	r3, [pc, #460]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003eb6:	689a      	ldr	r2, [r3, #8]
 8003eb8:	f012 0f0c 	tst.w	r2, #12
 8003ebc:	d007      	beq.n	8003ece <HAL_RCC_OscConfig+0x10e>
 8003ebe:	689a      	ldr	r2, [r3, #8]
 8003ec0:	f002 020c 	and.w	r2, r2, #12
 8003ec4:	2a08      	cmp	r2, #8
 8003ec6:	d116      	bne.n	8003ef6 <HAL_RCC_OscConfig+0x136>
 8003ec8:	685b      	ldr	r3, [r3, #4]
 8003eca:	0259      	lsls	r1, r3, #9
 8003ecc:	d413      	bmi.n	8003ef6 <HAL_RCC_OscConfig+0x136>
 8003ece:	4b6d      	ldr	r3, [pc, #436]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003ed0:	681a      	ldr	r2, [r3, #0]
 8003ed2:	0792      	lsls	r2, r2, #30
 8003ed4:	d502      	bpl.n	8003edc <HAL_RCC_OscConfig+0x11c>
 8003ed6:	68e2      	ldr	r2, [r4, #12]
 8003ed8:	2a01      	cmp	r2, #1
 8003eda:	d1c4      	bne.n	8003e66 <HAL_RCC_OscConfig+0xa6>
 8003edc:	6818      	ldr	r0, [r3, #0]
 8003ede:	22f8      	movs	r2, #248	; 0xf8
 8003ee0:	fa92 f2a2 	rbit	r2, r2
 8003ee4:	fab2 f182 	clz	r1, r2
 8003ee8:	6922      	ldr	r2, [r4, #16]
 8003eea:	408a      	lsls	r2, r1
 8003eec:	f020 01f8 	bic.w	r1, r0, #248	; 0xf8
 8003ef0:	430a      	orrs	r2, r1
 8003ef2:	601a      	str	r2, [r3, #0]
 8003ef4:	e76c      	b.n	8003dd0 <HAL_RCC_OscConfig+0x10>
 8003ef6:	68e2      	ldr	r2, [r4, #12]
 8003ef8:	4b66      	ldr	r3, [pc, #408]	; (8004094 <HAL_RCC_OscConfig+0x2d4>)
 8003efa:	b1da      	cbz	r2, 8003f34 <HAL_RCC_OscConfig+0x174>
 8003efc:	2201      	movs	r2, #1
 8003efe:	601a      	str	r2, [r3, #0]
 8003f00:	f000 fa2c 	bl	800435c <HAL_GetTick>
 8003f04:	4d5f      	ldr	r5, [pc, #380]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003f06:	4606      	mov	r6, r0
 8003f08:	682b      	ldr	r3, [r5, #0]
 8003f0a:	079b      	lsls	r3, r3, #30
 8003f0c:	d50c      	bpl.n	8003f28 <HAL_RCC_OscConfig+0x168>
 8003f0e:	6829      	ldr	r1, [r5, #0]
 8003f10:	23f8      	movs	r3, #248	; 0xf8
 8003f12:	fa93 f3a3 	rbit	r3, r3
 8003f16:	fab3 f283 	clz	r2, r3
 8003f1a:	6923      	ldr	r3, [r4, #16]
 8003f1c:	4093      	lsls	r3, r2
 8003f1e:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 8003f22:	4313      	orrs	r3, r2
 8003f24:	602b      	str	r3, [r5, #0]
 8003f26:	e753      	b.n	8003dd0 <HAL_RCC_OscConfig+0x10>
 8003f28:	f000 fa18 	bl	800435c <HAL_GetTick>
 8003f2c:	1b80      	subs	r0, r0, r6
 8003f2e:	2802      	cmp	r0, #2
 8003f30:	d9ea      	bls.n	8003f08 <HAL_RCC_OscConfig+0x148>
 8003f32:	e7ae      	b.n	8003e92 <HAL_RCC_OscConfig+0xd2>
 8003f34:	601a      	str	r2, [r3, #0]
 8003f36:	f000 fa11 	bl	800435c <HAL_GetTick>
 8003f3a:	4d52      	ldr	r5, [pc, #328]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003f3c:	4606      	mov	r6, r0
 8003f3e:	682b      	ldr	r3, [r5, #0]
 8003f40:	079f      	lsls	r7, r3, #30
 8003f42:	f57f af45 	bpl.w	8003dd0 <HAL_RCC_OscConfig+0x10>
 8003f46:	f000 fa09 	bl	800435c <HAL_GetTick>
 8003f4a:	1b80      	subs	r0, r0, r6
 8003f4c:	2802      	cmp	r0, #2
 8003f4e:	d9f6      	bls.n	8003f3e <HAL_RCC_OscConfig+0x17e>
 8003f50:	e79f      	b.n	8003e92 <HAL_RCC_OscConfig+0xd2>
 8003f52:	6962      	ldr	r2, [r4, #20]
 8003f54:	4b50      	ldr	r3, [pc, #320]	; (8004098 <HAL_RCC_OscConfig+0x2d8>)
 8003f56:	b17a      	cbz	r2, 8003f78 <HAL_RCC_OscConfig+0x1b8>
 8003f58:	2201      	movs	r2, #1
 8003f5a:	601a      	str	r2, [r3, #0]
 8003f5c:	f000 f9fe 	bl	800435c <HAL_GetTick>
 8003f60:	4d48      	ldr	r5, [pc, #288]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003f62:	4606      	mov	r6, r0
 8003f64:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8003f66:	0798      	lsls	r0, r3, #30
 8003f68:	f53f af36 	bmi.w	8003dd8 <HAL_RCC_OscConfig+0x18>
 8003f6c:	f000 f9f6 	bl	800435c <HAL_GetTick>
 8003f70:	1b80      	subs	r0, r0, r6
 8003f72:	2802      	cmp	r0, #2
 8003f74:	d9f6      	bls.n	8003f64 <HAL_RCC_OscConfig+0x1a4>
 8003f76:	e78c      	b.n	8003e92 <HAL_RCC_OscConfig+0xd2>
 8003f78:	601a      	str	r2, [r3, #0]
 8003f7a:	f000 f9ef 	bl	800435c <HAL_GetTick>
 8003f7e:	4d41      	ldr	r5, [pc, #260]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003f80:	4606      	mov	r6, r0
 8003f82:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8003f84:	0799      	lsls	r1, r3, #30
 8003f86:	f57f af27 	bpl.w	8003dd8 <HAL_RCC_OscConfig+0x18>
 8003f8a:	f000 f9e7 	bl	800435c <HAL_GetTick>
 8003f8e:	1b80      	subs	r0, r0, r6
 8003f90:	2802      	cmp	r0, #2
 8003f92:	d9f6      	bls.n	8003f82 <HAL_RCC_OscConfig+0x1c2>
 8003f94:	e77d      	b.n	8003e92 <HAL_RCC_OscConfig+0xd2>
 8003f96:	f000 f9e1 	bl	800435c <HAL_GetTick>
 8003f9a:	1b80      	subs	r0, r0, r6
 8003f9c:	2802      	cmp	r0, #2
 8003f9e:	f67f af32 	bls.w	8003e06 <HAL_RCC_OscConfig+0x46>
 8003fa2:	e776      	b.n	8003e92 <HAL_RCC_OscConfig+0xd2>
 8003fa4:	f000 f9da 	bl	800435c <HAL_GetTick>
 8003fa8:	1b80      	subs	r0, r0, r6
 8003faa:	42b8      	cmp	r0, r7
 8003fac:	f67f af3c 	bls.w	8003e28 <HAL_RCC_OscConfig+0x68>
 8003fb0:	e76f      	b.n	8003e92 <HAL_RCC_OscConfig+0xd2>
 8003fb2:	f000 f9d3 	bl	800435c <HAL_GetTick>
 8003fb6:	4d33      	ldr	r5, [pc, #204]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003fb8:	4606      	mov	r6, r0
 8003fba:	f241 3788 	movw	r7, #5000	; 0x1388
 8003fbe:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8003fc0:	0798      	lsls	r0, r3, #30
 8003fc2:	f57f af35 	bpl.w	8003e30 <HAL_RCC_OscConfig+0x70>
 8003fc6:	f000 f9c9 	bl	800435c <HAL_GetTick>
 8003fca:	1b80      	subs	r0, r0, r6
 8003fcc:	42b8      	cmp	r0, r7
 8003fce:	d9f6      	bls.n	8003fbe <HAL_RCC_OscConfig+0x1fe>
 8003fd0:	e75f      	b.n	8003e92 <HAL_RCC_OscConfig+0xd2>
 8003fd2:	4d2c      	ldr	r5, [pc, #176]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8003fd4:	68ab      	ldr	r3, [r5, #8]
 8003fd6:	f003 030c 	and.w	r3, r3, #12
 8003fda:	2b08      	cmp	r3, #8
 8003fdc:	f43f af43 	beq.w	8003e66 <HAL_RCC_OscConfig+0xa6>
 8003fe0:	4e2e      	ldr	r6, [pc, #184]	; (800409c <HAL_RCC_OscConfig+0x2dc>)
 8003fe2:	2300      	movs	r3, #0
 8003fe4:	2a02      	cmp	r2, #2
 8003fe6:	6033      	str	r3, [r6, #0]
 8003fe8:	d13e      	bne.n	8004068 <HAL_RCC_OscConfig+0x2a8>
 8003fea:	f000 f9b7 	bl	800435c <HAL_GetTick>
 8003fee:	4607      	mov	r7, r0
 8003ff0:	682b      	ldr	r3, [r5, #0]
 8003ff2:	0199      	lsls	r1, r3, #6
 8003ff4:	d432      	bmi.n	800405c <HAL_RCC_OscConfig+0x29c>
 8003ff6:	f647 77c0 	movw	r7, #32704	; 0x7fc0
 8003ffa:	fa97 f7a7 	rbit	r7, r7
 8003ffe:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8004002:	fab7 f787 	clz	r7, r7
 8004006:	fa92 f2a2 	rbit	r2, r2
 800400a:	f04f 6170 	mov.w	r1, #251658240	; 0xf000000
 800400e:	fab2 f082 	clz	r0, r2
 8004012:	fa91 f1a1 	rbit	r1, r1
 8004016:	6a22      	ldr	r2, [r4, #32]
 8004018:	69e3      	ldr	r3, [r4, #28]
 800401a:	4313      	orrs	r3, r2
 800401c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800401e:	fa02 f707 	lsl.w	r7, r2, r7
 8004022:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8004024:	0852      	lsrs	r2, r2, #1
 8004026:	3a01      	subs	r2, #1
 8004028:	4082      	lsls	r2, r0
 800402a:	433b      	orrs	r3, r7
 800402c:	4313      	orrs	r3, r2
 800402e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8004030:	4c14      	ldr	r4, [pc, #80]	; (8004084 <HAL_RCC_OscConfig+0x2c4>)
 8004032:	fab1 f181 	clz	r1, r1
 8004036:	fa02 f101 	lsl.w	r1, r2, r1
 800403a:	430b      	orrs	r3, r1
 800403c:	606b      	str	r3, [r5, #4]
 800403e:	2301      	movs	r3, #1
 8004040:	6033      	str	r3, [r6, #0]
 8004042:	f000 f98b 	bl	800435c <HAL_GetTick>
 8004046:	4605      	mov	r5, r0
 8004048:	6823      	ldr	r3, [r4, #0]
 800404a:	019a      	lsls	r2, r3, #6
 800404c:	f53f aef4 	bmi.w	8003e38 <HAL_RCC_OscConfig+0x78>
 8004050:	f000 f984 	bl	800435c <HAL_GetTick>
 8004054:	1b40      	subs	r0, r0, r5
 8004056:	2802      	cmp	r0, #2
 8004058:	d9f6      	bls.n	8004048 <HAL_RCC_OscConfig+0x288>
 800405a:	e71a      	b.n	8003e92 <HAL_RCC_OscConfig+0xd2>
 800405c:	f000 f97e 	bl	800435c <HAL_GetTick>
 8004060:	1bc0      	subs	r0, r0, r7
 8004062:	2802      	cmp	r0, #2
 8004064:	d9c4      	bls.n	8003ff0 <HAL_RCC_OscConfig+0x230>
 8004066:	e714      	b.n	8003e92 <HAL_RCC_OscConfig+0xd2>
 8004068:	f000 f978 	bl	800435c <HAL_GetTick>
 800406c:	4604      	mov	r4, r0
 800406e:	682b      	ldr	r3, [r5, #0]
 8004070:	019b      	lsls	r3, r3, #6
 8004072:	f57f aee1 	bpl.w	8003e38 <HAL_RCC_OscConfig+0x78>
 8004076:	f000 f971 	bl	800435c <HAL_GetTick>
 800407a:	1b00      	subs	r0, r0, r4
 800407c:	2802      	cmp	r0, #2
 800407e:	d9f6      	bls.n	800406e <HAL_RCC_OscConfig+0x2ae>
 8004080:	e707      	b.n	8003e92 <HAL_RCC_OscConfig+0xd2>
 8004082:	bf00      	nop
 8004084:	40023800 	.word	0x40023800
 8004088:	40007000 	.word	0x40007000
 800408c:	40023870 	.word	0x40023870
 8004090:	40023802 	.word	0x40023802
 8004094:	42470000 	.word	0x42470000
 8004098:	42470e80 	.word	0x42470e80
 800409c:	42470060 	.word	0x42470060

080040a0 <HAL_RCC_GetSysClockFreq>:
 80040a0:	4a19      	ldr	r2, [pc, #100]	; (8004108 <HAL_RCC_GetSysClockFreq+0x68>)
 80040a2:	6893      	ldr	r3, [r2, #8]
 80040a4:	f003 030c 	and.w	r3, r3, #12
 80040a8:	2b04      	cmp	r3, #4
 80040aa:	b510      	push	{r4, lr}
 80040ac:	d003      	beq.n	80040b6 <HAL_RCC_GetSysClockFreq+0x16>
 80040ae:	2b08      	cmp	r3, #8
 80040b0:	d003      	beq.n	80040ba <HAL_RCC_GetSysClockFreq+0x1a>
 80040b2:	4816      	ldr	r0, [pc, #88]	; (800410c <HAL_RCC_GetSysClockFreq+0x6c>)
 80040b4:	bd10      	pop	{r4, pc}
 80040b6:	4816      	ldr	r0, [pc, #88]	; (8004110 <HAL_RCC_GetSysClockFreq+0x70>)
 80040b8:	bd10      	pop	{r4, pc}
 80040ba:	6851      	ldr	r1, [r2, #4]
 80040bc:	6853      	ldr	r3, [r2, #4]
 80040be:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 80040c2:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 80040c6:	f647 74c0 	movw	r4, #32704	; 0x7fc0
 80040ca:	6853      	ldr	r3, [r2, #4]
 80040cc:	fa94 f0a4 	rbit	r0, r4
 80040d0:	fab0 f080 	clz	r0, r0
 80040d4:	ea03 0304 	and.w	r3, r3, r4
 80040d8:	fa23 f300 	lsr.w	r3, r3, r0
 80040dc:	bf14      	ite	ne
 80040de:	480c      	ldrne	r0, [pc, #48]	; (8004110 <HAL_RCC_GetSysClockFreq+0x70>)
 80040e0:	480a      	ldreq	r0, [pc, #40]	; (800410c <HAL_RCC_GetSysClockFreq+0x6c>)
 80040e2:	fbb0 f0f1 	udiv	r0, r0, r1
 80040e6:	4358      	muls	r0, r3
 80040e8:	4b07      	ldr	r3, [pc, #28]	; (8004108 <HAL_RCC_GetSysClockFreq+0x68>)
 80040ea:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 80040ee:	685b      	ldr	r3, [r3, #4]
 80040f0:	fa92 f2a2 	rbit	r2, r2
 80040f4:	fab2 f282 	clz	r2, r2
 80040f8:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80040fc:	40d3      	lsrs	r3, r2
 80040fe:	3301      	adds	r3, #1
 8004100:	005b      	lsls	r3, r3, #1
 8004102:	fbb0 f0f3 	udiv	r0, r0, r3
 8004106:	bd10      	pop	{r4, pc}
 8004108:	40023800 	.word	0x40023800
 800410c:	00f42400 	.word	0x00f42400
 8004110:	007a1200 	.word	0x007a1200

08004114 <HAL_RCC_ClockConfig>:
 8004114:	4b56      	ldr	r3, [pc, #344]	; (8004270 <HAL_RCC_ClockConfig+0x15c>)
 8004116:	681a      	ldr	r2, [r3, #0]
 8004118:	f002 020f 	and.w	r2, r2, #15
 800411c:	428a      	cmp	r2, r1
 800411e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004122:	4605      	mov	r5, r0
 8004124:	460e      	mov	r6, r1
 8004126:	d330      	bcc.n	800418a <HAL_RCC_ClockConfig+0x76>
 8004128:	682a      	ldr	r2, [r5, #0]
 800412a:	0794      	lsls	r4, r2, #30
 800412c:	d437      	bmi.n	800419e <HAL_RCC_ClockConfig+0x8a>
 800412e:	07d0      	lsls	r0, r2, #31
 8004130:	d43d      	bmi.n	80041ae <HAL_RCC_ClockConfig+0x9a>
 8004132:	4b4f      	ldr	r3, [pc, #316]	; (8004270 <HAL_RCC_ClockConfig+0x15c>)
 8004134:	681a      	ldr	r2, [r3, #0]
 8004136:	f002 020f 	and.w	r2, r2, #15
 800413a:	4296      	cmp	r6, r2
 800413c:	f0c0 8088 	bcc.w	8004250 <HAL_RCC_ClockConfig+0x13c>
 8004140:	682a      	ldr	r2, [r5, #0]
 8004142:	0751      	lsls	r1, r2, #29
 8004144:	f100 808c 	bmi.w	8004260 <HAL_RCC_ClockConfig+0x14c>
 8004148:	0713      	lsls	r3, r2, #28
 800414a:	d507      	bpl.n	800415c <HAL_RCC_ClockConfig+0x48>
 800414c:	4a49      	ldr	r2, [pc, #292]	; (8004274 <HAL_RCC_ClockConfig+0x160>)
 800414e:	6929      	ldr	r1, [r5, #16]
 8004150:	6893      	ldr	r3, [r2, #8]
 8004152:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8004156:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800415a:	6093      	str	r3, [r2, #8]
 800415c:	f7ff ffa0 	bl	80040a0 <HAL_RCC_GetSysClockFreq>
 8004160:	4b44      	ldr	r3, [pc, #272]	; (8004274 <HAL_RCC_ClockConfig+0x160>)
 8004162:	22f0      	movs	r2, #240	; 0xf0
 8004164:	689b      	ldr	r3, [r3, #8]
 8004166:	fa92 f2a2 	rbit	r2, r2
 800416a:	fab2 f282 	clz	r2, r2
 800416e:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004172:	40d3      	lsrs	r3, r2
 8004174:	4a40      	ldr	r2, [pc, #256]	; (8004278 <HAL_RCC_ClockConfig+0x164>)
 8004176:	5cd3      	ldrb	r3, [r2, r3]
 8004178:	40d8      	lsrs	r0, r3
 800417a:	4b40      	ldr	r3, [pc, #256]	; (800427c <HAL_RCC_ClockConfig+0x168>)
 800417c:	6018      	str	r0, [r3, #0]
 800417e:	200f      	movs	r0, #15
 8004180:	f7fe fc20 	bl	80029c4 <HAL_InitTick>
 8004184:	2000      	movs	r0, #0
 8004186:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800418a:	b2ca      	uxtb	r2, r1
 800418c:	701a      	strb	r2, [r3, #0]
 800418e:	681b      	ldr	r3, [r3, #0]
 8004190:	f003 030f 	and.w	r3, r3, #15
 8004194:	4299      	cmp	r1, r3
 8004196:	d0c7      	beq.n	8004128 <HAL_RCC_ClockConfig+0x14>
 8004198:	2001      	movs	r0, #1
 800419a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800419e:	4935      	ldr	r1, [pc, #212]	; (8004274 <HAL_RCC_ClockConfig+0x160>)
 80041a0:	68a8      	ldr	r0, [r5, #8]
 80041a2:	688b      	ldr	r3, [r1, #8]
 80041a4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80041a8:	4303      	orrs	r3, r0
 80041aa:	608b      	str	r3, [r1, #8]
 80041ac:	e7bf      	b.n	800412e <HAL_RCC_ClockConfig+0x1a>
 80041ae:	686a      	ldr	r2, [r5, #4]
 80041b0:	4b30      	ldr	r3, [pc, #192]	; (8004274 <HAL_RCC_ClockConfig+0x160>)
 80041b2:	2a01      	cmp	r2, #1
 80041b4:	d11e      	bne.n	80041f4 <HAL_RCC_ClockConfig+0xe0>
 80041b6:	681b      	ldr	r3, [r3, #0]
 80041b8:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80041bc:	d0ec      	beq.n	8004198 <HAL_RCC_ClockConfig+0x84>
 80041be:	4c2d      	ldr	r4, [pc, #180]	; (8004274 <HAL_RCC_ClockConfig+0x160>)
 80041c0:	68a3      	ldr	r3, [r4, #8]
 80041c2:	f023 0303 	bic.w	r3, r3, #3
 80041c6:	4313      	orrs	r3, r2
 80041c8:	60a3      	str	r3, [r4, #8]
 80041ca:	f000 f8c7 	bl	800435c <HAL_GetTick>
 80041ce:	686b      	ldr	r3, [r5, #4]
 80041d0:	2b01      	cmp	r3, #1
 80041d2:	4607      	mov	r7, r0
 80041d4:	f241 3888 	movw	r8, #5000	; 0x1388
 80041d8:	d116      	bne.n	8004208 <HAL_RCC_ClockConfig+0xf4>
 80041da:	68a3      	ldr	r3, [r4, #8]
 80041dc:	f003 030c 	and.w	r3, r3, #12
 80041e0:	2b04      	cmp	r3, #4
 80041e2:	d0a6      	beq.n	8004132 <HAL_RCC_ClockConfig+0x1e>
 80041e4:	f000 f8ba 	bl	800435c <HAL_GetTick>
 80041e8:	1bc0      	subs	r0, r0, r7
 80041ea:	4540      	cmp	r0, r8
 80041ec:	d9f5      	bls.n	80041da <HAL_RCC_ClockConfig+0xc6>
 80041ee:	2003      	movs	r0, #3
 80041f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80041f4:	1e91      	subs	r1, r2, #2
 80041f6:	2901      	cmp	r1, #1
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	d802      	bhi.n	8004202 <HAL_RCC_ClockConfig+0xee>
 80041fc:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8004200:	e7dc      	b.n	80041bc <HAL_RCC_ClockConfig+0xa8>
 8004202:	f013 0f02 	tst.w	r3, #2
 8004206:	e7d9      	b.n	80041bc <HAL_RCC_ClockConfig+0xa8>
 8004208:	2b02      	cmp	r3, #2
 800420a:	d10a      	bne.n	8004222 <HAL_RCC_ClockConfig+0x10e>
 800420c:	68a3      	ldr	r3, [r4, #8]
 800420e:	f003 030c 	and.w	r3, r3, #12
 8004212:	2b08      	cmp	r3, #8
 8004214:	d08d      	beq.n	8004132 <HAL_RCC_ClockConfig+0x1e>
 8004216:	f000 f8a1 	bl	800435c <HAL_GetTick>
 800421a:	1bc0      	subs	r0, r0, r7
 800421c:	4540      	cmp	r0, r8
 800421e:	d9f5      	bls.n	800420c <HAL_RCC_ClockConfig+0xf8>
 8004220:	e7e5      	b.n	80041ee <HAL_RCC_ClockConfig+0xda>
 8004222:	2b03      	cmp	r3, #3
 8004224:	d10f      	bne.n	8004246 <HAL_RCC_ClockConfig+0x132>
 8004226:	68a3      	ldr	r3, [r4, #8]
 8004228:	f003 030c 	and.w	r3, r3, #12
 800422c:	2b0c      	cmp	r3, #12
 800422e:	d080      	beq.n	8004132 <HAL_RCC_ClockConfig+0x1e>
 8004230:	f000 f894 	bl	800435c <HAL_GetTick>
 8004234:	1bc0      	subs	r0, r0, r7
 8004236:	4540      	cmp	r0, r8
 8004238:	d9f5      	bls.n	8004226 <HAL_RCC_ClockConfig+0x112>
 800423a:	e7d8      	b.n	80041ee <HAL_RCC_ClockConfig+0xda>
 800423c:	f000 f88e 	bl	800435c <HAL_GetTick>
 8004240:	1bc0      	subs	r0, r0, r7
 8004242:	4540      	cmp	r0, r8
 8004244:	d8d3      	bhi.n	80041ee <HAL_RCC_ClockConfig+0xda>
 8004246:	68a3      	ldr	r3, [r4, #8]
 8004248:	f013 0f0c 	tst.w	r3, #12
 800424c:	d1f6      	bne.n	800423c <HAL_RCC_ClockConfig+0x128>
 800424e:	e770      	b.n	8004132 <HAL_RCC_ClockConfig+0x1e>
 8004250:	b2f2      	uxtb	r2, r6
 8004252:	701a      	strb	r2, [r3, #0]
 8004254:	681b      	ldr	r3, [r3, #0]
 8004256:	f003 030f 	and.w	r3, r3, #15
 800425a:	429e      	cmp	r6, r3
 800425c:	d19c      	bne.n	8004198 <HAL_RCC_ClockConfig+0x84>
 800425e:	e76f      	b.n	8004140 <HAL_RCC_ClockConfig+0x2c>
 8004260:	4904      	ldr	r1, [pc, #16]	; (8004274 <HAL_RCC_ClockConfig+0x160>)
 8004262:	68e8      	ldr	r0, [r5, #12]
 8004264:	688b      	ldr	r3, [r1, #8]
 8004266:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800426a:	4303      	orrs	r3, r0
 800426c:	608b      	str	r3, [r1, #8]
 800426e:	e76b      	b.n	8004148 <HAL_RCC_ClockConfig+0x34>
 8004270:	40023c00 	.word	0x40023c00
 8004274:	40023800 	.word	0x40023800
 8004278:	08005ea0 	.word	0x08005ea0
 800427c:	200001bc 	.word	0x200001bc

08004280 <HAL_RCC_GetPCLK1Freq>:
 8004280:	4b08      	ldr	r3, [pc, #32]	; (80042a4 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004282:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 8004286:	689b      	ldr	r3, [r3, #8]
 8004288:	fa92 f2a2 	rbit	r2, r2
 800428c:	fab2 f282 	clz	r2, r2
 8004290:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8004294:	40d3      	lsrs	r3, r2
 8004296:	4a04      	ldr	r2, [pc, #16]	; (80042a8 <HAL_RCC_GetPCLK1Freq+0x28>)
 8004298:	5cd3      	ldrb	r3, [r2, r3]
 800429a:	4a04      	ldr	r2, [pc, #16]	; (80042ac <HAL_RCC_GetPCLK1Freq+0x2c>)
 800429c:	6810      	ldr	r0, [r2, #0]
 800429e:	40d8      	lsrs	r0, r3
 80042a0:	4770      	bx	lr
 80042a2:	bf00      	nop
 80042a4:	40023800 	.word	0x40023800
 80042a8:	08005ea0 	.word	0x08005ea0
 80042ac:	200001bc 	.word	0x200001bc

080042b0 <HAL_RCC_GetPCLK2Freq>:
 80042b0:	4b08      	ldr	r3, [pc, #32]	; (80042d4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80042b2:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 80042b6:	689b      	ldr	r3, [r3, #8]
 80042b8:	fa92 f2a2 	rbit	r2, r2
 80042bc:	fab2 f282 	clz	r2, r2
 80042c0:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 80042c4:	40d3      	lsrs	r3, r2
 80042c6:	4a04      	ldr	r2, [pc, #16]	; (80042d8 <HAL_RCC_GetPCLK2Freq+0x28>)
 80042c8:	5cd3      	ldrb	r3, [r2, r3]
 80042ca:	4a04      	ldr	r2, [pc, #16]	; (80042dc <HAL_RCC_GetPCLK2Freq+0x2c>)
 80042cc:	6810      	ldr	r0, [r2, #0]
 80042ce:	40d8      	lsrs	r0, r3
 80042d0:	4770      	bx	lr
 80042d2:	bf00      	nop
 80042d4:	40023800 	.word	0x40023800
 80042d8:	08005ea0 	.word	0x08005ea0
 80042dc:	200001bc 	.word	0x200001bc

080042e0 <HAL_RCC_GetClockConfig>:
 80042e0:	230f      	movs	r3, #15
 80042e2:	6003      	str	r3, [r0, #0]
 80042e4:	4b0b      	ldr	r3, [pc, #44]	; (8004314 <HAL_RCC_GetClockConfig+0x34>)
 80042e6:	689a      	ldr	r2, [r3, #8]
 80042e8:	f002 0203 	and.w	r2, r2, #3
 80042ec:	6042      	str	r2, [r0, #4]
 80042ee:	689a      	ldr	r2, [r3, #8]
 80042f0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80042f4:	6082      	str	r2, [r0, #8]
 80042f6:	689a      	ldr	r2, [r3, #8]
 80042f8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80042fc:	60c2      	str	r2, [r0, #12]
 80042fe:	689b      	ldr	r3, [r3, #8]
 8004300:	08db      	lsrs	r3, r3, #3
 8004302:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8004306:	6103      	str	r3, [r0, #16]
 8004308:	4b03      	ldr	r3, [pc, #12]	; (8004318 <HAL_RCC_GetClockConfig+0x38>)
 800430a:	681b      	ldr	r3, [r3, #0]
 800430c:	f003 030f 	and.w	r3, r3, #15
 8004310:	600b      	str	r3, [r1, #0]
 8004312:	4770      	bx	lr
 8004314:	40023800 	.word	0x40023800
 8004318:	40023c00 	.word	0x40023c00

0800431c <HAL_Init>:
 800431c:	b508      	push	{r3, lr}
 800431e:	4b0a      	ldr	r3, [pc, #40]	; (8004348 <HAL_Init+0x2c>)
 8004320:	681a      	ldr	r2, [r3, #0]
 8004322:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004326:	601a      	str	r2, [r3, #0]
 8004328:	681a      	ldr	r2, [r3, #0]
 800432a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800432e:	601a      	str	r2, [r3, #0]
 8004330:	681a      	ldr	r2, [r3, #0]
 8004332:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004336:	601a      	str	r2, [r3, #0]
 8004338:	200f      	movs	r0, #15
 800433a:	f7fe fb43 	bl	80029c4 <HAL_InitTick>
 800433e:	f7ff fb59 	bl	80039f4 <HAL_MspInit>
 8004342:	2000      	movs	r0, #0
 8004344:	bd08      	pop	{r3, pc}
 8004346:	bf00      	nop
 8004348:	40023c00 	.word	0x40023c00

0800434c <HAL_IncTick>:
 800434c:	4a02      	ldr	r2, [pc, #8]	; (8004358 <HAL_IncTick+0xc>)
 800434e:	6813      	ldr	r3, [r2, #0]
 8004350:	3301      	adds	r3, #1
 8004352:	6013      	str	r3, [r2, #0]
 8004354:	4770      	bx	lr
 8004356:	bf00      	nop
 8004358:	20002828 	.word	0x20002828

0800435c <HAL_GetTick>:
 800435c:	4b01      	ldr	r3, [pc, #4]	; (8004364 <HAL_GetTick+0x8>)
 800435e:	6818      	ldr	r0, [r3, #0]
 8004360:	4770      	bx	lr
 8004362:	bf00      	nop
 8004364:	20002828 	.word	0x20002828

08004368 <mbed::Timer::start()>:
 8004368:	b510      	push	{r4, lr}
 800436a:	4604      	mov	r4, r0
 800436c:	f7fd f83e 	bl	80013ec <core_util_critical_section_enter>
 8004370:	6823      	ldr	r3, [r4, #0]
 8004372:	b92b      	cbnz	r3, 8004380 <mbed::Timer::start()+0x18>
 8004374:	68e0      	ldr	r0, [r4, #12]
 8004376:	f7fc ffc8 	bl	800130a <ticker_read>
 800437a:	2301      	movs	r3, #1
 800437c:	6060      	str	r0, [r4, #4]
 800437e:	6023      	str	r3, [r4, #0]
 8004380:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004384:	f7fd b848 	b.w	8001418 <core_util_critical_section_exit>

08004388 <mbed::Timer::slicetime()>:
 8004388:	b538      	push	{r3, r4, r5, lr}
 800438a:	4605      	mov	r5, r0
 800438c:	f7fd f82e 	bl	80013ec <core_util_critical_section_enter>
 8004390:	682c      	ldr	r4, [r5, #0]
 8004392:	b124      	cbz	r4, 800439e <mbed::Timer::slicetime()+0x16>
 8004394:	68e8      	ldr	r0, [r5, #12]
 8004396:	f7fc ffb8 	bl	800130a <ticker_read>
 800439a:	686c      	ldr	r4, [r5, #4]
 800439c:	1b04      	subs	r4, r0, r4
 800439e:	f7fd f83b 	bl	8001418 <core_util_critical_section_exit>
 80043a2:	4620      	mov	r0, r4
 80043a4:	bd38      	pop	{r3, r4, r5, pc}

080043a6 <mbed::Timer::read_us()>:
 80043a6:	b538      	push	{r3, r4, r5, lr}
 80043a8:	4605      	mov	r5, r0
 80043aa:	f7fd f81f 	bl	80013ec <core_util_critical_section_enter>
 80043ae:	4628      	mov	r0, r5
 80043b0:	68ac      	ldr	r4, [r5, #8]
 80043b2:	f7ff ffe9 	bl	8004388 <mbed::Timer::slicetime()>
 80043b6:	4404      	add	r4, r0
 80043b8:	f7fd f82e 	bl	8001418 <core_util_critical_section_exit>
 80043bc:	4620      	mov	r0, r4
 80043be:	bd38      	pop	{r3, r4, r5, pc}

080043c0 <mbed::Timer::read_ms()>:
 80043c0:	b508      	push	{r3, lr}
 80043c2:	f7ff fff0 	bl	80043a6 <mbed::Timer::read_us()>
 80043c6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80043ca:	fb90 f0f3 	sdiv	r0, r0, r3
 80043ce:	bd08      	pop	{r3, pc}

080043d0 <mbed::Timer::reset()>:
 80043d0:	b510      	push	{r4, lr}
 80043d2:	4604      	mov	r4, r0
 80043d4:	f7fd f80a 	bl	80013ec <core_util_critical_section_enter>
 80043d8:	68e0      	ldr	r0, [r4, #12]
 80043da:	f7fc ff96 	bl	800130a <ticker_read>
 80043de:	2300      	movs	r3, #0
 80043e0:	6060      	str	r0, [r4, #4]
 80043e2:	60a3      	str	r3, [r4, #8]
 80043e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80043e8:	f7fd b816 	b.w	8001418 <core_util_critical_section_exit>

080043ec <mbed::Timer::Timer()>:
 80043ec:	2300      	movs	r3, #0
 80043ee:	b510      	push	{r4, lr}
 80043f0:	6003      	str	r3, [r0, #0]
 80043f2:	6043      	str	r3, [r0, #4]
 80043f4:	6083      	str	r3, [r0, #8]
 80043f6:	4604      	mov	r4, r0
 80043f8:	f7fc ff5a 	bl	80012b0 <get_us_ticker_data>
 80043fc:	60e0      	str	r0, [r4, #12]
 80043fe:	4620      	mov	r0, r4
 8004400:	f7ff ffe6 	bl	80043d0 <mbed::Timer::reset()>
 8004404:	4620      	mov	r0, r4
 8004406:	bd10      	pop	{r4, pc}

08004408 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 8004408:	6803      	ldr	r3, [r0, #0]
 800440a:	4718      	bx	r3

0800440c <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 800440c:	b108      	cbz	r0, 8004412 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 800440e:	680b      	ldr	r3, [r1, #0]
 8004410:	6003      	str	r3, [r0, #0]
 8004412:	4770      	bx	lr

08004414 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 8004414:	4770      	bx	lr

08004416 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 8004416:	4288      	cmp	r0, r1
 8004418:	b538      	push	{r3, r4, r5, lr}
 800441a:	4604      	mov	r4, r0
 800441c:	460d      	mov	r5, r1
 800441e:	d00a      	beq.n	8004436 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004420:	f7fc fd5b 	bl	8000eda <mbed::Callback<void ()>::~Callback()>
 8004424:	b13c      	cbz	r4, 8004436 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004426:	68eb      	ldr	r3, [r5, #12]
 8004428:	b11b      	cbz	r3, 8004432 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 800442a:	685b      	ldr	r3, [r3, #4]
 800442c:	4629      	mov	r1, r5
 800442e:	4620      	mov	r0, r4
 8004430:	4798      	blx	r3
 8004432:	68eb      	ldr	r3, [r5, #12]
 8004434:	60e3      	str	r3, [r4, #12]
 8004436:	4620      	mov	r0, r4
 8004438:	bd38      	pop	{r3, r4, r5, pc}

0800443a <mbed::RawSerial::lock()>:
 800443a:	4770      	bx	lr

0800443c <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 800443c:	b510      	push	{r4, lr}
 800443e:	4604      	mov	r4, r0
 8004440:	f000 f84e 	bl	80044e0 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8004444:	4b01      	ldr	r3, [pc, #4]	; (800444c <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8004446:	6023      	str	r3, [r4, #0]
 8004448:	4620      	mov	r0, r4
 800444a:	bd10      	pop	{r4, pc}
 800444c:	08005ec4 	.word	0x08005ec4

08004450 <mbed::RawSerial::~RawSerial()>:
 8004450:	b510      	push	{r4, lr}
 8004452:	4b03      	ldr	r3, [pc, #12]	; (8004460 <mbed::RawSerial::~RawSerial()+0x10>)
 8004454:	6003      	str	r3, [r0, #0]
 8004456:	4604      	mov	r4, r0
 8004458:	f7fc fd82 	bl	8000f60 <mbed::SerialBase::~SerialBase()>
 800445c:	4620      	mov	r0, r4
 800445e:	bd10      	pop	{r4, pc}
 8004460:	08005ec4 	.word	0x08005ec4

08004464 <mbed::RawSerial::~RawSerial()>:
 8004464:	b510      	push	{r4, lr}
 8004466:	4604      	mov	r4, r0
 8004468:	f7ff fff2 	bl	8004450 <mbed::RawSerial::~RawSerial()>
 800446c:	4620      	mov	r0, r4
 800446e:	f000 fa47 	bl	8004900 <operator delete(void*)>
 8004472:	4620      	mov	r0, r4
 8004474:	bd10      	pop	{r4, pc}

08004476 <mbed::donothing()>:
 8004476:	4770      	bx	lr

08004478 <mbed::SerialBase::lock()>:
 8004478:	4770      	bx	lr

0800447a <mbed::SerialBase::unlock()>:
 800447a:	4770      	bx	lr

0800447c <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 800447c:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8004480:	f102 0098 	add.w	r0, r2, #152	; 0x98
 8004484:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 8004488:	681b      	ldr	r3, [r3, #0]
 800448a:	4718      	bx	r3

0800448c <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 800448c:	b410      	push	{r4}
 800448e:	b180      	cbz	r0, 80044b2 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8004490:	6814      	ldr	r4, [r2, #0]
 8004492:	6853      	ldr	r3, [r2, #4]
 8004494:	b90c      	cbnz	r4, 800449a <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 8004496:	07da      	lsls	r2, r3, #31
 8004498:	d50b      	bpl.n	80044b2 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 800449a:	f013 0f01 	tst.w	r3, #1
 800449e:	ea4f 0363 	mov.w	r3, r3, asr #1
 80044a2:	bf1c      	itt	ne
 80044a4:	58c2      	ldrne	r2, [r0, r3]
 80044a6:	5914      	ldrne	r4, [r2, r4]
 80044a8:	4418      	add	r0, r3
 80044aa:	4623      	mov	r3, r4
 80044ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80044b0:	4718      	bx	r3
 80044b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80044b6:	4770      	bx	lr

080044b8 <mbed::SerialBase::baud(int)>:
 80044b8:	b570      	push	{r4, r5, r6, lr}
 80044ba:	4605      	mov	r5, r0
 80044bc:	4604      	mov	r4, r0
 80044be:	f855 3b4c 	ldr.w	r3, [r5], #76
 80044c2:	460e      	mov	r6, r1
 80044c4:	681b      	ldr	r3, [r3, #0]
 80044c6:	4798      	blx	r3
 80044c8:	4628      	mov	r0, r5
 80044ca:	4631      	mov	r1, r6
 80044cc:	f7fe fed0 	bl	8003270 <serial_baud>
 80044d0:	6823      	ldr	r3, [r4, #0]
 80044d2:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 80044d6:	4620      	mov	r0, r4
 80044d8:	685b      	ldr	r3, [r3, #4]
 80044da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80044de:	4718      	bx	r3

080044e0 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 80044e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80044e4:	b087      	sub	sp, #28
 80044e6:	2500      	movs	r5, #0
 80044e8:	4691      	mov	r9, r2
 80044ea:	9500      	str	r5, [sp, #0]
 80044ec:	4602      	mov	r2, r0
 80044ee:	9501      	str	r5, [sp, #4]
 80044f0:	4604      	mov	r4, r0
 80044f2:	4688      	mov	r8, r1
 80044f4:	461f      	mov	r7, r3
 80044f6:	e89d 0003 	ldmia.w	sp, {r0, r1}
 80044fa:	4b27      	ldr	r3, [pc, #156]	; (8004598 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 80044fc:	f842 3b08 	str.w	r3, [r2], #8
 8004500:	4b26      	ldr	r3, [pc, #152]	; (800459c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 8004502:	e882 0003 	stmia.w	r2, {r0, r1}
 8004506:	6123      	str	r3, [r4, #16]
 8004508:	f248 0307 	movw	r3, #32775	; 0x8007
 800450c:	6163      	str	r3, [r4, #20]
 800450e:	4b24      	ldr	r3, [pc, #144]	; (80045a0 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 8004510:	61e5      	str	r5, [r4, #28]
 8004512:	61a4      	str	r4, [r4, #24]
 8004514:	6222      	str	r2, [r4, #32]
 8004516:	6263      	str	r3, [r4, #36]	; 0x24
 8004518:	f3bf 8f6f 	isb	sy
 800451c:	f3bf 8f4f 	dsb	sy
 8004520:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8004524:	224c      	movs	r2, #76	; 0x4c
 8004526:	6365      	str	r5, [r4, #52]	; 0x34
 8004528:	6465      	str	r5, [r4, #68]	; 0x44
 800452a:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 800452e:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 8004532:	4630      	mov	r0, r6
 8004534:	f000 fd39 	bl	8004faa <memset>
 8004538:	a902      	add	r1, sp, #8
 800453a:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 800453e:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 8004542:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 8004546:	4d17      	ldr	r5, [pc, #92]	; (80045a4 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 8004548:	4f17      	ldr	r7, [pc, #92]	; (80045a8 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 800454a:	9702      	str	r7, [sp, #8]
 800454c:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8004550:	9505      	str	r5, [sp, #20]
 8004552:	f7ff ff60 	bl	8004416 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004556:	a802      	add	r0, sp, #8
 8004558:	f7fc fcbf 	bl	8000eda <mbed::Callback<void ()>::~Callback()>
 800455c:	a902      	add	r1, sp, #8
 800455e:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8004562:	9702      	str	r7, [sp, #8]
 8004564:	9505      	str	r5, [sp, #20]
 8004566:	f7ff ff56 	bl	8004416 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800456a:	a802      	add	r0, sp, #8
 800456c:	f7fc fcb5 	bl	8000eda <mbed::Callback<void ()>::~Callback()>
 8004570:	464a      	mov	r2, r9
 8004572:	4641      	mov	r1, r8
 8004574:	4630      	mov	r0, r6
 8004576:	f7fe fddd 	bl	8003134 <serial_init>
 800457a:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 800457e:	4630      	mov	r0, r6
 8004580:	f7fe fe76 	bl	8003270 <serial_baud>
 8004584:	4630      	mov	r0, r6
 8004586:	4622      	mov	r2, r4
 8004588:	4908      	ldr	r1, [pc, #32]	; (80045ac <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 800458a:	f7fe fe75 	bl	8003278 <serial_irq_handler>
 800458e:	4620      	mov	r0, r4
 8004590:	b007      	add	sp, #28
 8004592:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004596:	bf00      	nop
 8004598:	08005edc 	.word	0x08005edc
 800459c:	e890a001 	.word	0xe890a001
 80045a0:	0800448d 	.word	0x0800448d
 80045a4:	08005eb0 	.word	0x08005eb0
 80045a8:	08004477 	.word	0x08004477
 80045ac:	0800447d 	.word	0x0800447d

080045b0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 80045b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80045b4:	4605      	mov	r5, r0
 80045b6:	4688      	mov	r8, r1
 80045b8:	f855 3b4c 	ldr.w	r3, [r5], #76
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	4604      	mov	r4, r0
 80045c0:	4616      	mov	r6, r2
 80045c2:	4798      	blx	r3
 80045c4:	f7fc ff12 	bl	80013ec <core_util_critical_section_enter>
 80045c8:	f8d8 700c 	ldr.w	r7, [r8, #12]
 80045cc:	0130      	lsls	r0, r6, #4
 80045ce:	b197      	cbz	r7, 80045f6 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 80045d0:	3098      	adds	r0, #152	; 0x98
 80045d2:	4641      	mov	r1, r8
 80045d4:	4420      	add	r0, r4
 80045d6:	f7ff ff1e 	bl	8004416 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80045da:	2201      	movs	r2, #1
 80045dc:	4631      	mov	r1, r6
 80045de:	4628      	mov	r0, r5
 80045e0:	f7fe fe56 	bl	8003290 <serial_irq_set>
 80045e4:	f7fc ff18 	bl	8001418 <core_util_critical_section_exit>
 80045e8:	6823      	ldr	r3, [r4, #0]
 80045ea:	4620      	mov	r0, r4
 80045ec:	685b      	ldr	r3, [r3, #4]
 80045ee:	4798      	blx	r3
 80045f0:	b004      	add	sp, #16
 80045f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80045f6:	4b07      	ldr	r3, [pc, #28]	; (8004614 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 80045f8:	9300      	str	r3, [sp, #0]
 80045fa:	3098      	adds	r0, #152	; 0x98
 80045fc:	4b06      	ldr	r3, [pc, #24]	; (8004618 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 80045fe:	9303      	str	r3, [sp, #12]
 8004600:	4669      	mov	r1, sp
 8004602:	4420      	add	r0, r4
 8004604:	f7ff ff07 	bl	8004416 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004608:	4668      	mov	r0, sp
 800460a:	f7fc fc66 	bl	8000eda <mbed::Callback<void ()>::~Callback()>
 800460e:	463a      	mov	r2, r7
 8004610:	e7e4      	b.n	80045dc <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 8004612:	bf00      	nop
 8004614:	08004477 	.word	0x08004477
 8004618:	08005eb0 	.word	0x08005eb0

0800461c <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 800461c:	b538      	push	{r3, r4, r5, lr}
 800461e:	4604      	mov	r4, r0
 8004620:	b148      	cbz	r0, 8004636 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8004622:	3058      	adds	r0, #88	; 0x58
 8004624:	42a0      	cmp	r0, r4
 8004626:	d006      	beq.n	8004636 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8004628:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 800462c:	3814      	subs	r0, #20
 800462e:	f7fc fc8e 	bl	8000f4e <mbed::Callback<void (int)>::~Callback()>
 8004632:	4628      	mov	r0, r5
 8004634:	e7f6      	b.n	8004624 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 8004636:	4620      	mov	r0, r4
 8004638:	bd38      	pop	{r3, r4, r5, pc}
	...

0800463c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 800463c:	b570      	push	{r4, r5, r6, lr}
 800463e:	4c0e      	ldr	r4, [pc, #56]	; (8004678 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8004640:	4620      	mov	r0, r4
 8004642:	2500      	movs	r5, #0
 8004644:	2628      	movs	r6, #40	; 0x28
 8004646:	4632      	mov	r2, r6
 8004648:	4629      	mov	r1, r5
 800464a:	f840 5b04 	str.w	r5, [r0], #4
 800464e:	f000 fcac 	bl	8004faa <memset>
 8004652:	4632      	mov	r2, r6
 8004654:	4629      	mov	r1, r5
 8004656:	f104 0030 	add.w	r0, r4, #48	; 0x30
 800465a:	62e5      	str	r5, [r4, #44]	; 0x2c
 800465c:	f000 fca5 	bl	8004faa <memset>
 8004660:	65a5      	str	r5, [r4, #88]	; 0x58
 8004662:	4620      	mov	r0, r4
 8004664:	65e5      	str	r5, [r4, #92]	; 0x5c
 8004666:	4a05      	ldr	r2, [pc, #20]	; (800467c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8004668:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 800466c:	4904      	ldr	r1, [pc, #16]	; (8004680 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 800466e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004672:	f000 b927 	b.w	80048c4 <__aeabi_atexit>
 8004676:	bf00      	nop
 8004678:	20001b80 	.word	0x20001b80
 800467c:	20000194 	.word	0x20000194
 8004680:	0800461d 	.word	0x0800461d

08004684 <__wrap__malloc_r>:
 8004684:	f000 bce8 	b.w	8005058 <_malloc_r>

08004688 <__wrap__realloc_r>:
 8004688:	f000 bd44 	b.w	8005114 <_realloc_r>

0800468c <__wrap__free_r>:
 800468c:	f000 bc96 	b.w	8004fbc <_free_r>

08004690 <wait_us>:
 8004690:	b570      	push	{r4, r5, r6, lr}
 8004692:	4605      	mov	r5, r0
 8004694:	f7fe faf2 	bl	8002c7c <us_ticker_read>
 8004698:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 800469c:	fb95 f4f4 	sdiv	r4, r5, r4
 80046a0:	2c00      	cmp	r4, #0
 80046a2:	4606      	mov	r6, r0
 80046a4:	dd02      	ble.n	80046ac <wait_us+0x1c>
 80046a6:	f7fc fe9b 	bl	80013e0 <core_util_are_interrupts_enabled>
 80046aa:	b928      	cbnz	r0, 80046b8 <wait_us+0x28>
 80046ac:	f7fe fae6 	bl	8002c7c <us_ticker_read>
 80046b0:	1b80      	subs	r0, r0, r6
 80046b2:	42a8      	cmp	r0, r5
 80046b4:	d3fa      	bcc.n	80046ac <wait_us+0x1c>
 80046b6:	bd70      	pop	{r4, r5, r6, pc}
 80046b8:	4620      	mov	r0, r4
 80046ba:	f000 f92b 	bl	8004914 <rtos::Thread::wait(unsigned long)>
 80046be:	e7f5      	b.n	80046ac <wait_us+0x1c>

080046c0 <wait_ms>:
 80046c0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80046c4:	4358      	muls	r0, r3
 80046c6:	f7ff bfe3 	b.w	8004690 <wait_us>
	...

080046cc <init_serial()>:
 80046cc:	b508      	push	{r3, lr}
 80046ce:	4b08      	ldr	r3, [pc, #32]	; (80046f0 <init_serial()+0x24>)
 80046d0:	681b      	ldr	r3, [r3, #0]
 80046d2:	b95b      	cbnz	r3, 80046ec <init_serial()+0x20>
 80046d4:	2102      	movs	r1, #2
 80046d6:	4807      	ldr	r0, [pc, #28]	; (80046f4 <init_serial()+0x28>)
 80046d8:	2203      	movs	r2, #3
 80046da:	f7fe fd2b 	bl	8003134 <serial_init>
 80046de:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 80046e2:	4804      	ldr	r0, [pc, #16]	; (80046f4 <init_serial()+0x28>)
 80046e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80046e8:	f7fe bdc2 	b.w	8003270 <serial_baud>
 80046ec:	bd08      	pop	{r3, pc}
 80046ee:	bf00      	nop
 80046f0:	20001960 	.word	0x20001960
 80046f4:	200027dc 	.word	0x200027dc

080046f8 <_close>:
 80046f8:	2802      	cmp	r0, #2
 80046fa:	b510      	push	{r4, lr}
 80046fc:	4604      	mov	r4, r0
 80046fe:	dc01      	bgt.n	8004704 <_close+0xc>
 8004700:	2000      	movs	r0, #0
 8004702:	bd10      	pop	{r4, pc}
 8004704:	f000 fa0e 	bl	8004b24 <__errno>
 8004708:	2309      	movs	r3, #9
 800470a:	6003      	str	r3, [r0, #0]
 800470c:	3c03      	subs	r4, #3
 800470e:	4b09      	ldr	r3, [pc, #36]	; (8004734 <_close+0x3c>)
 8004710:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004714:	2200      	movs	r2, #0
 8004716:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800471a:	b140      	cbz	r0, 800472e <_close+0x36>
 800471c:	6803      	ldr	r3, [r0, #0]
 800471e:	691b      	ldr	r3, [r3, #16]
 8004720:	4798      	blx	r3
 8004722:	1e04      	subs	r4, r0, #0
 8004724:	daec      	bge.n	8004700 <_close+0x8>
 8004726:	f000 f9fd 	bl	8004b24 <__errno>
 800472a:	4264      	negs	r4, r4
 800472c:	6004      	str	r4, [r0, #0]
 800472e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004732:	bd10      	pop	{r4, pc}
 8004734:	20001be4 	.word	0x20001be4

08004738 <_write>:
 8004738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800473a:	4605      	mov	r5, r0
 800473c:	460e      	mov	r6, r1
 800473e:	4614      	mov	r4, r2
 8004740:	f000 f9f0 	bl	8004b24 <__errno>
 8004744:	2309      	movs	r3, #9
 8004746:	2d02      	cmp	r5, #2
 8004748:	6003      	str	r3, [r0, #0]
 800474a:	dc0f      	bgt.n	800476c <_write+0x34>
 800474c:	4b12      	ldr	r3, [pc, #72]	; (8004798 <_write+0x60>)
 800474e:	681b      	ldr	r3, [r3, #0]
 8004750:	b90b      	cbnz	r3, 8004756 <_write+0x1e>
 8004752:	f7ff ffbb 	bl	80046cc <init_serial()>
 8004756:	4635      	mov	r5, r6
 8004758:	1937      	adds	r7, r6, r4
 800475a:	4e10      	ldr	r6, [pc, #64]	; (800479c <_write+0x64>)
 800475c:	42bd      	cmp	r5, r7
 800475e:	d015      	beq.n	800478c <_write+0x54>
 8004760:	f815 1b01 	ldrb.w	r1, [r5], #1
 8004764:	4630      	mov	r0, r6
 8004766:	f7fe fe05 	bl	8003374 <serial_putc>
 800476a:	e7f7      	b.n	800475c <_write+0x24>
 800476c:	3d03      	subs	r5, #3
 800476e:	4b0c      	ldr	r3, [pc, #48]	; (80047a0 <_write+0x68>)
 8004770:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004774:	b160      	cbz	r0, 8004790 <_write+0x58>
 8004776:	6803      	ldr	r3, [r0, #0]
 8004778:	4622      	mov	r2, r4
 800477a:	68db      	ldr	r3, [r3, #12]
 800477c:	4631      	mov	r1, r6
 800477e:	4798      	blx	r3
 8004780:	1e04      	subs	r4, r0, #0
 8004782:	da03      	bge.n	800478c <_write+0x54>
 8004784:	f000 f9ce 	bl	8004b24 <__errno>
 8004788:	4263      	negs	r3, r4
 800478a:	6003      	str	r3, [r0, #0]
 800478c:	4620      	mov	r0, r4
 800478e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004790:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8004794:	e7fa      	b.n	800478c <_write+0x54>
 8004796:	bf00      	nop
 8004798:	20001960 	.word	0x20001960
 800479c:	200027dc 	.word	0x200027dc
 80047a0:	20001be4 	.word	0x20001be4

080047a4 <_read>:
 80047a4:	b570      	push	{r4, r5, r6, lr}
 80047a6:	4604      	mov	r4, r0
 80047a8:	460d      	mov	r5, r1
 80047aa:	4616      	mov	r6, r2
 80047ac:	f000 f9ba 	bl	8004b24 <__errno>
 80047b0:	2309      	movs	r3, #9
 80047b2:	2c02      	cmp	r4, #2
 80047b4:	6003      	str	r3, [r0, #0]
 80047b6:	dc0b      	bgt.n	80047d0 <_read+0x2c>
 80047b8:	4b0f      	ldr	r3, [pc, #60]	; (80047f8 <_read+0x54>)
 80047ba:	681b      	ldr	r3, [r3, #0]
 80047bc:	b90b      	cbnz	r3, 80047c2 <_read+0x1e>
 80047be:	f7ff ff85 	bl	80046cc <init_serial()>
 80047c2:	480e      	ldr	r0, [pc, #56]	; (80047fc <_read+0x58>)
 80047c4:	f7fe fdba 	bl	800333c <serial_getc>
 80047c8:	2401      	movs	r4, #1
 80047ca:	7028      	strb	r0, [r5, #0]
 80047cc:	4620      	mov	r0, r4
 80047ce:	bd70      	pop	{r4, r5, r6, pc}
 80047d0:	3c03      	subs	r4, #3
 80047d2:	4b0b      	ldr	r3, [pc, #44]	; (8004800 <_read+0x5c>)
 80047d4:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80047d8:	b158      	cbz	r0, 80047f2 <_read+0x4e>
 80047da:	6803      	ldr	r3, [r0, #0]
 80047dc:	4632      	mov	r2, r6
 80047de:	689b      	ldr	r3, [r3, #8]
 80047e0:	4629      	mov	r1, r5
 80047e2:	4798      	blx	r3
 80047e4:	1e04      	subs	r4, r0, #0
 80047e6:	daf1      	bge.n	80047cc <_read+0x28>
 80047e8:	f000 f99c 	bl	8004b24 <__errno>
 80047ec:	4263      	negs	r3, r4
 80047ee:	6003      	str	r3, [r0, #0]
 80047f0:	e7ec      	b.n	80047cc <_read+0x28>
 80047f2:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80047f6:	e7e9      	b.n	80047cc <_read+0x28>
 80047f8:	20001960 	.word	0x20001960
 80047fc:	200027dc 	.word	0x200027dc
 8004800:	20001be4 	.word	0x20001be4

08004804 <_lseek>:
 8004804:	b570      	push	{r4, r5, r6, lr}
 8004806:	4604      	mov	r4, r0
 8004808:	460d      	mov	r5, r1
 800480a:	4616      	mov	r6, r2
 800480c:	f000 f98a 	bl	8004b24 <__errno>
 8004810:	2309      	movs	r3, #9
 8004812:	2c02      	cmp	r4, #2
 8004814:	6003      	str	r3, [r0, #0]
 8004816:	dd0b      	ble.n	8004830 <_lseek+0x2c>
 8004818:	3c03      	subs	r4, #3
 800481a:	4b08      	ldr	r3, [pc, #32]	; (800483c <_lseek+0x38>)
 800481c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004820:	b140      	cbz	r0, 8004834 <_lseek+0x30>
 8004822:	6803      	ldr	r3, [r0, #0]
 8004824:	4632      	mov	r2, r6
 8004826:	4629      	mov	r1, r5
 8004828:	69db      	ldr	r3, [r3, #28]
 800482a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800482e:	4718      	bx	r3
 8004830:	2000      	movs	r0, #0
 8004832:	bd70      	pop	{r4, r5, r6, pc}
 8004834:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004838:	bd70      	pop	{r4, r5, r6, pc}
 800483a:	bf00      	nop
 800483c:	20001be4 	.word	0x20001be4

08004840 <software_init_hook>:
 8004840:	b508      	push	{r3, lr}
 8004842:	f7fe fda9 	bl	8003398 <mbed_sdk_init>
 8004846:	f7fc fe79 	bl	800153c <software_init_hook_rtos>
 800484a:	bd08      	pop	{r3, pc}

0800484c <mbed_main>:
 800484c:	4770      	bx	lr

0800484e <__wrap_main>:
 800484e:	b508      	push	{r3, lr}
 8004850:	f7ff fffc 	bl	800484c <mbed_main>
 8004854:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004858:	f7fc ba7a 	b.w	8000d50 <main>

0800485c <_sbrk>:
 800485c:	4a0c      	ldr	r2, [pc, #48]	; (8004890 <_sbrk+0x34>)
 800485e:	6813      	ldr	r3, [r2, #0]
 8004860:	b510      	push	{r4, lr}
 8004862:	4418      	add	r0, r3
 8004864:	f3ef 8108 	mrs	r1, MSP
 8004868:	4288      	cmp	r0, r1
 800486a:	d305      	bcc.n	8004878 <_sbrk+0x1c>
 800486c:	4b09      	ldr	r3, [pc, #36]	; (8004894 <_sbrk+0x38>)
 800486e:	220c      	movs	r2, #12
 8004870:	601a      	str	r2, [r3, #0]
 8004872:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004876:	bd10      	pop	{r4, pc}
 8004878:	4907      	ldr	r1, [pc, #28]	; (8004898 <_sbrk+0x3c>)
 800487a:	680c      	ldr	r4, [r1, #0]
 800487c:	b124      	cbz	r4, 8004888 <_sbrk+0x2c>
 800487e:	4907      	ldr	r1, [pc, #28]	; (800489c <_sbrk+0x40>)
 8004880:	6809      	ldr	r1, [r1, #0]
 8004882:	4421      	add	r1, r4
 8004884:	4288      	cmp	r0, r1
 8004886:	d2f1      	bcs.n	800486c <_sbrk+0x10>
 8004888:	6010      	str	r0, [r2, #0]
 800488a:	4618      	mov	r0, r3
 800488c:	bd10      	pop	{r4, pc}
 800488e:	bf00      	nop
 8004890:	200001c0 	.word	0x200001c0
 8004894:	2000282c 	.word	0x2000282c
 8004898:	20001ce4 	.word	0x20001ce4
 800489c:	20001ce8 	.word	0x20001ce8

080048a0 <_exit>:
 80048a0:	4c07      	ldr	r4, [pc, #28]	; (80048c0 <_exit+0x20>)
 80048a2:	b508      	push	{r3, lr}
 80048a4:	6823      	ldr	r3, [r4, #0]
 80048a6:	4605      	mov	r5, r0
 80048a8:	6898      	ldr	r0, [r3, #8]
 80048aa:	f000 f9f3 	bl	8004c94 <fflush>
 80048ae:	6823      	ldr	r3, [r4, #0]
 80048b0:	68d8      	ldr	r0, [r3, #12]
 80048b2:	f000 f9ef 	bl	8004c94 <fflush>
 80048b6:	b10d      	cbz	r5, 80048bc <_exit+0x1c>
 80048b8:	f7fc fdc7 	bl	800144a <mbed_die>
 80048bc:	e7fe      	b.n	80048bc <_exit+0x1c>
 80048be:	bf00      	nop
 80048c0:	200001c4 	.word	0x200001c4

080048c4 <__aeabi_atexit>:
 80048c4:	2001      	movs	r0, #1
 80048c6:	4770      	bx	lr

080048c8 <__wrap_exit>:
 80048c8:	b508      	push	{r3, lr}
 80048ca:	f7ff ffe9 	bl	80048a0 <_exit>

080048ce <__malloc_lock>:
 80048ce:	b508      	push	{r3, lr}
 80048d0:	f7fc fe42 	bl	8001558 <__rtos_malloc_lock>
 80048d4:	bd08      	pop	{r3, pc}

080048d6 <__malloc_unlock>:
 80048d6:	b508      	push	{r3, lr}
 80048d8:	f7fc fe46 	bl	8001568 <__rtos_malloc_unlock>
 80048dc:	bd08      	pop	{r3, pc}
	...

080048e0 <operator new[](unsigned int)>:
 80048e0:	b510      	push	{r4, lr}
 80048e2:	f000 fad7 	bl	8004e94 <malloc>
 80048e6:	4604      	mov	r4, r0
 80048e8:	b910      	cbnz	r0, 80048f0 <operator new[](unsigned int)+0x10>
 80048ea:	4802      	ldr	r0, [pc, #8]	; (80048f4 <operator new[](unsigned int)+0x14>)
 80048ec:	f7fc fda8 	bl	8001440 <error>
 80048f0:	4620      	mov	r0, r4
 80048f2:	bd10      	pop	{r4, pc}
 80048f4:	08005eec 	.word	0x08005eec

080048f8 <operator delete[](void*)>:
 80048f8:	b108      	cbz	r0, 80048fe <operator delete[](void*)+0x6>
 80048fa:	f000 bad3 	b.w	8004ea4 <free>
 80048fe:	4770      	bx	lr

08004900 <operator delete(void*)>:
 8004900:	f7ff bffa 	b.w	80048f8 <operator delete[](void*)>

08004904 <thread_terminate_hook>:
 8004904:	4b02      	ldr	r3, [pc, #8]	; (8004910 <thread_terminate_hook+0xc>)
 8004906:	681b      	ldr	r3, [r3, #0]
 8004908:	b103      	cbz	r3, 800490c <thread_terminate_hook+0x8>
 800490a:	4718      	bx	r3
 800490c:	4770      	bx	lr
 800490e:	bf00      	nop
 8004910:	20001cec 	.word	0x20001cec

08004914 <rtos::Thread::wait(unsigned long)>:
 8004914:	f7fd bb9c 	b.w	8002050 <osDelay>

08004918 <rtos::Mutex::Mutex()>:
 8004918:	b538      	push	{r3, r4, r5, lr}
 800491a:	f100 0508 	add.w	r5, r0, #8
 800491e:	4604      	mov	r4, r0
 8004920:	2210      	movs	r2, #16
 8004922:	2100      	movs	r1, #0
 8004924:	4628      	mov	r0, r5
 8004926:	f000 fb40 	bl	8004faa <memset>
 800492a:	4620      	mov	r0, r4
 800492c:	f840 5f04 	str.w	r5, [r0, #4]!
 8004930:	f7fd fbf2 	bl	8002118 <osMutexCreate>
 8004934:	6020      	str	r0, [r4, #0]
 8004936:	b910      	cbnz	r0, 800493e <rtos::Mutex::Mutex()+0x26>
 8004938:	4802      	ldr	r0, [pc, #8]	; (8004944 <rtos::Mutex::Mutex()+0x2c>)
 800493a:	f7fc fd81 	bl	8001440 <error>
 800493e:	4620      	mov	r0, r4
 8004940:	bd38      	pop	{r3, r4, r5, pc}
 8004942:	bf00      	nop
 8004944:	08005f0b 	.word	0x08005f0b

08004948 <rtos::Mutex::lock(unsigned long)>:
 8004948:	6800      	ldr	r0, [r0, #0]
 800494a:	f7fd bc03 	b.w	8002154 <osMutexWait>

0800494e <rtos::Mutex::unlock()>:
 800494e:	6800      	ldr	r0, [r0, #0]
 8004950:	f7fd bc28 	b.w	80021a4 <osMutexRelease>

08004954 <rt_set_PSP>:
 8004954:	f380 8809 	msr	PSP, r0
 8004958:	4770      	bx	lr

0800495a <rt_get_PSP>:
 800495a:	f3ef 8009 	mrs	r0, PSP
 800495e:	4770      	bx	lr

08004960 <os_set_env>:
 8004960:	4668      	mov	r0, sp
 8004962:	f380 8809 	msr	PSP, r0
 8004966:	485a      	ldr	r0, [pc, #360]	; (8004ad0 <OS_Tick_Handler+0x10>)
 8004968:	7800      	ldrb	r0, [r0, #0]
 800496a:	07c0      	lsls	r0, r0, #31
 800496c:	bf14      	ite	ne
 800496e:	2002      	movne	r0, #2
 8004970:	2003      	moveq	r0, #3
 8004972:	f380 8814 	msr	CONTROL, r0
 8004976:	4770      	bx	lr

08004978 <_alloc_box>:
 8004978:	f8df c158 	ldr.w	r12, [pc, #344]	; 8004ad4 <OS_Tick_Handler+0x14>
 800497c:	f3ef 8305 	mrs	r3, IPSR
 8004980:	061b      	lsls	r3, r3, #24
 8004982:	bf18      	it	ne
 8004984:	4760      	bxne	r12
 8004986:	f3ef 8314 	mrs	r3, CONTROL
 800498a:	07db      	lsls	r3, r3, #31
 800498c:	bf08      	it	eq
 800498e:	4760      	bxeq	r12
 8004990:	df00      	svc	0
 8004992:	4770      	bx	lr

08004994 <_free_box>:
 8004994:	f8df c140 	ldr.w	r12, [pc, #320]	; 8004ad8 <OS_Tick_Handler+0x18>
 8004998:	f3ef 8305 	mrs	r3, IPSR
 800499c:	061b      	lsls	r3, r3, #24
 800499e:	bf18      	it	ne
 80049a0:	4760      	bxne	r12
 80049a2:	f3ef 8314 	mrs	r3, CONTROL
 80049a6:	07db      	lsls	r3, r3, #31
 80049a8:	bf08      	it	eq
 80049aa:	4760      	bxeq	r12
 80049ac:	df00      	svc	0
 80049ae:	4770      	bx	lr

080049b0 <SVC_Handler>:
 80049b0:	f3ef 8009 	mrs	r0, PSP
 80049b4:	6981      	ldr	r1, [r0, #24]
 80049b6:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 80049ba:	bbe1      	cbnz	r1, 8004a36 <SVC_User>
 80049bc:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 80049c0:	b510      	push	{r4, lr}
 80049c2:	47e0      	blx	r12
 80049c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80049c8:	f3ef 8c09 	mrs	r12, PSP
 80049cc:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 80049d0:	4b42      	ldr	r3, [pc, #264]	; (8004adc <OS_Tick_Handler+0x1c>)
 80049d2:	e893 0006 	ldmia.w	r3, {r1, r2}
 80049d6:	4291      	cmp	r1, r2
 80049d8:	bf08      	it	eq
 80049da:	4770      	bxeq	lr
 80049dc:	b941      	cbnz	r1, 80049f0 <SVC_ContextSave>
 80049de:	f01e 0f10 	tst.w	lr, #16
 80049e2:	d116      	bne.n	8004a12 <SVC_ContextRestore>
 80049e4:	493e      	ldr	r1, [pc, #248]	; (8004ae0 <OS_Tick_Handler+0x20>)
 80049e6:	6808      	ldr	r0, [r1, #0]
 80049e8:	f020 0001 	bic.w	r0, r0, #1
 80049ec:	6008      	str	r0, [r1, #0]
 80049ee:	e010      	b.n	8004a12 <SVC_ContextRestore>

080049f0 <SVC_ContextSave>:
 80049f0:	f01e 0f10 	tst.w	lr, #16
 80049f4:	bf06      	itte	eq
 80049f6:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 80049fa:	2001      	moveq	r0, #1
 80049fc:	2000      	movne	r0, #0
 80049fe:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8004a02:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8004a06:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8004a0a:	b40c      	push	{r2, r3}
 8004a0c:	f7fd f836 	bl	8001a7c <rt_stk_check>
 8004a10:	bc0c      	pop	{r2, r3}

08004a12 <SVC_ContextRestore>:
 8004a12:	601a      	str	r2, [r3, #0]
 8004a14:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8004a18:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8004a1c:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8004a20:	2800      	cmp	r0, #0
 8004a22:	bf0e      	itee	eq
 8004a24:	f06f 0e02 	mvneq.w	lr, #2
 8004a28:	f06f 0e12 	mvnne.w	lr, #18
 8004a2c:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8004a30:	f38c 8809 	msr	PSP, r12

08004a34 <SVC_Exit>:
 8004a34:	4770      	bx	lr

08004a36 <SVC_User>:
 8004a36:	b510      	push	{r4, lr}
 8004a38:	4a2a      	ldr	r2, [pc, #168]	; (8004ae4 <OS_Tick_Handler+0x24>)
 8004a3a:	6812      	ldr	r2, [r2, #0]
 8004a3c:	4291      	cmp	r1, r2
 8004a3e:	d809      	bhi.n	8004a54 <SVC_Done>
 8004a40:	4c29      	ldr	r4, [pc, #164]	; (8004ae8 <OS_Tick_Handler+0x28>)
 8004a42:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 8004a46:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8004a4a:	47a0      	blx	r4
 8004a4c:	f3ef 8c09 	mrs	r12, PSP
 8004a50:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08004a54 <SVC_Done>:
 8004a54:	bd10      	pop	{r4, pc}

08004a56 <PendSV_Handler>:
 8004a56:	b510      	push	{r4, lr}
 8004a58:	f7fc ff9c 	bl	8001994 <rt_pop_req>

08004a5c <Sys_Switch>:
 8004a5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004a60:	4b1e      	ldr	r3, [pc, #120]	; (8004adc <OS_Tick_Handler+0x1c>)
 8004a62:	e893 0006 	ldmia.w	r3, {r1, r2}
 8004a66:	4291      	cmp	r1, r2
 8004a68:	bf08      	it	eq
 8004a6a:	4770      	bxeq	lr
 8004a6c:	f3ef 8c09 	mrs	r12, PSP
 8004a70:	f01e 0f10 	tst.w	lr, #16
 8004a74:	bf06      	itte	eq
 8004a76:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8004a7a:	2001      	moveq	r0, #1
 8004a7c:	2000      	movne	r0, #0
 8004a7e:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8004a82:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8004a86:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8004a8a:	b40c      	push	{r2, r3}
 8004a8c:	f7fc fff6 	bl	8001a7c <rt_stk_check>
 8004a90:	bc0c      	pop	{r2, r3}
 8004a92:	601a      	str	r2, [r3, #0]
 8004a94:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8004a98:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8004a9c:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8004aa0:	2800      	cmp	r0, #0
 8004aa2:	bf0e      	itee	eq
 8004aa4:	f06f 0e02 	mvneq.w	lr, #2
 8004aa8:	f06f 0e12 	mvnne.w	lr, #18
 8004aac:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8004ab0:	f38c 8809 	msr	PSP, r12

08004ab4 <Sys_Exit>:
 8004ab4:	4770      	bx	lr

08004ab6 <SysTick_Handler>:
 8004ab6:	b510      	push	{r4, lr}
 8004ab8:	f7fc ffc2 	bl	8001a40 <rt_systick>
 8004abc:	f7ff bfce 	b.w	8004a5c <Sys_Switch>

08004ac0 <OS_Tick_Handler>:
 8004ac0:	b510      	push	{r4, lr}
 8004ac2:	f7fc ffbb 	bl	8001a3c <os_tick_irqack>
 8004ac6:	f7fc ffbb 	bl	8001a40 <rt_systick>
 8004aca:	f7ff bfc7 	b.w	8004a5c <Sys_Switch>
 8004ace:	0000      	.short	0x0000
 8004ad0:	08005c4a 	.word	0x08005c4a
 8004ad4:	08001aeb 	.word	0x08001aeb
 8004ad8:	08001b05 	.word	0x08001b05
 8004adc:	2000270c 	.word	0x2000270c
 8004ae0:	e000ef34 	.word	0xe000ef34
 8004ae4:	00000000 	.word	0x00000000
 8004ae8:	fffffffc 	.word	0xfffffffc

08004aec <Reset_Handler>:
 8004aec:	f8df d020 	ldr.w	sp, [pc, #32]	; 8004b10 <LoopCopyDataInit+0x14>
 8004af0:	2100      	movs	r1, #0
 8004af2:	e003      	b.n	8004afc <LoopCopyDataInit>

08004af4 <CopyDataInit>:
 8004af4:	4b07      	ldr	r3, [pc, #28]	; (8004b14 <LoopCopyDataInit+0x18>)
 8004af6:	585b      	ldr	r3, [r3, r1]
 8004af8:	5043      	str	r3, [r0, r1]
 8004afa:	3104      	adds	r1, #4

08004afc <LoopCopyDataInit>:
 8004afc:	4806      	ldr	r0, [pc, #24]	; (8004b18 <LoopCopyDataInit+0x1c>)
 8004afe:	4b07      	ldr	r3, [pc, #28]	; (8004b1c <LoopCopyDataInit+0x20>)
 8004b00:	1842      	adds	r2, r0, r1
 8004b02:	429a      	cmp	r2, r3
 8004b04:	d3f6      	bcc.n	8004af4 <CopyDataInit>
 8004b06:	f7fe fd25 	bl	8003554 <SystemInit>
 8004b0a:	f7fc f991 	bl	8000e30 <_start>
 8004b0e:	4770      	bx	lr
 8004b10:	20018000 	.word	0x20018000
 8004b14:	08005fd4 	.word	0x08005fd4
 8004b18:	20000194 	.word	0x20000194
 8004b1c:	2000023c 	.word	0x2000023c

08004b20 <ADC_IRQHandler>:
 8004b20:	e7fe      	b.n	8004b20 <ADC_IRQHandler>
	...

08004b24 <__errno>:
 8004b24:	4b01      	ldr	r3, [pc, #4]	; (8004b2c <__errno+0x8>)
 8004b26:	6818      	ldr	r0, [r3, #0]
 8004b28:	4770      	bx	lr
 8004b2a:	bf00      	nop
 8004b2c:	200001c4 	.word	0x200001c4

08004b30 <__sflush_r>:
 8004b30:	898a      	ldrh	r2, [r1, #12]
 8004b32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b36:	4605      	mov	r5, r0
 8004b38:	0710      	lsls	r0, r2, #28
 8004b3a:	460c      	mov	r4, r1
 8004b3c:	d45a      	bmi.n	8004bf4 <__sflush_r+0xc4>
 8004b3e:	684b      	ldr	r3, [r1, #4]
 8004b40:	2b00      	cmp	r3, #0
 8004b42:	dc05      	bgt.n	8004b50 <__sflush_r+0x20>
 8004b44:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8004b46:	2b00      	cmp	r3, #0
 8004b48:	dc02      	bgt.n	8004b50 <__sflush_r+0x20>
 8004b4a:	2000      	movs	r0, #0
 8004b4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b50:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004b52:	2e00      	cmp	r6, #0
 8004b54:	d0f9      	beq.n	8004b4a <__sflush_r+0x1a>
 8004b56:	2300      	movs	r3, #0
 8004b58:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004b5c:	682f      	ldr	r7, [r5, #0]
 8004b5e:	602b      	str	r3, [r5, #0]
 8004b60:	d033      	beq.n	8004bca <__sflush_r+0x9a>
 8004b62:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004b64:	89a3      	ldrh	r3, [r4, #12]
 8004b66:	075a      	lsls	r2, r3, #29
 8004b68:	d505      	bpl.n	8004b76 <__sflush_r+0x46>
 8004b6a:	6863      	ldr	r3, [r4, #4]
 8004b6c:	1ac0      	subs	r0, r0, r3
 8004b6e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004b70:	b10b      	cbz	r3, 8004b76 <__sflush_r+0x46>
 8004b72:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004b74:	1ac0      	subs	r0, r0, r3
 8004b76:	2300      	movs	r3, #0
 8004b78:	4602      	mov	r2, r0
 8004b7a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004b7c:	6a21      	ldr	r1, [r4, #32]
 8004b7e:	4628      	mov	r0, r5
 8004b80:	47b0      	blx	r6
 8004b82:	1c43      	adds	r3, r0, #1
 8004b84:	89a3      	ldrh	r3, [r4, #12]
 8004b86:	d106      	bne.n	8004b96 <__sflush_r+0x66>
 8004b88:	6829      	ldr	r1, [r5, #0]
 8004b8a:	291d      	cmp	r1, #29
 8004b8c:	d84b      	bhi.n	8004c26 <__sflush_r+0xf6>
 8004b8e:	4a2b      	ldr	r2, [pc, #172]	; (8004c3c <__sflush_r+0x10c>)
 8004b90:	40ca      	lsrs	r2, r1
 8004b92:	07d6      	lsls	r6, r2, #31
 8004b94:	d547      	bpl.n	8004c26 <__sflush_r+0xf6>
 8004b96:	2200      	movs	r2, #0
 8004b98:	6062      	str	r2, [r4, #4]
 8004b9a:	04d9      	lsls	r1, r3, #19
 8004b9c:	6922      	ldr	r2, [r4, #16]
 8004b9e:	6022      	str	r2, [r4, #0]
 8004ba0:	d504      	bpl.n	8004bac <__sflush_r+0x7c>
 8004ba2:	1c42      	adds	r2, r0, #1
 8004ba4:	d101      	bne.n	8004baa <__sflush_r+0x7a>
 8004ba6:	682b      	ldr	r3, [r5, #0]
 8004ba8:	b903      	cbnz	r3, 8004bac <__sflush_r+0x7c>
 8004baa:	6560      	str	r0, [r4, #84]	; 0x54
 8004bac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004bae:	602f      	str	r7, [r5, #0]
 8004bb0:	2900      	cmp	r1, #0
 8004bb2:	d0ca      	beq.n	8004b4a <__sflush_r+0x1a>
 8004bb4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004bb8:	4299      	cmp	r1, r3
 8004bba:	d002      	beq.n	8004bc2 <__sflush_r+0x92>
 8004bbc:	4628      	mov	r0, r5
 8004bbe:	f7ff fd65 	bl	800468c <__wrap__free_r>
 8004bc2:	2000      	movs	r0, #0
 8004bc4:	6360      	str	r0, [r4, #52]	; 0x34
 8004bc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004bca:	6a21      	ldr	r1, [r4, #32]
 8004bcc:	2301      	movs	r3, #1
 8004bce:	4628      	mov	r0, r5
 8004bd0:	47b0      	blx	r6
 8004bd2:	1c41      	adds	r1, r0, #1
 8004bd4:	d1c6      	bne.n	8004b64 <__sflush_r+0x34>
 8004bd6:	682b      	ldr	r3, [r5, #0]
 8004bd8:	2b00      	cmp	r3, #0
 8004bda:	d0c3      	beq.n	8004b64 <__sflush_r+0x34>
 8004bdc:	2b1d      	cmp	r3, #29
 8004bde:	d001      	beq.n	8004be4 <__sflush_r+0xb4>
 8004be0:	2b16      	cmp	r3, #22
 8004be2:	d101      	bne.n	8004be8 <__sflush_r+0xb8>
 8004be4:	602f      	str	r7, [r5, #0]
 8004be6:	e7b0      	b.n	8004b4a <__sflush_r+0x1a>
 8004be8:	89a3      	ldrh	r3, [r4, #12]
 8004bea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004bee:	81a3      	strh	r3, [r4, #12]
 8004bf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004bf4:	690f      	ldr	r7, [r1, #16]
 8004bf6:	2f00      	cmp	r7, #0
 8004bf8:	d0a7      	beq.n	8004b4a <__sflush_r+0x1a>
 8004bfa:	0793      	lsls	r3, r2, #30
 8004bfc:	680e      	ldr	r6, [r1, #0]
 8004bfe:	bf08      	it	eq
 8004c00:	694b      	ldreq	r3, [r1, #20]
 8004c02:	600f      	str	r7, [r1, #0]
 8004c04:	bf18      	it	ne
 8004c06:	2300      	movne	r3, #0
 8004c08:	eba6 0807 	sub.w	r8, r6, r7
 8004c0c:	608b      	str	r3, [r1, #8]
 8004c0e:	f1b8 0f00 	cmp.w	r8, #0
 8004c12:	dd9a      	ble.n	8004b4a <__sflush_r+0x1a>
 8004c14:	4643      	mov	r3, r8
 8004c16:	463a      	mov	r2, r7
 8004c18:	6a21      	ldr	r1, [r4, #32]
 8004c1a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004c1c:	4628      	mov	r0, r5
 8004c1e:	47b0      	blx	r6
 8004c20:	2800      	cmp	r0, #0
 8004c22:	dc07      	bgt.n	8004c34 <__sflush_r+0x104>
 8004c24:	89a3      	ldrh	r3, [r4, #12]
 8004c26:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004c2a:	81a3      	strh	r3, [r4, #12]
 8004c2c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004c30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004c34:	4407      	add	r7, r0
 8004c36:	eba8 0800 	sub.w	r8, r8, r0
 8004c3a:	e7e8      	b.n	8004c0e <__sflush_r+0xde>
 8004c3c:	20400001 	.word	0x20400001

08004c40 <_fflush_r>:
 8004c40:	b538      	push	{r3, r4, r5, lr}
 8004c42:	690b      	ldr	r3, [r1, #16]
 8004c44:	4605      	mov	r5, r0
 8004c46:	460c      	mov	r4, r1
 8004c48:	b1db      	cbz	r3, 8004c82 <_fflush_r+0x42>
 8004c4a:	b118      	cbz	r0, 8004c54 <_fflush_r+0x14>
 8004c4c:	6983      	ldr	r3, [r0, #24]
 8004c4e:	b90b      	cbnz	r3, 8004c54 <_fflush_r+0x14>
 8004c50:	f000 f872 	bl	8004d38 <__sinit>
 8004c54:	4b0c      	ldr	r3, [pc, #48]	; (8004c88 <_fflush_r+0x48>)
 8004c56:	429c      	cmp	r4, r3
 8004c58:	d109      	bne.n	8004c6e <_fflush_r+0x2e>
 8004c5a:	686c      	ldr	r4, [r5, #4]
 8004c5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004c60:	b17b      	cbz	r3, 8004c82 <_fflush_r+0x42>
 8004c62:	4621      	mov	r1, r4
 8004c64:	4628      	mov	r0, r5
 8004c66:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004c6a:	f7ff bf61 	b.w	8004b30 <__sflush_r>
 8004c6e:	4b07      	ldr	r3, [pc, #28]	; (8004c8c <_fflush_r+0x4c>)
 8004c70:	429c      	cmp	r4, r3
 8004c72:	d101      	bne.n	8004c78 <_fflush_r+0x38>
 8004c74:	68ac      	ldr	r4, [r5, #8]
 8004c76:	e7f1      	b.n	8004c5c <_fflush_r+0x1c>
 8004c78:	4b05      	ldr	r3, [pc, #20]	; (8004c90 <_fflush_r+0x50>)
 8004c7a:	429c      	cmp	r4, r3
 8004c7c:	bf08      	it	eq
 8004c7e:	68ec      	ldreq	r4, [r5, #12]
 8004c80:	e7ec      	b.n	8004c5c <_fflush_r+0x1c>
 8004c82:	2000      	movs	r0, #0
 8004c84:	bd38      	pop	{r3, r4, r5, pc}
 8004c86:	bf00      	nop
 8004c88:	08005f50 	.word	0x08005f50
 8004c8c:	08005f70 	.word	0x08005f70
 8004c90:	08005f30 	.word	0x08005f30

08004c94 <fflush>:
 8004c94:	4601      	mov	r1, r0
 8004c96:	b920      	cbnz	r0, 8004ca2 <fflush+0xe>
 8004c98:	4b04      	ldr	r3, [pc, #16]	; (8004cac <fflush+0x18>)
 8004c9a:	4905      	ldr	r1, [pc, #20]	; (8004cb0 <fflush+0x1c>)
 8004c9c:	6818      	ldr	r0, [r3, #0]
 8004c9e:	f000 b8b7 	b.w	8004e10 <_fwalk_reent>
 8004ca2:	4b04      	ldr	r3, [pc, #16]	; (8004cb4 <fflush+0x20>)
 8004ca4:	6818      	ldr	r0, [r3, #0]
 8004ca6:	f7ff bfcb 	b.w	8004c40 <_fflush_r>
 8004caa:	bf00      	nop
 8004cac:	08005f90 	.word	0x08005f90
 8004cb0:	08004c41 	.word	0x08004c41
 8004cb4:	200001c4 	.word	0x200001c4

08004cb8 <_cleanup_r>:
 8004cb8:	4901      	ldr	r1, [pc, #4]	; (8004cc0 <_cleanup_r+0x8>)
 8004cba:	f000 b8a9 	b.w	8004e10 <_fwalk_reent>
 8004cbe:	bf00      	nop
 8004cc0:	08004c41 	.word	0x08004c41

08004cc4 <std.isra.0>:
 8004cc4:	2300      	movs	r3, #0
 8004cc6:	b510      	push	{r4, lr}
 8004cc8:	4604      	mov	r4, r0
 8004cca:	6003      	str	r3, [r0, #0]
 8004ccc:	6043      	str	r3, [r0, #4]
 8004cce:	6083      	str	r3, [r0, #8]
 8004cd0:	8181      	strh	r1, [r0, #12]
 8004cd2:	6643      	str	r3, [r0, #100]	; 0x64
 8004cd4:	81c2      	strh	r2, [r0, #14]
 8004cd6:	6103      	str	r3, [r0, #16]
 8004cd8:	6143      	str	r3, [r0, #20]
 8004cda:	6183      	str	r3, [r0, #24]
 8004cdc:	4619      	mov	r1, r3
 8004cde:	2208      	movs	r2, #8
 8004ce0:	305c      	adds	r0, #92	; 0x5c
 8004ce2:	f000 f962 	bl	8004faa <memset>
 8004ce6:	4b05      	ldr	r3, [pc, #20]	; (8004cfc <std.isra.0+0x38>)
 8004ce8:	6263      	str	r3, [r4, #36]	; 0x24
 8004cea:	4b05      	ldr	r3, [pc, #20]	; (8004d00 <std.isra.0+0x3c>)
 8004cec:	62a3      	str	r3, [r4, #40]	; 0x28
 8004cee:	4b05      	ldr	r3, [pc, #20]	; (8004d04 <std.isra.0+0x40>)
 8004cf0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004cf2:	4b05      	ldr	r3, [pc, #20]	; (8004d08 <std.isra.0+0x44>)
 8004cf4:	6224      	str	r4, [r4, #32]
 8004cf6:	6323      	str	r3, [r4, #48]	; 0x30
 8004cf8:	bd10      	pop	{r4, pc}
 8004cfa:	bf00      	nop
 8004cfc:	080054bd 	.word	0x080054bd
 8004d00:	080054df 	.word	0x080054df
 8004d04:	08005517 	.word	0x08005517
 8004d08:	0800553b 	.word	0x0800553b

08004d0c <__sfmoreglue>:
 8004d0c:	b570      	push	{r4, r5, r6, lr}
 8004d0e:	1e4a      	subs	r2, r1, #1
 8004d10:	2568      	movs	r5, #104	; 0x68
 8004d12:	4355      	muls	r5, r2
 8004d14:	460e      	mov	r6, r1
 8004d16:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8004d1a:	f7ff fcb3 	bl	8004684 <__wrap__malloc_r>
 8004d1e:	4604      	mov	r4, r0
 8004d20:	b140      	cbz	r0, 8004d34 <__sfmoreglue+0x28>
 8004d22:	2100      	movs	r1, #0
 8004d24:	e880 0042 	stmia.w	r0, {r1, r6}
 8004d28:	300c      	adds	r0, #12
 8004d2a:	60a0      	str	r0, [r4, #8]
 8004d2c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8004d30:	f000 f93b 	bl	8004faa <memset>
 8004d34:	4620      	mov	r0, r4
 8004d36:	bd70      	pop	{r4, r5, r6, pc}

08004d38 <__sinit>:
 8004d38:	6983      	ldr	r3, [r0, #24]
 8004d3a:	b510      	push	{r4, lr}
 8004d3c:	4604      	mov	r4, r0
 8004d3e:	bb33      	cbnz	r3, 8004d8e <__sinit+0x56>
 8004d40:	6483      	str	r3, [r0, #72]	; 0x48
 8004d42:	64c3      	str	r3, [r0, #76]	; 0x4c
 8004d44:	6503      	str	r3, [r0, #80]	; 0x50
 8004d46:	4b12      	ldr	r3, [pc, #72]	; (8004d90 <__sinit+0x58>)
 8004d48:	4a12      	ldr	r2, [pc, #72]	; (8004d94 <__sinit+0x5c>)
 8004d4a:	681b      	ldr	r3, [r3, #0]
 8004d4c:	6282      	str	r2, [r0, #40]	; 0x28
 8004d4e:	4298      	cmp	r0, r3
 8004d50:	bf04      	itt	eq
 8004d52:	2301      	moveq	r3, #1
 8004d54:	6183      	streq	r3, [r0, #24]
 8004d56:	f000 f81f 	bl	8004d98 <__sfp>
 8004d5a:	6060      	str	r0, [r4, #4]
 8004d5c:	4620      	mov	r0, r4
 8004d5e:	f000 f81b 	bl	8004d98 <__sfp>
 8004d62:	60a0      	str	r0, [r4, #8]
 8004d64:	4620      	mov	r0, r4
 8004d66:	f000 f817 	bl	8004d98 <__sfp>
 8004d6a:	2200      	movs	r2, #0
 8004d6c:	60e0      	str	r0, [r4, #12]
 8004d6e:	2104      	movs	r1, #4
 8004d70:	6860      	ldr	r0, [r4, #4]
 8004d72:	f7ff ffa7 	bl	8004cc4 <std.isra.0>
 8004d76:	2201      	movs	r2, #1
 8004d78:	2109      	movs	r1, #9
 8004d7a:	68a0      	ldr	r0, [r4, #8]
 8004d7c:	f7ff ffa2 	bl	8004cc4 <std.isra.0>
 8004d80:	2202      	movs	r2, #2
 8004d82:	2112      	movs	r1, #18
 8004d84:	68e0      	ldr	r0, [r4, #12]
 8004d86:	f7ff ff9d 	bl	8004cc4 <std.isra.0>
 8004d8a:	2301      	movs	r3, #1
 8004d8c:	61a3      	str	r3, [r4, #24]
 8004d8e:	bd10      	pop	{r4, pc}
 8004d90:	08005f90 	.word	0x08005f90
 8004d94:	08004cb9 	.word	0x08004cb9

08004d98 <__sfp>:
 8004d98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004d9a:	4b1c      	ldr	r3, [pc, #112]	; (8004e0c <__sfp+0x74>)
 8004d9c:	681e      	ldr	r6, [r3, #0]
 8004d9e:	69b3      	ldr	r3, [r6, #24]
 8004da0:	4607      	mov	r7, r0
 8004da2:	b913      	cbnz	r3, 8004daa <__sfp+0x12>
 8004da4:	4630      	mov	r0, r6
 8004da6:	f7ff ffc7 	bl	8004d38 <__sinit>
 8004daa:	3648      	adds	r6, #72	; 0x48
 8004dac:	68b4      	ldr	r4, [r6, #8]
 8004dae:	6873      	ldr	r3, [r6, #4]
 8004db0:	3b01      	subs	r3, #1
 8004db2:	d503      	bpl.n	8004dbc <__sfp+0x24>
 8004db4:	6833      	ldr	r3, [r6, #0]
 8004db6:	b133      	cbz	r3, 8004dc6 <__sfp+0x2e>
 8004db8:	6836      	ldr	r6, [r6, #0]
 8004dba:	e7f7      	b.n	8004dac <__sfp+0x14>
 8004dbc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004dc0:	b16d      	cbz	r5, 8004dde <__sfp+0x46>
 8004dc2:	3468      	adds	r4, #104	; 0x68
 8004dc4:	e7f4      	b.n	8004db0 <__sfp+0x18>
 8004dc6:	2104      	movs	r1, #4
 8004dc8:	4638      	mov	r0, r7
 8004dca:	f7ff ff9f 	bl	8004d0c <__sfmoreglue>
 8004dce:	6030      	str	r0, [r6, #0]
 8004dd0:	2800      	cmp	r0, #0
 8004dd2:	d1f1      	bne.n	8004db8 <__sfp+0x20>
 8004dd4:	230c      	movs	r3, #12
 8004dd6:	603b      	str	r3, [r7, #0]
 8004dd8:	4604      	mov	r4, r0
 8004dda:	4620      	mov	r0, r4
 8004ddc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004dde:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004de2:	81e3      	strh	r3, [r4, #14]
 8004de4:	2301      	movs	r3, #1
 8004de6:	81a3      	strh	r3, [r4, #12]
 8004de8:	6665      	str	r5, [r4, #100]	; 0x64
 8004dea:	6025      	str	r5, [r4, #0]
 8004dec:	60a5      	str	r5, [r4, #8]
 8004dee:	6065      	str	r5, [r4, #4]
 8004df0:	6125      	str	r5, [r4, #16]
 8004df2:	6165      	str	r5, [r4, #20]
 8004df4:	61a5      	str	r5, [r4, #24]
 8004df6:	2208      	movs	r2, #8
 8004df8:	4629      	mov	r1, r5
 8004dfa:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8004dfe:	f000 f8d4 	bl	8004faa <memset>
 8004e02:	6365      	str	r5, [r4, #52]	; 0x34
 8004e04:	63a5      	str	r5, [r4, #56]	; 0x38
 8004e06:	64a5      	str	r5, [r4, #72]	; 0x48
 8004e08:	64e5      	str	r5, [r4, #76]	; 0x4c
 8004e0a:	e7e6      	b.n	8004dda <__sfp+0x42>
 8004e0c:	08005f90 	.word	0x08005f90

08004e10 <_fwalk_reent>:
 8004e10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004e14:	4680      	mov	r8, r0
 8004e16:	4689      	mov	r9, r1
 8004e18:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8004e1c:	2600      	movs	r6, #0
 8004e1e:	b914      	cbnz	r4, 8004e26 <_fwalk_reent+0x16>
 8004e20:	4630      	mov	r0, r6
 8004e22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004e26:	68a5      	ldr	r5, [r4, #8]
 8004e28:	6867      	ldr	r7, [r4, #4]
 8004e2a:	3f01      	subs	r7, #1
 8004e2c:	d501      	bpl.n	8004e32 <_fwalk_reent+0x22>
 8004e2e:	6824      	ldr	r4, [r4, #0]
 8004e30:	e7f5      	b.n	8004e1e <_fwalk_reent+0xe>
 8004e32:	89ab      	ldrh	r3, [r5, #12]
 8004e34:	2b01      	cmp	r3, #1
 8004e36:	d907      	bls.n	8004e48 <_fwalk_reent+0x38>
 8004e38:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004e3c:	3301      	adds	r3, #1
 8004e3e:	d003      	beq.n	8004e48 <_fwalk_reent+0x38>
 8004e40:	4629      	mov	r1, r5
 8004e42:	4640      	mov	r0, r8
 8004e44:	47c8      	blx	r9
 8004e46:	4306      	orrs	r6, r0
 8004e48:	3568      	adds	r5, #104	; 0x68
 8004e4a:	e7ee      	b.n	8004e2a <_fwalk_reent+0x1a>

08004e4c <__libc_init_array>:
 8004e4c:	b570      	push	{r4, r5, r6, lr}
 8004e4e:	4e0d      	ldr	r6, [pc, #52]	; (8004e84 <__libc_init_array+0x38>)
 8004e50:	4c0d      	ldr	r4, [pc, #52]	; (8004e88 <__libc_init_array+0x3c>)
 8004e52:	1ba4      	subs	r4, r4, r6
 8004e54:	10a4      	asrs	r4, r4, #2
 8004e56:	2500      	movs	r5, #0
 8004e58:	42a5      	cmp	r5, r4
 8004e5a:	d109      	bne.n	8004e70 <__libc_init_array+0x24>
 8004e5c:	4e0b      	ldr	r6, [pc, #44]	; (8004e8c <__libc_init_array+0x40>)
 8004e5e:	4c0c      	ldr	r4, [pc, #48]	; (8004e90 <__libc_init_array+0x44>)
 8004e60:	f000 fd38 	bl	80058d4 <_init>
 8004e64:	1ba4      	subs	r4, r4, r6
 8004e66:	10a4      	asrs	r4, r4, #2
 8004e68:	2500      	movs	r5, #0
 8004e6a:	42a5      	cmp	r5, r4
 8004e6c:	d105      	bne.n	8004e7a <__libc_init_array+0x2e>
 8004e6e:	bd70      	pop	{r4, r5, r6, pc}
 8004e70:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8004e74:	4798      	blx	r3
 8004e76:	3501      	adds	r5, #1
 8004e78:	e7ee      	b.n	8004e58 <__libc_init_array+0xc>
 8004e7a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8004e7e:	4798      	blx	r3
 8004e80:	3501      	adds	r5, #1
 8004e82:	e7f2      	b.n	8004e6a <__libc_init_array+0x1e>
 8004e84:	20000228 	.word	0x20000228
 8004e88:	20000228 	.word	0x20000228
 8004e8c:	20000228 	.word	0x20000228
 8004e90:	20000234 	.word	0x20000234

08004e94 <malloc>:
 8004e94:	4b02      	ldr	r3, [pc, #8]	; (8004ea0 <malloc+0xc>)
 8004e96:	4601      	mov	r1, r0
 8004e98:	6818      	ldr	r0, [r3, #0]
 8004e9a:	f7ff bbf3 	b.w	8004684 <__wrap__malloc_r>
 8004e9e:	bf00      	nop
 8004ea0:	200001c4 	.word	0x200001c4

08004ea4 <free>:
 8004ea4:	4b02      	ldr	r3, [pc, #8]	; (8004eb0 <free+0xc>)
 8004ea6:	4601      	mov	r1, r0
 8004ea8:	6818      	ldr	r0, [r3, #0]
 8004eaa:	f7ff bbef 	b.w	800468c <__wrap__free_r>
 8004eae:	bf00      	nop
 8004eb0:	200001c4 	.word	0x200001c4
	...

08004ec0 <memchr>:
 8004ec0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8004ec4:	2a10      	cmp	r2, #16
 8004ec6:	db2b      	blt.n	8004f20 <memchr+0x60>
 8004ec8:	f010 0f07 	tst.w	r0, #7
 8004ecc:	d008      	beq.n	8004ee0 <memchr+0x20>
 8004ece:	f810 3b01 	ldrb.w	r3, [r0], #1
 8004ed2:	3a01      	subs	r2, #1
 8004ed4:	428b      	cmp	r3, r1
 8004ed6:	d02d      	beq.n	8004f34 <memchr+0x74>
 8004ed8:	f010 0f07 	tst.w	r0, #7
 8004edc:	b342      	cbz	r2, 8004f30 <memchr+0x70>
 8004ede:	d1f6      	bne.n	8004ece <memchr+0xe>
 8004ee0:	b4f0      	push	{r4, r5, r6, r7}
 8004ee2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8004ee6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8004eea:	f022 0407 	bic.w	r4, r2, #7
 8004eee:	f07f 0700 	mvns.w	r7, #0
 8004ef2:	2300      	movs	r3, #0
 8004ef4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8004ef8:	3c08      	subs	r4, #8
 8004efa:	ea85 0501 	eor.w	r5, r5, r1
 8004efe:	ea86 0601 	eor.w	r6, r6, r1
 8004f02:	fa85 f547 	uadd8	r5, r5, r7
 8004f06:	faa3 f587 	sel	r5, r3, r7
 8004f0a:	fa86 f647 	uadd8	r6, r6, r7
 8004f0e:	faa5 f687 	sel	r6, r5, r7
 8004f12:	b98e      	cbnz	r6, 8004f38 <memchr+0x78>
 8004f14:	d1ee      	bne.n	8004ef4 <memchr+0x34>
 8004f16:	bcf0      	pop	{r4, r5, r6, r7}
 8004f18:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8004f1c:	f002 0207 	and.w	r2, r2, #7
 8004f20:	b132      	cbz	r2, 8004f30 <memchr+0x70>
 8004f22:	f810 3b01 	ldrb.w	r3, [r0], #1
 8004f26:	3a01      	subs	r2, #1
 8004f28:	ea83 0301 	eor.w	r3, r3, r1
 8004f2c:	b113      	cbz	r3, 8004f34 <memchr+0x74>
 8004f2e:	d1f8      	bne.n	8004f22 <memchr+0x62>
 8004f30:	2000      	movs	r0, #0
 8004f32:	4770      	bx	lr
 8004f34:	3801      	subs	r0, #1
 8004f36:	4770      	bx	lr
 8004f38:	2d00      	cmp	r5, #0
 8004f3a:	bf06      	itte	eq
 8004f3c:	4635      	moveq	r5, r6
 8004f3e:	3803      	subeq	r0, #3
 8004f40:	3807      	subne	r0, #7
 8004f42:	f015 0f01 	tst.w	r5, #1
 8004f46:	d107      	bne.n	8004f58 <memchr+0x98>
 8004f48:	3001      	adds	r0, #1
 8004f4a:	f415 7f80 	tst.w	r5, #256	; 0x100
 8004f4e:	bf02      	ittt	eq
 8004f50:	3001      	addeq	r0, #1
 8004f52:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8004f56:	3001      	addeq	r0, #1
 8004f58:	bcf0      	pop	{r4, r5, r6, r7}
 8004f5a:	3801      	subs	r0, #1
 8004f5c:	4770      	bx	lr
 8004f5e:	bf00      	nop

08004f60 <memcpy>:
 8004f60:	b510      	push	{r4, lr}
 8004f62:	1e43      	subs	r3, r0, #1
 8004f64:	440a      	add	r2, r1
 8004f66:	4291      	cmp	r1, r2
 8004f68:	d100      	bne.n	8004f6c <memcpy+0xc>
 8004f6a:	bd10      	pop	{r4, pc}
 8004f6c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004f70:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004f74:	e7f7      	b.n	8004f66 <memcpy+0x6>

08004f76 <memmove>:
 8004f76:	4288      	cmp	r0, r1
 8004f78:	b510      	push	{r4, lr}
 8004f7a:	eb01 0302 	add.w	r3, r1, r2
 8004f7e:	d803      	bhi.n	8004f88 <memmove+0x12>
 8004f80:	1e42      	subs	r2, r0, #1
 8004f82:	4299      	cmp	r1, r3
 8004f84:	d10c      	bne.n	8004fa0 <memmove+0x2a>
 8004f86:	bd10      	pop	{r4, pc}
 8004f88:	4298      	cmp	r0, r3
 8004f8a:	d2f9      	bcs.n	8004f80 <memmove+0xa>
 8004f8c:	1881      	adds	r1, r0, r2
 8004f8e:	1ad2      	subs	r2, r2, r3
 8004f90:	42d3      	cmn	r3, r2
 8004f92:	d100      	bne.n	8004f96 <memmove+0x20>
 8004f94:	bd10      	pop	{r4, pc}
 8004f96:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004f9a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8004f9e:	e7f7      	b.n	8004f90 <memmove+0x1a>
 8004fa0:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004fa4:	f802 4f01 	strb.w	r4, [r2, #1]!
 8004fa8:	e7eb      	b.n	8004f82 <memmove+0xc>

08004faa <memset>:
 8004faa:	4402      	add	r2, r0
 8004fac:	4603      	mov	r3, r0
 8004fae:	4293      	cmp	r3, r2
 8004fb0:	d100      	bne.n	8004fb4 <memset+0xa>
 8004fb2:	4770      	bx	lr
 8004fb4:	f803 1b01 	strb.w	r1, [r3], #1
 8004fb8:	e7f9      	b.n	8004fae <memset+0x4>
	...

08004fbc <_free_r>:
 8004fbc:	b538      	push	{r3, r4, r5, lr}
 8004fbe:	4605      	mov	r5, r0
 8004fc0:	2900      	cmp	r1, #0
 8004fc2:	d045      	beq.n	8005050 <_free_r+0x94>
 8004fc4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004fc8:	1f0c      	subs	r4, r1, #4
 8004fca:	2b00      	cmp	r3, #0
 8004fcc:	bfb8      	it	lt
 8004fce:	18e4      	addlt	r4, r4, r3
 8004fd0:	f7ff fc7d 	bl	80048ce <__malloc_lock>
 8004fd4:	4a1f      	ldr	r2, [pc, #124]	; (8005054 <_free_r+0x98>)
 8004fd6:	6813      	ldr	r3, [r2, #0]
 8004fd8:	4610      	mov	r0, r2
 8004fda:	b933      	cbnz	r3, 8004fea <_free_r+0x2e>
 8004fdc:	6063      	str	r3, [r4, #4]
 8004fde:	6014      	str	r4, [r2, #0]
 8004fe0:	4628      	mov	r0, r5
 8004fe2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004fe6:	f7ff bc76 	b.w	80048d6 <__malloc_unlock>
 8004fea:	42a3      	cmp	r3, r4
 8004fec:	d90c      	bls.n	8005008 <_free_r+0x4c>
 8004fee:	6821      	ldr	r1, [r4, #0]
 8004ff0:	1862      	adds	r2, r4, r1
 8004ff2:	4293      	cmp	r3, r2
 8004ff4:	bf04      	itt	eq
 8004ff6:	681a      	ldreq	r2, [r3, #0]
 8004ff8:	685b      	ldreq	r3, [r3, #4]
 8004ffa:	6063      	str	r3, [r4, #4]
 8004ffc:	bf04      	itt	eq
 8004ffe:	1852      	addeq	r2, r2, r1
 8005000:	6022      	streq	r2, [r4, #0]
 8005002:	6004      	str	r4, [r0, #0]
 8005004:	e7ec      	b.n	8004fe0 <_free_r+0x24>
 8005006:	4613      	mov	r3, r2
 8005008:	685a      	ldr	r2, [r3, #4]
 800500a:	b10a      	cbz	r2, 8005010 <_free_r+0x54>
 800500c:	42a2      	cmp	r2, r4
 800500e:	d9fa      	bls.n	8005006 <_free_r+0x4a>
 8005010:	6819      	ldr	r1, [r3, #0]
 8005012:	1858      	adds	r0, r3, r1
 8005014:	42a0      	cmp	r0, r4
 8005016:	d10b      	bne.n	8005030 <_free_r+0x74>
 8005018:	6820      	ldr	r0, [r4, #0]
 800501a:	4401      	add	r1, r0
 800501c:	1858      	adds	r0, r3, r1
 800501e:	4282      	cmp	r2, r0
 8005020:	6019      	str	r1, [r3, #0]
 8005022:	d1dd      	bne.n	8004fe0 <_free_r+0x24>
 8005024:	6810      	ldr	r0, [r2, #0]
 8005026:	6852      	ldr	r2, [r2, #4]
 8005028:	605a      	str	r2, [r3, #4]
 800502a:	4401      	add	r1, r0
 800502c:	6019      	str	r1, [r3, #0]
 800502e:	e7d7      	b.n	8004fe0 <_free_r+0x24>
 8005030:	d902      	bls.n	8005038 <_free_r+0x7c>
 8005032:	230c      	movs	r3, #12
 8005034:	602b      	str	r3, [r5, #0]
 8005036:	e7d3      	b.n	8004fe0 <_free_r+0x24>
 8005038:	6820      	ldr	r0, [r4, #0]
 800503a:	1821      	adds	r1, r4, r0
 800503c:	428a      	cmp	r2, r1
 800503e:	bf04      	itt	eq
 8005040:	6811      	ldreq	r1, [r2, #0]
 8005042:	6852      	ldreq	r2, [r2, #4]
 8005044:	6062      	str	r2, [r4, #4]
 8005046:	bf04      	itt	eq
 8005048:	1809      	addeq	r1, r1, r0
 800504a:	6021      	streq	r1, [r4, #0]
 800504c:	605c      	str	r4, [r3, #4]
 800504e:	e7c7      	b.n	8004fe0 <_free_r+0x24>
 8005050:	bd38      	pop	{r3, r4, r5, pc}
 8005052:	bf00      	nop
 8005054:	20001cf0 	.word	0x20001cf0

08005058 <_malloc_r>:
 8005058:	b570      	push	{r4, r5, r6, lr}
 800505a:	1ccd      	adds	r5, r1, #3
 800505c:	f025 0503 	bic.w	r5, r5, #3
 8005060:	3508      	adds	r5, #8
 8005062:	2d0c      	cmp	r5, #12
 8005064:	bf38      	it	cc
 8005066:	250c      	movcc	r5, #12
 8005068:	2d00      	cmp	r5, #0
 800506a:	4606      	mov	r6, r0
 800506c:	db01      	blt.n	8005072 <_malloc_r+0x1a>
 800506e:	42a9      	cmp	r1, r5
 8005070:	d903      	bls.n	800507a <_malloc_r+0x22>
 8005072:	230c      	movs	r3, #12
 8005074:	6033      	str	r3, [r6, #0]
 8005076:	2000      	movs	r0, #0
 8005078:	bd70      	pop	{r4, r5, r6, pc}
 800507a:	f7ff fc28 	bl	80048ce <__malloc_lock>
 800507e:	4a23      	ldr	r2, [pc, #140]	; (800510c <_malloc_r+0xb4>)
 8005080:	6814      	ldr	r4, [r2, #0]
 8005082:	4621      	mov	r1, r4
 8005084:	b991      	cbnz	r1, 80050ac <_malloc_r+0x54>
 8005086:	4c22      	ldr	r4, [pc, #136]	; (8005110 <_malloc_r+0xb8>)
 8005088:	6823      	ldr	r3, [r4, #0]
 800508a:	b91b      	cbnz	r3, 8005094 <_malloc_r+0x3c>
 800508c:	4630      	mov	r0, r6
 800508e:	f000 fa05 	bl	800549c <_sbrk_r>
 8005092:	6020      	str	r0, [r4, #0]
 8005094:	4629      	mov	r1, r5
 8005096:	4630      	mov	r0, r6
 8005098:	f000 fa00 	bl	800549c <_sbrk_r>
 800509c:	1c43      	adds	r3, r0, #1
 800509e:	d126      	bne.n	80050ee <_malloc_r+0x96>
 80050a0:	230c      	movs	r3, #12
 80050a2:	6033      	str	r3, [r6, #0]
 80050a4:	4630      	mov	r0, r6
 80050a6:	f7ff fc16 	bl	80048d6 <__malloc_unlock>
 80050aa:	e7e4      	b.n	8005076 <_malloc_r+0x1e>
 80050ac:	680b      	ldr	r3, [r1, #0]
 80050ae:	1b5b      	subs	r3, r3, r5
 80050b0:	d41a      	bmi.n	80050e8 <_malloc_r+0x90>
 80050b2:	2b0b      	cmp	r3, #11
 80050b4:	d90f      	bls.n	80050d6 <_malloc_r+0x7e>
 80050b6:	600b      	str	r3, [r1, #0]
 80050b8:	50cd      	str	r5, [r1, r3]
 80050ba:	18cc      	adds	r4, r1, r3
 80050bc:	4630      	mov	r0, r6
 80050be:	f7ff fc0a 	bl	80048d6 <__malloc_unlock>
 80050c2:	f104 000b 	add.w	r0, r4, #11
 80050c6:	1d23      	adds	r3, r4, #4
 80050c8:	f020 0007 	bic.w	r0, r0, #7
 80050cc:	1ac3      	subs	r3, r0, r3
 80050ce:	d01b      	beq.n	8005108 <_malloc_r+0xb0>
 80050d0:	425a      	negs	r2, r3
 80050d2:	50e2      	str	r2, [r4, r3]
 80050d4:	bd70      	pop	{r4, r5, r6, pc}
 80050d6:	428c      	cmp	r4, r1
 80050d8:	bf0d      	iteet	eq
 80050da:	6863      	ldreq	r3, [r4, #4]
 80050dc:	684b      	ldrne	r3, [r1, #4]
 80050de:	6063      	strne	r3, [r4, #4]
 80050e0:	6013      	streq	r3, [r2, #0]
 80050e2:	bf18      	it	ne
 80050e4:	460c      	movne	r4, r1
 80050e6:	e7e9      	b.n	80050bc <_malloc_r+0x64>
 80050e8:	460c      	mov	r4, r1
 80050ea:	6849      	ldr	r1, [r1, #4]
 80050ec:	e7ca      	b.n	8005084 <_malloc_r+0x2c>
 80050ee:	1cc4      	adds	r4, r0, #3
 80050f0:	f024 0403 	bic.w	r4, r4, #3
 80050f4:	42a0      	cmp	r0, r4
 80050f6:	d005      	beq.n	8005104 <_malloc_r+0xac>
 80050f8:	1a21      	subs	r1, r4, r0
 80050fa:	4630      	mov	r0, r6
 80050fc:	f000 f9ce 	bl	800549c <_sbrk_r>
 8005100:	3001      	adds	r0, #1
 8005102:	d0cd      	beq.n	80050a0 <_malloc_r+0x48>
 8005104:	6025      	str	r5, [r4, #0]
 8005106:	e7d9      	b.n	80050bc <_malloc_r+0x64>
 8005108:	bd70      	pop	{r4, r5, r6, pc}
 800510a:	bf00      	nop
 800510c:	20001cf0 	.word	0x20001cf0
 8005110:	20001cf4 	.word	0x20001cf4

08005114 <_realloc_r>:
 8005114:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005116:	4607      	mov	r7, r0
 8005118:	4614      	mov	r4, r2
 800511a:	460e      	mov	r6, r1
 800511c:	b921      	cbnz	r1, 8005128 <_realloc_r+0x14>
 800511e:	4611      	mov	r1, r2
 8005120:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005124:	f7ff baae 	b.w	8004684 <__wrap__malloc_r>
 8005128:	b922      	cbnz	r2, 8005134 <_realloc_r+0x20>
 800512a:	f7ff faaf 	bl	800468c <__wrap__free_r>
 800512e:	4625      	mov	r5, r4
 8005130:	4628      	mov	r0, r5
 8005132:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005134:	f000 fa64 	bl	8005600 <_malloc_usable_size_r>
 8005138:	4284      	cmp	r4, r0
 800513a:	d90f      	bls.n	800515c <_realloc_r+0x48>
 800513c:	4621      	mov	r1, r4
 800513e:	4638      	mov	r0, r7
 8005140:	f7ff faa0 	bl	8004684 <__wrap__malloc_r>
 8005144:	4605      	mov	r5, r0
 8005146:	2800      	cmp	r0, #0
 8005148:	d0f2      	beq.n	8005130 <_realloc_r+0x1c>
 800514a:	4631      	mov	r1, r6
 800514c:	4622      	mov	r2, r4
 800514e:	f7ff ff07 	bl	8004f60 <memcpy>
 8005152:	4631      	mov	r1, r6
 8005154:	4638      	mov	r0, r7
 8005156:	f7ff fa99 	bl	800468c <__wrap__free_r>
 800515a:	e7e9      	b.n	8005130 <_realloc_r+0x1c>
 800515c:	4635      	mov	r5, r6
 800515e:	e7e7      	b.n	8005130 <_realloc_r+0x1c>

08005160 <_printf_common>:
 8005160:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8005164:	4691      	mov	r9, r2
 8005166:	461f      	mov	r7, r3
 8005168:	688a      	ldr	r2, [r1, #8]
 800516a:	690b      	ldr	r3, [r1, #16]
 800516c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005170:	4293      	cmp	r3, r2
 8005172:	bfb8      	it	lt
 8005174:	4613      	movlt	r3, r2
 8005176:	f8c9 3000 	str.w	r3, [r9]
 800517a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800517e:	4606      	mov	r6, r0
 8005180:	460c      	mov	r4, r1
 8005182:	b112      	cbz	r2, 800518a <_printf_common+0x2a>
 8005184:	3301      	adds	r3, #1
 8005186:	f8c9 3000 	str.w	r3, [r9]
 800518a:	6823      	ldr	r3, [r4, #0]
 800518c:	0699      	lsls	r1, r3, #26
 800518e:	bf42      	ittt	mi
 8005190:	f8d9 3000 	ldrmi.w	r3, [r9]
 8005194:	3302      	addmi	r3, #2
 8005196:	f8c9 3000 	strmi.w	r3, [r9]
 800519a:	6825      	ldr	r5, [r4, #0]
 800519c:	f015 0506 	ands.w	r5, r5, #6
 80051a0:	d107      	bne.n	80051b2 <_printf_common+0x52>
 80051a2:	f104 0a19 	add.w	r10, r4, #25
 80051a6:	68e3      	ldr	r3, [r4, #12]
 80051a8:	f8d9 2000 	ldr.w	r2, [r9]
 80051ac:	1a9b      	subs	r3, r3, r2
 80051ae:	429d      	cmp	r5, r3
 80051b0:	db29      	blt.n	8005206 <_printf_common+0xa6>
 80051b2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80051b6:	6822      	ldr	r2, [r4, #0]
 80051b8:	3300      	adds	r3, #0
 80051ba:	bf18      	it	ne
 80051bc:	2301      	movne	r3, #1
 80051be:	0692      	lsls	r2, r2, #26
 80051c0:	d42e      	bmi.n	8005220 <_printf_common+0xc0>
 80051c2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80051c6:	4639      	mov	r1, r7
 80051c8:	4630      	mov	r0, r6
 80051ca:	47c0      	blx	r8
 80051cc:	3001      	adds	r0, #1
 80051ce:	d021      	beq.n	8005214 <_printf_common+0xb4>
 80051d0:	6823      	ldr	r3, [r4, #0]
 80051d2:	68e5      	ldr	r5, [r4, #12]
 80051d4:	f8d9 2000 	ldr.w	r2, [r9]
 80051d8:	f003 0306 	and.w	r3, r3, #6
 80051dc:	2b04      	cmp	r3, #4
 80051de:	bf08      	it	eq
 80051e0:	1aad      	subeq	r5, r5, r2
 80051e2:	68a3      	ldr	r3, [r4, #8]
 80051e4:	6922      	ldr	r2, [r4, #16]
 80051e6:	bf0c      	ite	eq
 80051e8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80051ec:	2500      	movne	r5, #0
 80051ee:	4293      	cmp	r3, r2
 80051f0:	bfc4      	itt	gt
 80051f2:	1a9b      	subgt	r3, r3, r2
 80051f4:	18ed      	addgt	r5, r5, r3
 80051f6:	f04f 0900 	mov.w	r9, #0
 80051fa:	341a      	adds	r4, #26
 80051fc:	454d      	cmp	r5, r9
 80051fe:	d11b      	bne.n	8005238 <_printf_common+0xd8>
 8005200:	2000      	movs	r0, #0
 8005202:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005206:	2301      	movs	r3, #1
 8005208:	4652      	mov	r2, r10
 800520a:	4639      	mov	r1, r7
 800520c:	4630      	mov	r0, r6
 800520e:	47c0      	blx	r8
 8005210:	3001      	adds	r0, #1
 8005212:	d103      	bne.n	800521c <_printf_common+0xbc>
 8005214:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005218:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800521c:	3501      	adds	r5, #1
 800521e:	e7c2      	b.n	80051a6 <_printf_common+0x46>
 8005220:	18e1      	adds	r1, r4, r3
 8005222:	1c5a      	adds	r2, r3, #1
 8005224:	2030      	movs	r0, #48	; 0x30
 8005226:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800522a:	4422      	add	r2, r4
 800522c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005230:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005234:	3302      	adds	r3, #2
 8005236:	e7c4      	b.n	80051c2 <_printf_common+0x62>
 8005238:	2301      	movs	r3, #1
 800523a:	4622      	mov	r2, r4
 800523c:	4639      	mov	r1, r7
 800523e:	4630      	mov	r0, r6
 8005240:	47c0      	blx	r8
 8005242:	3001      	adds	r0, #1
 8005244:	d0e6      	beq.n	8005214 <_printf_common+0xb4>
 8005246:	f109 0901 	add.w	r9, r9, #1
 800524a:	e7d7      	b.n	80051fc <_printf_common+0x9c>

0800524c <_printf_i>:
 800524c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005250:	4617      	mov	r7, r2
 8005252:	7e0a      	ldrb	r2, [r1, #24]
 8005254:	b085      	sub	sp, #20
 8005256:	2a6e      	cmp	r2, #110	; 0x6e
 8005258:	4698      	mov	r8, r3
 800525a:	4606      	mov	r6, r0
 800525c:	460c      	mov	r4, r1
 800525e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005260:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8005264:	f000 80bc 	beq.w	80053e0 <_printf_i+0x194>
 8005268:	d81a      	bhi.n	80052a0 <_printf_i+0x54>
 800526a:	2a63      	cmp	r2, #99	; 0x63
 800526c:	d02e      	beq.n	80052cc <_printf_i+0x80>
 800526e:	d80a      	bhi.n	8005286 <_printf_i+0x3a>
 8005270:	2a00      	cmp	r2, #0
 8005272:	f000 80c8 	beq.w	8005406 <_printf_i+0x1ba>
 8005276:	2a58      	cmp	r2, #88	; 0x58
 8005278:	f000 808a 	beq.w	8005390 <_printf_i+0x144>
 800527c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005280:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8005284:	e02a      	b.n	80052dc <_printf_i+0x90>
 8005286:	2a64      	cmp	r2, #100	; 0x64
 8005288:	d001      	beq.n	800528e <_printf_i+0x42>
 800528a:	2a69      	cmp	r2, #105	; 0x69
 800528c:	d1f6      	bne.n	800527c <_printf_i+0x30>
 800528e:	6821      	ldr	r1, [r4, #0]
 8005290:	681a      	ldr	r2, [r3, #0]
 8005292:	f011 0f80 	tst.w	r1, #128	; 0x80
 8005296:	d023      	beq.n	80052e0 <_printf_i+0x94>
 8005298:	1d11      	adds	r1, r2, #4
 800529a:	6019      	str	r1, [r3, #0]
 800529c:	6813      	ldr	r3, [r2, #0]
 800529e:	e027      	b.n	80052f0 <_printf_i+0xa4>
 80052a0:	2a73      	cmp	r2, #115	; 0x73
 80052a2:	f000 80b4 	beq.w	800540e <_printf_i+0x1c2>
 80052a6:	d808      	bhi.n	80052ba <_printf_i+0x6e>
 80052a8:	2a6f      	cmp	r2, #111	; 0x6f
 80052aa:	d02a      	beq.n	8005302 <_printf_i+0xb6>
 80052ac:	2a70      	cmp	r2, #112	; 0x70
 80052ae:	d1e5      	bne.n	800527c <_printf_i+0x30>
 80052b0:	680a      	ldr	r2, [r1, #0]
 80052b2:	f042 0220 	orr.w	r2, r2, #32
 80052b6:	600a      	str	r2, [r1, #0]
 80052b8:	e003      	b.n	80052c2 <_printf_i+0x76>
 80052ba:	2a75      	cmp	r2, #117	; 0x75
 80052bc:	d021      	beq.n	8005302 <_printf_i+0xb6>
 80052be:	2a78      	cmp	r2, #120	; 0x78
 80052c0:	d1dc      	bne.n	800527c <_printf_i+0x30>
 80052c2:	2278      	movs	r2, #120	; 0x78
 80052c4:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 80052c8:	496e      	ldr	r1, [pc, #440]	; (8005484 <_printf_i+0x238>)
 80052ca:	e064      	b.n	8005396 <_printf_i+0x14a>
 80052cc:	681a      	ldr	r2, [r3, #0]
 80052ce:	f101 0542 	add.w	r5, r1, #66	; 0x42
 80052d2:	1d11      	adds	r1, r2, #4
 80052d4:	6019      	str	r1, [r3, #0]
 80052d6:	6813      	ldr	r3, [r2, #0]
 80052d8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80052dc:	2301      	movs	r3, #1
 80052de:	e0a3      	b.n	8005428 <_printf_i+0x1dc>
 80052e0:	f011 0f40 	tst.w	r1, #64	; 0x40
 80052e4:	f102 0104 	add.w	r1, r2, #4
 80052e8:	6019      	str	r1, [r3, #0]
 80052ea:	d0d7      	beq.n	800529c <_printf_i+0x50>
 80052ec:	f9b2 3000 	ldrsh.w	r3, [r2]
 80052f0:	2b00      	cmp	r3, #0
 80052f2:	da03      	bge.n	80052fc <_printf_i+0xb0>
 80052f4:	222d      	movs	r2, #45	; 0x2d
 80052f6:	425b      	negs	r3, r3
 80052f8:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80052fc:	4962      	ldr	r1, [pc, #392]	; (8005488 <_printf_i+0x23c>)
 80052fe:	220a      	movs	r2, #10
 8005300:	e017      	b.n	8005332 <_printf_i+0xe6>
 8005302:	6820      	ldr	r0, [r4, #0]
 8005304:	6819      	ldr	r1, [r3, #0]
 8005306:	f010 0f80 	tst.w	r0, #128	; 0x80
 800530a:	d003      	beq.n	8005314 <_printf_i+0xc8>
 800530c:	1d08      	adds	r0, r1, #4
 800530e:	6018      	str	r0, [r3, #0]
 8005310:	680b      	ldr	r3, [r1, #0]
 8005312:	e006      	b.n	8005322 <_printf_i+0xd6>
 8005314:	f010 0f40 	tst.w	r0, #64	; 0x40
 8005318:	f101 0004 	add.w	r0, r1, #4
 800531c:	6018      	str	r0, [r3, #0]
 800531e:	d0f7      	beq.n	8005310 <_printf_i+0xc4>
 8005320:	880b      	ldrh	r3, [r1, #0]
 8005322:	4959      	ldr	r1, [pc, #356]	; (8005488 <_printf_i+0x23c>)
 8005324:	2a6f      	cmp	r2, #111	; 0x6f
 8005326:	bf14      	ite	ne
 8005328:	220a      	movne	r2, #10
 800532a:	2208      	moveq	r2, #8
 800532c:	2000      	movs	r0, #0
 800532e:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8005332:	6865      	ldr	r5, [r4, #4]
 8005334:	60a5      	str	r5, [r4, #8]
 8005336:	2d00      	cmp	r5, #0
 8005338:	f2c0 809c 	blt.w	8005474 <_printf_i+0x228>
 800533c:	6820      	ldr	r0, [r4, #0]
 800533e:	f020 0004 	bic.w	r0, r0, #4
 8005342:	6020      	str	r0, [r4, #0]
 8005344:	2b00      	cmp	r3, #0
 8005346:	d13f      	bne.n	80053c8 <_printf_i+0x17c>
 8005348:	2d00      	cmp	r5, #0
 800534a:	f040 8095 	bne.w	8005478 <_printf_i+0x22c>
 800534e:	4675      	mov	r5, lr
 8005350:	2a08      	cmp	r2, #8
 8005352:	d10b      	bne.n	800536c <_printf_i+0x120>
 8005354:	6823      	ldr	r3, [r4, #0]
 8005356:	07da      	lsls	r2, r3, #31
 8005358:	d508      	bpl.n	800536c <_printf_i+0x120>
 800535a:	6923      	ldr	r3, [r4, #16]
 800535c:	6862      	ldr	r2, [r4, #4]
 800535e:	429a      	cmp	r2, r3
 8005360:	bfde      	ittt	le
 8005362:	2330      	movle	r3, #48	; 0x30
 8005364:	f805 3c01 	strble.w	r3, [r5, #-1]
 8005368:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 800536c:	ebae 0305 	sub.w	r3, lr, r5
 8005370:	6123      	str	r3, [r4, #16]
 8005372:	f8cd 8000 	str.w	r8, [sp]
 8005376:	463b      	mov	r3, r7
 8005378:	aa03      	add	r2, sp, #12
 800537a:	4621      	mov	r1, r4
 800537c:	4630      	mov	r0, r6
 800537e:	f7ff feef 	bl	8005160 <_printf_common>
 8005382:	3001      	adds	r0, #1
 8005384:	d155      	bne.n	8005432 <_printf_i+0x1e6>
 8005386:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800538a:	b005      	add	sp, #20
 800538c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005390:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8005394:	493c      	ldr	r1, [pc, #240]	; (8005488 <_printf_i+0x23c>)
 8005396:	6822      	ldr	r2, [r4, #0]
 8005398:	6818      	ldr	r0, [r3, #0]
 800539a:	f012 0f80 	tst.w	r2, #128	; 0x80
 800539e:	f100 0504 	add.w	r5, r0, #4
 80053a2:	601d      	str	r5, [r3, #0]
 80053a4:	d001      	beq.n	80053aa <_printf_i+0x15e>
 80053a6:	6803      	ldr	r3, [r0, #0]
 80053a8:	e002      	b.n	80053b0 <_printf_i+0x164>
 80053aa:	0655      	lsls	r5, r2, #25
 80053ac:	d5fb      	bpl.n	80053a6 <_printf_i+0x15a>
 80053ae:	8803      	ldrh	r3, [r0, #0]
 80053b0:	07d0      	lsls	r0, r2, #31
 80053b2:	bf44      	itt	mi
 80053b4:	f042 0220 	orrmi.w	r2, r2, #32
 80053b8:	6022      	strmi	r2, [r4, #0]
 80053ba:	b91b      	cbnz	r3, 80053c4 <_printf_i+0x178>
 80053bc:	6822      	ldr	r2, [r4, #0]
 80053be:	f022 0220 	bic.w	r2, r2, #32
 80053c2:	6022      	str	r2, [r4, #0]
 80053c4:	2210      	movs	r2, #16
 80053c6:	e7b1      	b.n	800532c <_printf_i+0xe0>
 80053c8:	4675      	mov	r5, lr
 80053ca:	fbb3 f0f2 	udiv	r0, r3, r2
 80053ce:	fb02 3310 	mls	r3, r2, r0, r3
 80053d2:	5ccb      	ldrb	r3, [r1, r3]
 80053d4:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80053d8:	4603      	mov	r3, r0
 80053da:	2800      	cmp	r0, #0
 80053dc:	d1f5      	bne.n	80053ca <_printf_i+0x17e>
 80053de:	e7b7      	b.n	8005350 <_printf_i+0x104>
 80053e0:	6808      	ldr	r0, [r1, #0]
 80053e2:	681a      	ldr	r2, [r3, #0]
 80053e4:	6949      	ldr	r1, [r1, #20]
 80053e6:	f010 0f80 	tst.w	r0, #128	; 0x80
 80053ea:	d004      	beq.n	80053f6 <_printf_i+0x1aa>
 80053ec:	1d10      	adds	r0, r2, #4
 80053ee:	6018      	str	r0, [r3, #0]
 80053f0:	6813      	ldr	r3, [r2, #0]
 80053f2:	6019      	str	r1, [r3, #0]
 80053f4:	e007      	b.n	8005406 <_printf_i+0x1ba>
 80053f6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80053fa:	f102 0004 	add.w	r0, r2, #4
 80053fe:	6018      	str	r0, [r3, #0]
 8005400:	6813      	ldr	r3, [r2, #0]
 8005402:	d0f6      	beq.n	80053f2 <_printf_i+0x1a6>
 8005404:	8019      	strh	r1, [r3, #0]
 8005406:	2300      	movs	r3, #0
 8005408:	6123      	str	r3, [r4, #16]
 800540a:	4675      	mov	r5, lr
 800540c:	e7b1      	b.n	8005372 <_printf_i+0x126>
 800540e:	681a      	ldr	r2, [r3, #0]
 8005410:	1d11      	adds	r1, r2, #4
 8005412:	6019      	str	r1, [r3, #0]
 8005414:	6815      	ldr	r5, [r2, #0]
 8005416:	6862      	ldr	r2, [r4, #4]
 8005418:	2100      	movs	r1, #0
 800541a:	4628      	mov	r0, r5
 800541c:	f7ff fd50 	bl	8004ec0 <memchr>
 8005420:	b108      	cbz	r0, 8005426 <_printf_i+0x1da>
 8005422:	1b40      	subs	r0, r0, r5
 8005424:	6060      	str	r0, [r4, #4]
 8005426:	6863      	ldr	r3, [r4, #4]
 8005428:	6123      	str	r3, [r4, #16]
 800542a:	2300      	movs	r3, #0
 800542c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005430:	e79f      	b.n	8005372 <_printf_i+0x126>
 8005432:	6923      	ldr	r3, [r4, #16]
 8005434:	462a      	mov	r2, r5
 8005436:	4639      	mov	r1, r7
 8005438:	4630      	mov	r0, r6
 800543a:	47c0      	blx	r8
 800543c:	3001      	adds	r0, #1
 800543e:	d0a2      	beq.n	8005386 <_printf_i+0x13a>
 8005440:	6823      	ldr	r3, [r4, #0]
 8005442:	079b      	lsls	r3, r3, #30
 8005444:	d507      	bpl.n	8005456 <_printf_i+0x20a>
 8005446:	2500      	movs	r5, #0
 8005448:	f104 0919 	add.w	r9, r4, #25
 800544c:	68e3      	ldr	r3, [r4, #12]
 800544e:	9a03      	ldr	r2, [sp, #12]
 8005450:	1a9b      	subs	r3, r3, r2
 8005452:	429d      	cmp	r5, r3
 8005454:	db05      	blt.n	8005462 <_printf_i+0x216>
 8005456:	68e0      	ldr	r0, [r4, #12]
 8005458:	9b03      	ldr	r3, [sp, #12]
 800545a:	4298      	cmp	r0, r3
 800545c:	bfb8      	it	lt
 800545e:	4618      	movlt	r0, r3
 8005460:	e793      	b.n	800538a <_printf_i+0x13e>
 8005462:	2301      	movs	r3, #1
 8005464:	464a      	mov	r2, r9
 8005466:	4639      	mov	r1, r7
 8005468:	4630      	mov	r0, r6
 800546a:	47c0      	blx	r8
 800546c:	3001      	adds	r0, #1
 800546e:	d08a      	beq.n	8005386 <_printf_i+0x13a>
 8005470:	3501      	adds	r5, #1
 8005472:	e7eb      	b.n	800544c <_printf_i+0x200>
 8005474:	2b00      	cmp	r3, #0
 8005476:	d1a7      	bne.n	80053c8 <_printf_i+0x17c>
 8005478:	780b      	ldrb	r3, [r1, #0]
 800547a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800547e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005482:	e765      	b.n	8005350 <_printf_i+0x104>
 8005484:	08005fa5 	.word	0x08005fa5
 8005488:	08005f94 	.word	0x08005f94

0800548c <realloc>:
 800548c:	4b02      	ldr	r3, [pc, #8]	; (8005498 <realloc+0xc>)
 800548e:	460a      	mov	r2, r1
 8005490:	4601      	mov	r1, r0
 8005492:	6818      	ldr	r0, [r3, #0]
 8005494:	f7ff b8f8 	b.w	8004688 <__wrap__realloc_r>
 8005498:	200001c4 	.word	0x200001c4

0800549c <_sbrk_r>:
 800549c:	b538      	push	{r3, r4, r5, lr}
 800549e:	4c06      	ldr	r4, [pc, #24]	; (80054b8 <_sbrk_r+0x1c>)
 80054a0:	2300      	movs	r3, #0
 80054a2:	4605      	mov	r5, r0
 80054a4:	4608      	mov	r0, r1
 80054a6:	6023      	str	r3, [r4, #0]
 80054a8:	f7ff f9d8 	bl	800485c <_sbrk>
 80054ac:	1c43      	adds	r3, r0, #1
 80054ae:	d102      	bne.n	80054b6 <_sbrk_r+0x1a>
 80054b0:	6823      	ldr	r3, [r4, #0]
 80054b2:	b103      	cbz	r3, 80054b6 <_sbrk_r+0x1a>
 80054b4:	602b      	str	r3, [r5, #0]
 80054b6:	bd38      	pop	{r3, r4, r5, pc}
 80054b8:	2000282c 	.word	0x2000282c

080054bc <__sread>:
 80054bc:	b510      	push	{r4, lr}
 80054be:	460c      	mov	r4, r1
 80054c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80054c4:	f000 f9f4 	bl	80058b0 <_read_r>
 80054c8:	2800      	cmp	r0, #0
 80054ca:	bfab      	itete	ge
 80054cc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80054ce:	89a3      	ldrhlt	r3, [r4, #12]
 80054d0:	181b      	addge	r3, r3, r0
 80054d2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80054d6:	bfac      	ite	ge
 80054d8:	6563      	strge	r3, [r4, #84]	; 0x54
 80054da:	81a3      	strhlt	r3, [r4, #12]
 80054dc:	bd10      	pop	{r4, pc}

080054de <__swrite>:
 80054de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80054e2:	461f      	mov	r7, r3
 80054e4:	898b      	ldrh	r3, [r1, #12]
 80054e6:	05db      	lsls	r3, r3, #23
 80054e8:	4605      	mov	r5, r0
 80054ea:	460c      	mov	r4, r1
 80054ec:	4616      	mov	r6, r2
 80054ee:	d505      	bpl.n	80054fc <__swrite+0x1e>
 80054f0:	2302      	movs	r3, #2
 80054f2:	2200      	movs	r2, #0
 80054f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80054f8:	f000 f870 	bl	80055dc <_lseek_r>
 80054fc:	89a3      	ldrh	r3, [r4, #12]
 80054fe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005502:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005506:	81a3      	strh	r3, [r4, #12]
 8005508:	4632      	mov	r2, r6
 800550a:	463b      	mov	r3, r7
 800550c:	4628      	mov	r0, r5
 800550e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005512:	f000 b841 	b.w	8005598 <_write_r>

08005516 <__sseek>:
 8005516:	b510      	push	{r4, lr}
 8005518:	460c      	mov	r4, r1
 800551a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800551e:	f000 f85d 	bl	80055dc <_lseek_r>
 8005522:	1c43      	adds	r3, r0, #1
 8005524:	89a3      	ldrh	r3, [r4, #12]
 8005526:	bf15      	itete	ne
 8005528:	6560      	strne	r0, [r4, #84]	; 0x54
 800552a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800552e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8005532:	81a3      	strheq	r3, [r4, #12]
 8005534:	bf18      	it	ne
 8005536:	81a3      	strhne	r3, [r4, #12]
 8005538:	bd10      	pop	{r4, pc}

0800553a <__sclose>:
 800553a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800553e:	f000 b83d 	b.w	80055bc <_close_r>

08005542 <strlen>:
 8005542:	4603      	mov	r3, r0
 8005544:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005548:	2a00      	cmp	r2, #0
 800554a:	d1fb      	bne.n	8005544 <strlen+0x2>
 800554c:	1a18      	subs	r0, r3, r0
 800554e:	3801      	subs	r0, #1
 8005550:	4770      	bx	lr

08005552 <_vsiprintf_r>:
 8005552:	b510      	push	{r4, lr}
 8005554:	b09a      	sub	sp, #104	; 0x68
 8005556:	f44f 7402 	mov.w	r4, #520	; 0x208
 800555a:	9100      	str	r1, [sp, #0]
 800555c:	9104      	str	r1, [sp, #16]
 800555e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8005562:	9102      	str	r1, [sp, #8]
 8005564:	9105      	str	r1, [sp, #20]
 8005566:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800556a:	f8ad 100e 	strh.w	r1, [sp, #14]
 800556e:	4669      	mov	r1, sp
 8005570:	f8ad 400c 	strh.w	r4, [sp, #12]
 8005574:	f000 f8a8 	bl	80056c8 <_svfiprintf_r>
 8005578:	9b00      	ldr	r3, [sp, #0]
 800557a:	2200      	movs	r2, #0
 800557c:	701a      	strb	r2, [r3, #0]
 800557e:	b01a      	add	sp, #104	; 0x68
 8005580:	bd10      	pop	{r4, pc}
	...

08005584 <vsiprintf>:
 8005584:	4613      	mov	r3, r2
 8005586:	460a      	mov	r2, r1
 8005588:	4601      	mov	r1, r0
 800558a:	4802      	ldr	r0, [pc, #8]	; (8005594 <vsiprintf+0x10>)
 800558c:	6800      	ldr	r0, [r0, #0]
 800558e:	f7ff bfe0 	b.w	8005552 <_vsiprintf_r>
 8005592:	bf00      	nop
 8005594:	200001c4 	.word	0x200001c4

08005598 <_write_r>:
 8005598:	b538      	push	{r3, r4, r5, lr}
 800559a:	4c07      	ldr	r4, [pc, #28]	; (80055b8 <_write_r+0x20>)
 800559c:	4605      	mov	r5, r0
 800559e:	4608      	mov	r0, r1
 80055a0:	4611      	mov	r1, r2
 80055a2:	2200      	movs	r2, #0
 80055a4:	6022      	str	r2, [r4, #0]
 80055a6:	461a      	mov	r2, r3
 80055a8:	f7ff f8c6 	bl	8004738 <_write>
 80055ac:	1c43      	adds	r3, r0, #1
 80055ae:	d102      	bne.n	80055b6 <_write_r+0x1e>
 80055b0:	6823      	ldr	r3, [r4, #0]
 80055b2:	b103      	cbz	r3, 80055b6 <_write_r+0x1e>
 80055b4:	602b      	str	r3, [r5, #0]
 80055b6:	bd38      	pop	{r3, r4, r5, pc}
 80055b8:	2000282c 	.word	0x2000282c

080055bc <_close_r>:
 80055bc:	b538      	push	{r3, r4, r5, lr}
 80055be:	4c06      	ldr	r4, [pc, #24]	; (80055d8 <_close_r+0x1c>)
 80055c0:	2300      	movs	r3, #0
 80055c2:	4605      	mov	r5, r0
 80055c4:	4608      	mov	r0, r1
 80055c6:	6023      	str	r3, [r4, #0]
 80055c8:	f7ff f896 	bl	80046f8 <_close>
 80055cc:	1c43      	adds	r3, r0, #1
 80055ce:	d102      	bne.n	80055d6 <_close_r+0x1a>
 80055d0:	6823      	ldr	r3, [r4, #0]
 80055d2:	b103      	cbz	r3, 80055d6 <_close_r+0x1a>
 80055d4:	602b      	str	r3, [r5, #0]
 80055d6:	bd38      	pop	{r3, r4, r5, pc}
 80055d8:	2000282c 	.word	0x2000282c

080055dc <_lseek_r>:
 80055dc:	b538      	push	{r3, r4, r5, lr}
 80055de:	4c07      	ldr	r4, [pc, #28]	; (80055fc <_lseek_r+0x20>)
 80055e0:	4605      	mov	r5, r0
 80055e2:	4608      	mov	r0, r1
 80055e4:	4611      	mov	r1, r2
 80055e6:	2200      	movs	r2, #0
 80055e8:	6022      	str	r2, [r4, #0]
 80055ea:	461a      	mov	r2, r3
 80055ec:	f7ff f90a 	bl	8004804 <_lseek>
 80055f0:	1c43      	adds	r3, r0, #1
 80055f2:	d102      	bne.n	80055fa <_lseek_r+0x1e>
 80055f4:	6823      	ldr	r3, [r4, #0]
 80055f6:	b103      	cbz	r3, 80055fa <_lseek_r+0x1e>
 80055f8:	602b      	str	r3, [r5, #0]
 80055fa:	bd38      	pop	{r3, r4, r5, pc}
 80055fc:	2000282c 	.word	0x2000282c

08005600 <_malloc_usable_size_r>:
 8005600:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8005604:	2800      	cmp	r0, #0
 8005606:	f1a0 0004 	sub.w	r0, r0, #4
 800560a:	bfbc      	itt	lt
 800560c:	580b      	ldrlt	r3, [r1, r0]
 800560e:	18c0      	addlt	r0, r0, r3
 8005610:	4770      	bx	lr

08005612 <__ssputs_r>:
 8005612:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8005616:	688e      	ldr	r6, [r1, #8]
 8005618:	429e      	cmp	r6, r3
 800561a:	4682      	mov	r10, r0
 800561c:	460c      	mov	r4, r1
 800561e:	4691      	mov	r9, r2
 8005620:	4698      	mov	r8, r3
 8005622:	d835      	bhi.n	8005690 <__ssputs_r+0x7e>
 8005624:	898a      	ldrh	r2, [r1, #12]
 8005626:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800562a:	d031      	beq.n	8005690 <__ssputs_r+0x7e>
 800562c:	6825      	ldr	r5, [r4, #0]
 800562e:	6909      	ldr	r1, [r1, #16]
 8005630:	1a6f      	subs	r7, r5, r1
 8005632:	6965      	ldr	r5, [r4, #20]
 8005634:	2302      	movs	r3, #2
 8005636:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800563a:	fb95 f5f3 	sdiv	r5, r5, r3
 800563e:	f108 0301 	add.w	r3, r8, #1
 8005642:	443b      	add	r3, r7
 8005644:	429d      	cmp	r5, r3
 8005646:	bf38      	it	cc
 8005648:	461d      	movcc	r5, r3
 800564a:	0553      	lsls	r3, r2, #21
 800564c:	d531      	bpl.n	80056b2 <__ssputs_r+0xa0>
 800564e:	4629      	mov	r1, r5
 8005650:	f7ff f818 	bl	8004684 <__wrap__malloc_r>
 8005654:	4606      	mov	r6, r0
 8005656:	b950      	cbnz	r0, 800566e <__ssputs_r+0x5c>
 8005658:	230c      	movs	r3, #12
 800565a:	f8ca 3000 	str.w	r3, [r10]
 800565e:	89a3      	ldrh	r3, [r4, #12]
 8005660:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005664:	81a3      	strh	r3, [r4, #12]
 8005666:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800566a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800566e:	463a      	mov	r2, r7
 8005670:	6921      	ldr	r1, [r4, #16]
 8005672:	f7ff fc75 	bl	8004f60 <memcpy>
 8005676:	89a3      	ldrh	r3, [r4, #12]
 8005678:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800567c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005680:	81a3      	strh	r3, [r4, #12]
 8005682:	6126      	str	r6, [r4, #16]
 8005684:	6165      	str	r5, [r4, #20]
 8005686:	443e      	add	r6, r7
 8005688:	1bed      	subs	r5, r5, r7
 800568a:	6026      	str	r6, [r4, #0]
 800568c:	60a5      	str	r5, [r4, #8]
 800568e:	4646      	mov	r6, r8
 8005690:	4546      	cmp	r6, r8
 8005692:	bf28      	it	cs
 8005694:	4646      	movcs	r6, r8
 8005696:	4632      	mov	r2, r6
 8005698:	4649      	mov	r1, r9
 800569a:	6820      	ldr	r0, [r4, #0]
 800569c:	f7ff fc6b 	bl	8004f76 <memmove>
 80056a0:	68a3      	ldr	r3, [r4, #8]
 80056a2:	1b9b      	subs	r3, r3, r6
 80056a4:	60a3      	str	r3, [r4, #8]
 80056a6:	6823      	ldr	r3, [r4, #0]
 80056a8:	441e      	add	r6, r3
 80056aa:	6026      	str	r6, [r4, #0]
 80056ac:	2000      	movs	r0, #0
 80056ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80056b2:	462a      	mov	r2, r5
 80056b4:	f7fe ffe8 	bl	8004688 <__wrap__realloc_r>
 80056b8:	4606      	mov	r6, r0
 80056ba:	2800      	cmp	r0, #0
 80056bc:	d1e1      	bne.n	8005682 <__ssputs_r+0x70>
 80056be:	6921      	ldr	r1, [r4, #16]
 80056c0:	4650      	mov	r0, r10
 80056c2:	f7fe ffe3 	bl	800468c <__wrap__free_r>
 80056c6:	e7c7      	b.n	8005658 <__ssputs_r+0x46>

080056c8 <_svfiprintf_r>:
 80056c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80056cc:	b09d      	sub	sp, #116	; 0x74
 80056ce:	4680      	mov	r8, r0
 80056d0:	9303      	str	r3, [sp, #12]
 80056d2:	898b      	ldrh	r3, [r1, #12]
 80056d4:	061c      	lsls	r4, r3, #24
 80056d6:	460d      	mov	r5, r1
 80056d8:	4616      	mov	r6, r2
 80056da:	d50f      	bpl.n	80056fc <_svfiprintf_r+0x34>
 80056dc:	690b      	ldr	r3, [r1, #16]
 80056de:	b96b      	cbnz	r3, 80056fc <_svfiprintf_r+0x34>
 80056e0:	2140      	movs	r1, #64	; 0x40
 80056e2:	f7fe ffcf 	bl	8004684 <__wrap__malloc_r>
 80056e6:	6028      	str	r0, [r5, #0]
 80056e8:	6128      	str	r0, [r5, #16]
 80056ea:	b928      	cbnz	r0, 80056f8 <_svfiprintf_r+0x30>
 80056ec:	230c      	movs	r3, #12
 80056ee:	f8c8 3000 	str.w	r3, [r8]
 80056f2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80056f6:	e0c5      	b.n	8005884 <_svfiprintf_r+0x1bc>
 80056f8:	2340      	movs	r3, #64	; 0x40
 80056fa:	616b      	str	r3, [r5, #20]
 80056fc:	2300      	movs	r3, #0
 80056fe:	9309      	str	r3, [sp, #36]	; 0x24
 8005700:	2320      	movs	r3, #32
 8005702:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005706:	2330      	movs	r3, #48	; 0x30
 8005708:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800570c:	f04f 0b01 	mov.w	r11, #1
 8005710:	4637      	mov	r7, r6
 8005712:	463c      	mov	r4, r7
 8005714:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005718:	2b00      	cmp	r3, #0
 800571a:	d13c      	bne.n	8005796 <_svfiprintf_r+0xce>
 800571c:	ebb7 0a06 	subs.w	r10, r7, r6
 8005720:	d00b      	beq.n	800573a <_svfiprintf_r+0x72>
 8005722:	4653      	mov	r3, r10
 8005724:	4632      	mov	r2, r6
 8005726:	4629      	mov	r1, r5
 8005728:	4640      	mov	r0, r8
 800572a:	f7ff ff72 	bl	8005612 <__ssputs_r>
 800572e:	3001      	adds	r0, #1
 8005730:	f000 80a3 	beq.w	800587a <_svfiprintf_r+0x1b2>
 8005734:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005736:	4453      	add	r3, r10
 8005738:	9309      	str	r3, [sp, #36]	; 0x24
 800573a:	783b      	ldrb	r3, [r7, #0]
 800573c:	2b00      	cmp	r3, #0
 800573e:	f000 809c 	beq.w	800587a <_svfiprintf_r+0x1b2>
 8005742:	2300      	movs	r3, #0
 8005744:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005748:	9304      	str	r3, [sp, #16]
 800574a:	9307      	str	r3, [sp, #28]
 800574c:	9205      	str	r2, [sp, #20]
 800574e:	9306      	str	r3, [sp, #24]
 8005750:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005754:	931a      	str	r3, [sp, #104]	; 0x68
 8005756:	2205      	movs	r2, #5
 8005758:	7821      	ldrb	r1, [r4, #0]
 800575a:	4850      	ldr	r0, [pc, #320]	; (800589c <_svfiprintf_r+0x1d4>)
 800575c:	f7ff fbb0 	bl	8004ec0 <memchr>
 8005760:	1c67      	adds	r7, r4, #1
 8005762:	9b04      	ldr	r3, [sp, #16]
 8005764:	b9d8      	cbnz	r0, 800579e <_svfiprintf_r+0xd6>
 8005766:	06d9      	lsls	r1, r3, #27
 8005768:	bf44      	itt	mi
 800576a:	2220      	movmi	r2, #32
 800576c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005770:	071a      	lsls	r2, r3, #28
 8005772:	bf44      	itt	mi
 8005774:	222b      	movmi	r2, #43	; 0x2b
 8005776:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800577a:	7822      	ldrb	r2, [r4, #0]
 800577c:	2a2a      	cmp	r2, #42	; 0x2a
 800577e:	d016      	beq.n	80057ae <_svfiprintf_r+0xe6>
 8005780:	9a07      	ldr	r2, [sp, #28]
 8005782:	2100      	movs	r1, #0
 8005784:	200a      	movs	r0, #10
 8005786:	4627      	mov	r7, r4
 8005788:	3401      	adds	r4, #1
 800578a:	783b      	ldrb	r3, [r7, #0]
 800578c:	3b30      	subs	r3, #48	; 0x30
 800578e:	2b09      	cmp	r3, #9
 8005790:	d951      	bls.n	8005836 <_svfiprintf_r+0x16e>
 8005792:	b1c9      	cbz	r1, 80057c8 <_svfiprintf_r+0x100>
 8005794:	e011      	b.n	80057ba <_svfiprintf_r+0xf2>
 8005796:	2b25      	cmp	r3, #37	; 0x25
 8005798:	d0c0      	beq.n	800571c <_svfiprintf_r+0x54>
 800579a:	4627      	mov	r7, r4
 800579c:	e7b9      	b.n	8005712 <_svfiprintf_r+0x4a>
 800579e:	4a3f      	ldr	r2, [pc, #252]	; (800589c <_svfiprintf_r+0x1d4>)
 80057a0:	1a80      	subs	r0, r0, r2
 80057a2:	fa0b f000 	lsl.w	r0, r11, r0
 80057a6:	4318      	orrs	r0, r3
 80057a8:	9004      	str	r0, [sp, #16]
 80057aa:	463c      	mov	r4, r7
 80057ac:	e7d3      	b.n	8005756 <_svfiprintf_r+0x8e>
 80057ae:	9a03      	ldr	r2, [sp, #12]
 80057b0:	1d11      	adds	r1, r2, #4
 80057b2:	6812      	ldr	r2, [r2, #0]
 80057b4:	9103      	str	r1, [sp, #12]
 80057b6:	2a00      	cmp	r2, #0
 80057b8:	db01      	blt.n	80057be <_svfiprintf_r+0xf6>
 80057ba:	9207      	str	r2, [sp, #28]
 80057bc:	e004      	b.n	80057c8 <_svfiprintf_r+0x100>
 80057be:	4252      	negs	r2, r2
 80057c0:	f043 0302 	orr.w	r3, r3, #2
 80057c4:	9207      	str	r2, [sp, #28]
 80057c6:	9304      	str	r3, [sp, #16]
 80057c8:	783b      	ldrb	r3, [r7, #0]
 80057ca:	2b2e      	cmp	r3, #46	; 0x2e
 80057cc:	d10e      	bne.n	80057ec <_svfiprintf_r+0x124>
 80057ce:	787b      	ldrb	r3, [r7, #1]
 80057d0:	2b2a      	cmp	r3, #42	; 0x2a
 80057d2:	f107 0101 	add.w	r1, r7, #1
 80057d6:	d132      	bne.n	800583e <_svfiprintf_r+0x176>
 80057d8:	9b03      	ldr	r3, [sp, #12]
 80057da:	1d1a      	adds	r2, r3, #4
 80057dc:	681b      	ldr	r3, [r3, #0]
 80057de:	9203      	str	r2, [sp, #12]
 80057e0:	2b00      	cmp	r3, #0
 80057e2:	bfb8      	it	lt
 80057e4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80057e8:	3702      	adds	r7, #2
 80057ea:	9305      	str	r3, [sp, #20]
 80057ec:	4c2c      	ldr	r4, [pc, #176]	; (80058a0 <_svfiprintf_r+0x1d8>)
 80057ee:	7839      	ldrb	r1, [r7, #0]
 80057f0:	2203      	movs	r2, #3
 80057f2:	4620      	mov	r0, r4
 80057f4:	f7ff fb64 	bl	8004ec0 <memchr>
 80057f8:	b138      	cbz	r0, 800580a <_svfiprintf_r+0x142>
 80057fa:	2340      	movs	r3, #64	; 0x40
 80057fc:	1b00      	subs	r0, r0, r4
 80057fe:	fa03 f000 	lsl.w	r0, r3, r0
 8005802:	9b04      	ldr	r3, [sp, #16]
 8005804:	4303      	orrs	r3, r0
 8005806:	9304      	str	r3, [sp, #16]
 8005808:	3701      	adds	r7, #1
 800580a:	7839      	ldrb	r1, [r7, #0]
 800580c:	4825      	ldr	r0, [pc, #148]	; (80058a4 <_svfiprintf_r+0x1dc>)
 800580e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005812:	2206      	movs	r2, #6
 8005814:	1c7e      	adds	r6, r7, #1
 8005816:	f7ff fb53 	bl	8004ec0 <memchr>
 800581a:	2800      	cmp	r0, #0
 800581c:	d035      	beq.n	800588a <_svfiprintf_r+0x1c2>
 800581e:	4b22      	ldr	r3, [pc, #136]	; (80058a8 <_svfiprintf_r+0x1e0>)
 8005820:	b9fb      	cbnz	r3, 8005862 <_svfiprintf_r+0x19a>
 8005822:	9b03      	ldr	r3, [sp, #12]
 8005824:	3307      	adds	r3, #7
 8005826:	f023 0307 	bic.w	r3, r3, #7
 800582a:	3308      	adds	r3, #8
 800582c:	9303      	str	r3, [sp, #12]
 800582e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005830:	444b      	add	r3, r9
 8005832:	9309      	str	r3, [sp, #36]	; 0x24
 8005834:	e76c      	b.n	8005710 <_svfiprintf_r+0x48>
 8005836:	fb00 3202 	mla	r2, r0, r2, r3
 800583a:	2101      	movs	r1, #1
 800583c:	e7a3      	b.n	8005786 <_svfiprintf_r+0xbe>
 800583e:	2300      	movs	r3, #0
 8005840:	9305      	str	r3, [sp, #20]
 8005842:	4618      	mov	r0, r3
 8005844:	240a      	movs	r4, #10
 8005846:	460f      	mov	r7, r1
 8005848:	3101      	adds	r1, #1
 800584a:	783a      	ldrb	r2, [r7, #0]
 800584c:	3a30      	subs	r2, #48	; 0x30
 800584e:	2a09      	cmp	r2, #9
 8005850:	d903      	bls.n	800585a <_svfiprintf_r+0x192>
 8005852:	2b00      	cmp	r3, #0
 8005854:	d0ca      	beq.n	80057ec <_svfiprintf_r+0x124>
 8005856:	9005      	str	r0, [sp, #20]
 8005858:	e7c8      	b.n	80057ec <_svfiprintf_r+0x124>
 800585a:	fb04 2000 	mla	r0, r4, r0, r2
 800585e:	2301      	movs	r3, #1
 8005860:	e7f1      	b.n	8005846 <_svfiprintf_r+0x17e>
 8005862:	ab03      	add	r3, sp, #12
 8005864:	9300      	str	r3, [sp, #0]
 8005866:	462a      	mov	r2, r5
 8005868:	4b10      	ldr	r3, [pc, #64]	; (80058ac <_svfiprintf_r+0x1e4>)
 800586a:	a904      	add	r1, sp, #16
 800586c:	4640      	mov	r0, r8
 800586e:	f3af 8000 	nop.w
 8005872:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8005876:	4681      	mov	r9, r0
 8005878:	d1d9      	bne.n	800582e <_svfiprintf_r+0x166>
 800587a:	89ab      	ldrh	r3, [r5, #12]
 800587c:	065b      	lsls	r3, r3, #25
 800587e:	f53f af38 	bmi.w	80056f2 <_svfiprintf_r+0x2a>
 8005882:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005884:	b01d      	add	sp, #116	; 0x74
 8005886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800588a:	ab03      	add	r3, sp, #12
 800588c:	9300      	str	r3, [sp, #0]
 800588e:	462a      	mov	r2, r5
 8005890:	4b06      	ldr	r3, [pc, #24]	; (80058ac <_svfiprintf_r+0x1e4>)
 8005892:	a904      	add	r1, sp, #16
 8005894:	4640      	mov	r0, r8
 8005896:	f7ff fcd9 	bl	800524c <_printf_i>
 800589a:	e7ea      	b.n	8005872 <_svfiprintf_r+0x1aa>
 800589c:	08005fb6 	.word	0x08005fb6
 80058a0:	08005fbc 	.word	0x08005fbc
 80058a4:	08005fc0 	.word	0x08005fc0
 80058a8:	00000000 	.word	0x00000000
 80058ac:	08005613 	.word	0x08005613

080058b0 <_read_r>:
 80058b0:	b538      	push	{r3, r4, r5, lr}
 80058b2:	4c07      	ldr	r4, [pc, #28]	; (80058d0 <_read_r+0x20>)
 80058b4:	4605      	mov	r5, r0
 80058b6:	4608      	mov	r0, r1
 80058b8:	4611      	mov	r1, r2
 80058ba:	2200      	movs	r2, #0
 80058bc:	6022      	str	r2, [r4, #0]
 80058be:	461a      	mov	r2, r3
 80058c0:	f7fe ff70 	bl	80047a4 <_read>
 80058c4:	1c43      	adds	r3, r0, #1
 80058c6:	d102      	bne.n	80058ce <_read_r+0x1e>
 80058c8:	6823      	ldr	r3, [r4, #0]
 80058ca:	b103      	cbz	r3, 80058ce <_read_r+0x1e>
 80058cc:	602b      	str	r3, [r5, #0]
 80058ce:	bd38      	pop	{r3, r4, r5, pc}
 80058d0:	2000282c 	.word	0x2000282c

080058d4 <_init>:
 80058d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80058d6:	bf00      	nop
 80058d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80058da:	bc08      	pop	{r3}
 80058dc:	469e      	mov	lr, r3
 80058de:	4770      	bx	lr

080058e0 <_fini>:
 80058e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80058e2:	bf00      	nop
 80058e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80058e6:	bc08      	pop	{r3}
 80058e8:	469e      	mov	lr, r3
 80058ea:	4770      	bx	lr

080058ec <vtable for mbed::AnalogIn>:
	...
 80058f4:	0201 0800 034b 0800 0359 0800 0399 0800     ....K...Y.......

08005904 <vtable for std_msgs::Time>:
	...
 800590c:	0203 0800 022b 0800 0269 0800 0271 0800     ....+...i...q...

0800591c <vtable for rosserial_msgs::TopicInfo>:
	...
 8005924:	0543 0800 061d 0800 0279 0800 0281 0800     C.......y.......

08005934 <vtable for rosserial_msgs::Log>:
	...
 800593c:	0517 0800 05e7 0800 0289 0800 0291 0800     ................

0800594c <vtable for rosserial_msgs::RequestParamResponse>:
	...
 8005954:	0435 0800 06d3 0800 0299 0800 02a1 0800     5...............

08005964 <vtable for rosserial_mbed::Adc>:
	...
 800596c:	02a9 0800 02e9 0800 0335 0800 033d 0800     ........5...=...

0800597c <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 8005984:	0a71 0800 0b31 0800 0345 0800 6461 0063     q...1...E...adc.
 8005994:	6436 3837 3335 3661 3431 3265 3865 3132     6d7853a614e2e821
 80059a4:	3133 3039 3836 3133 6631 6132 3266 6235     319068311f2af25b
 80059b4:	7200 736f 6573 6972 6c61 6d5f 6562 2f64     .rosserial_mbed/
 80059c4:	6441 0063 6639 6530 3839 6462 3661 3935     Adc.9f0e98bda659
 80059d4:	3138 3839 6436 6664 3335 6661 3761 3461     81986ddf53afa7a4
 80059e4:	6530 3934 3100 6131 6462 3337 6331 3532     0e49.11abd731c25
 80059f4:	3339 3233 3136 6463 3136 3338 6462 3231     933261cd6183bd12
 8005a04:	3664 3932 0035 6f72 7373 7265 6169 5f6c     d6295.rosserial_
 8005a14:	736d 7367 4c2f 676f 3000 6461 3135 3866     msgs/Log.0ad51f8
 8005a24:	6638 3463 3834 3239 3866 3163 3630 3438     8fc44892f8c10684
 8005a34:	3730 3637 3634 3030 0035 6f72 7373 7265     077646005.rosser
 8005a44:	6169 5f6c 736d 7367 542f 706f 6369 6e49     ial_msgs/TopicIn
 8005a54:	6f66 7200                                        fo.

08005a57 <rosserial_msgs::REQUESTPARAM>:
 8005a57:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 8005a67:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 8005a77:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 8005a87:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 8005a97:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 8005aa7:	6566 2e72 6300 3764 3631 6336 3437 3563     fer..cd7166c74c5
 8005ab7:	3235 3363 3131 6266 6363 6632 3565 3761     52c311fbcc2fe5a7
 8005ac7:	6362 3832 0039 7473 5f64 736d 7367 542f     bc289.std_msgs/T
 8005ad7:	6d69 0065 c300                                   ime..

08005adc <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8005adc:	0ec3 0800 0eb5 0800 0ec1 0800 682f 6d6f     ............/hom
 8005aec:	2f65 6f77 316f 3731 2f39 6f72 2f73 696c     e/woo1179/ros/li
 8005afc:	2f62 6f72 5f73 696c 2f62 7542 6666 7265     b/ros_lib/Buffer
 8005b0c:	6465 6553 6972 6c61 422f 6675 6566 6572     edSerial/Buffere
 8005b1c:	5364 7265 6169 2e6c 7063 0070 7325 2520     dSerial.cpp.%s %
 8005b2c:	2064 7562 6666 7265 6f20 6576 7772 6972     d buffer overwri
 8005b3c:	6574 2820 616d 5f78 7562 5f66 6973 657a     te (max_buf_size
 8005b4c:	203a 6425 6520 6378 6565 6564 3a64 2520     : %d exceeded: %
 8005b5c:	2964 0d21 000a 0000                         d)!.....

08005b64 <vtable for BufferedSerial>:
	...
 8005b6c:	443b 0800 443b 0800 0fad 0800 1005 0800     ;D..;D..........
 8005b7c:	0e75 0800 0e85 0800 0e89 0800 1125 0800     u...........%...
 8005b8c:	113d 0800 11b9 0800 117b 0800               =.......{...

08005b98 <us_data>:
 8005b98:	5ba0 0800 08a8 2000                         .[..... 

08005ba0 <us_interface>:
 8005ba0:	2c59 0800 2c7d 0800 2cb5 0800 2ccd 0800     Y,..},...,...,..
 8005bb0:	2c99 0800 6970 6d6e 7061 6e20 746f 6620     .,..pinmap not f
 8005bc0:	756f 646e 6620 726f 6620 6e75 7463 6f69     ound for functio
 8005bd0:	006e 6970 6d6e 7061 6d20 7369 6d2d 7461     n.pinmap mis-mat
 8005be0:	6863 7000 6e69 616d 2070 6f6e 2074 6f66     ch.pinmap not fo
 8005bf0:	6e75 2064 6f66 2072 6570 6972 6870 7265     und for peripher
 8005c00:	6c61 6300 756f 646c 6e20 746f 7020 6e69     al.could not pin
 8005c10:	756f 0074                                   out.

08005c14 <mp_stk_size>:
 8005c14:	0210 0000                                   ....

08005c18 <mp_tcb_size>:
 8005c18:	03cc                                        ..

08005c1a <mp_tmr_size>:
	...

08005c1c <os_clockrate>:
 8005c1c:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 8005c2c:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 8005c3c:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

08005c49 <os_fifo_size>:
 8005c49:	0110                                             .

08005c4a <os_flags>:
 8005c4a:	0001                                        ..

08005c4c <os_maxtaskrun>:
 8005c4c:	000f 0000                                   ....

08005c50 <os_messageQ_def_osTimerMessageQ>:
 8005c50:	0004 0000 08cc 2000                         ....... 

08005c58 <os_mutex_def_env_mutex>:
 8005c58:	08ec 2000                                   ... 

08005c5c <os_mutex_def_malloc_mutex>:
 8005c5c:	08fc 2000                                   ... 

08005c60 <os_mutex_def_singleton_mutex>:
 8005c60:	090c 2000                                   ... 

08005c64 <os_rrobin>:
 8005c64:	0005 0001                                   ....

08005c68 <os_stackinfo>:
 8005c68:	0200 0100                                   ....

08005c6c <os_thread_def_osTimerThread>:
 8005c6c:	2445 0800 0002 0000 0001 0000 0320 0000     E$.......... ...
 8005c7c:	1fd0 2000                                   ... 

08005c80 <os_trv>:
 8005c80:	481f 0001                                   .H..

08005c84 <os_mutex_def_osThreadMutex>:
 8005c84:	1920 2000 6950 6d6e 7061 6520 7272 726f      .. Pinmap error
 8005c94:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 8005ca4:	6562 2e72 0000 0000                         ber.....

08005cac <ll_pin_defines>:
 8005cac:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 8005cbc:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8005ccc:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8005cdc:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 8005cec:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 8005cfc:	2065 4441 0a43 4300 6e61 6f6e 2074 6e69     e ADC..Cannot in
 8005d0c:	7469 6169 696c 657a 5520 5241 0a54 0000     itialize UART...

08005d1c <PinMap_ADC>:
 8005d1c:	0000 0000 2000 4001 0003 0000 0001 0000     ..... .@........
 8005d2c:	2000 4001 1003 0000 0004 0000 2000 4001     . .@......... .@
 8005d3c:	4003 0000 0005 0000 2000 4001 5003 0000     .@....... .@.P..
 8005d4c:	0006 0000 2000 4001 6003 0000 0007 0000     ..... .@.`......
 8005d5c:	2000 4001 7003 0000 0010 0000 2000 4001     . .@.p....... .@
 8005d6c:	8003 0000 0011 0000 2000 4001 9003 0000     ......... .@....
 8005d7c:	0020 0000 2000 4001 a003 0000 0021 0000      .... .@....!...
 8005d8c:	2000 4001 b003 0000 0022 0000 2000 4001     . .@....".... .@
 8005d9c:	c003 0000 0023 0000 2000 4001 d003 0000     ....#.... .@....
 8005dac:	0024 0000 2000 4001 e003 0000 0025 0000     $.... .@....%...
 8005dbc:	2000 4001 f003 0000 ffff 0000 ffff ffff     . .@............
 8005dcc:	0000 0000                                   ....

08005dd0 <PinMap_ADC_Internal>:
 8005dd0:	00f0 0000 2000 4001 0003 0001 00f1 0000     ..... .@........
 8005de0:	2000 4001 1003 0001 00f2 0000 2000 4001     . .@......... .@
 8005df0:	2003 0001 ffff 0000 ffff ffff 0000 0000     . ..............

08005e00 <PinMap_UART_RX>:
 8005e00:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 8005e10:	1000 4001 0712 0000 000c 0000 1400 4001     ...@...........@
 8005e20:	0812 0000 0017 0000 1000 4001 0712 0000     ...........@....
 8005e30:	0027 0000 1400 4001 0812 0000 ffff 0000     '......@........
 8005e40:	ffff ffff 0000 0000                         ........

08005e48 <PinMap_UART_TX>:
 8005e48:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 8005e58:	1000 4001 0712 0000 000b 0000 1400 4001     ...@...........@
 8005e68:	0812 0000 0016 0000 1000 4001 0712 0000     ...........@....
 8005e78:	0026 0000 1400 4001 0812 0000 ffff 0000     &......@........
 8005e88:	ffff ffff 0000 0000                         ........

08005e90 <AHBPrescTable>:
	...
 8005e98:	0201 0403 0706 0908                         ........

08005ea0 <APBAHBPrescTable>:
 8005ea0:	0000 0000 0201 0403 0201 0403 0706 0908     ................

08005eb0 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8005eb0:	4409 0800 440d 0800 4415 0800               .D...D...D..

08005ebc <vtable for mbed::RawSerial>:
	...
 8005ec4:	443b 0800 443b 0800 4451 0800 4465 0800     ;D..;D..QD..eD..

08005ed4 <vtable for mbed::SerialBase>:
	...
 8005edc:	4479 0800 447b 0800 0f61 0800 0f99 0800     yD..{D..a.......
 8005eec:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 8005efc:	7475 6f20 2066 656d 6f6d 7972 0a0d 4500     ut of memory...E
 8005f0c:	7272 726f 6920 696e 6974 6c61 7a69 6e69     rror initializin
 8005f1c:	2067 6874 2065 756d 6574 2078 626f 656a     g the mutex obje
 8005f2c:	7463 000a                                   ct..

08005f30 <__sf_fake_stderr>:
	...

08005f50 <__sf_fake_stdin>:
	...

08005f70 <__sf_fake_stdout>:
	...

08005f90 <_global_impure_ptr>:
 8005f90:	01c8 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 8005fa0:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 8005fb0:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 8005fc0:	6665 4567 4746 0000                         efgEFG..

08005fc8 <__EH_FRAME_BEGIN__>:
 8005fc8:	0000 0000                                   ....
