
NUCLEO_F401RE/rosserial_mbed_Blink.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08004385


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 80 01 20 85 43 00 08 b9 43 00 08 b9 43 00 08     ... .C...C...C..
 8000010:	b9 43 00 08 b9 43 00 08 b9 43 00 08 00 00 00 00     .C...C...C......
	...
 800002c:	49 42 00 08 b9 43 00 08 00 00 00 00 ef 42 00 08     IB...C.......B..
 800003c:	4f 43 00 08 b9 43 00 08 b9 43 00 08 b9 43 00 08     OC...C...C...C..
 800004c:	b9 43 00 08 b9 43 00 08 b9 43 00 08 b9 43 00 08     .C...C...C...C..
 800005c:	b9 43 00 08 b9 43 00 08 b9 43 00 08 b9 43 00 08     .C...C...C...C..
 800006c:	b9 43 00 08 b9 43 00 08 b9 43 00 08 b9 43 00 08     .C...C...C...C..
 800007c:	b9 43 00 08 b9 43 00 08 b9 43 00 08 b9 43 00 08     .C...C...C...C..
	...
 800009c:	b9 43 00 08 b9 43 00 08 b9 43 00 08 b9 43 00 08     .C...C...C...C..
 80000ac:	b9 43 00 08 b9 43 00 08 b9 43 00 08 b9 43 00 08     .C...C...C...C..
 80000bc:	b9 43 00 08 b9 43 00 08 b9 43 00 08 b9 43 00 08     .C...C...C...C..
 80000cc:	b9 43 00 08 b9 43 00 08 b9 43 00 08 b9 43 00 08     .C...C...C...C..
 80000dc:	00 00 00 00 b9 43 00 08 b9 43 00 08 b9 43 00 08     .....C...C...C..
	...
 80000fc:	b9 43 00 08 00 00 00 00 b9 43 00 08 b9 43 00 08     .C.......C...C..
 800010c:	b9 43 00 08 00 00 00 00 00 00 00 00 00 00 00 00     .C..............
 800011c:	00 00 00 00 b9 43 00 08 b9 43 00 08 b9 43 00 08     .....C...C...C..
 800012c:	b9 43 00 08 b9 43 00 08 00 00 00 00 00 00 00 00     .C...C..........
	...
 800014c:	b9 43 00 08 b9 43 00 08 b9 43 00 08 b9 43 00 08     .C...C...C...C..
 800015c:	b9 43 00 08 b9 43 00 08 b9 43 00 08 00 00 00 00     .C...C...C......
	...
 8000184:	b9 43 00 08 00 00 00 00 00 00 00 00 b9 43 00 08     .C...........C..

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000230 	.word	0x20000230
 80001b0:	00000000 	.word	0x00000000
 80001b4:	0800571c 	.word	0x0800571c

080001b8 <frame_dummy>:
 80001b8:	4b0c      	ldr	r3, [pc, #48]	; (80001ec <frame_dummy+0x34>)
 80001ba:	b143      	cbz	r3, 80001ce <frame_dummy+0x16>
 80001bc:	480c      	ldr	r0, [pc, #48]	; (80001f0 <frame_dummy+0x38>)
 80001be:	490d      	ldr	r1, [pc, #52]	; (80001f4 <frame_dummy+0x3c>)
 80001c0:	b510      	push	{r4, lr}
 80001c2:	f3af 8000 	nop.w
 80001c6:	480c      	ldr	r0, [pc, #48]	; (80001f8 <frame_dummy+0x40>)
 80001c8:	6803      	ldr	r3, [r0, #0]
 80001ca:	b923      	cbnz	r3, 80001d6 <frame_dummy+0x1e>
 80001cc:	bd10      	pop	{r4, pc}
 80001ce:	480a      	ldr	r0, [pc, #40]	; (80001f8 <frame_dummy+0x40>)
 80001d0:	6803      	ldr	r3, [r0, #0]
 80001d2:	b933      	cbnz	r3, 80001e2 <frame_dummy+0x2a>
 80001d4:	4770      	bx	lr
 80001d6:	4b09      	ldr	r3, [pc, #36]	; (80001fc <frame_dummy+0x44>)
 80001d8:	2b00      	cmp	r3, #0
 80001da:	d0f7      	beq.n	80001cc <frame_dummy+0x14>
 80001dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001e0:	4718      	bx	r3
 80001e2:	4b06      	ldr	r3, [pc, #24]	; (80001fc <frame_dummy+0x44>)
 80001e4:	2b00      	cmp	r3, #0
 80001e6:	d0f5      	beq.n	80001d4 <frame_dummy+0x1c>
 80001e8:	4718      	bx	r3
 80001ea:	bf00      	nop
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800571c 	.word	0x0800571c
 80001f4:	20000234 	.word	0x20000234
 80001f8:	2000022c 	.word	0x2000022c
 80001fc:	00000000 	.word	0x00000000

08000200 <std_msgs::Time::serialize(unsigned char*) const>:
 8000200:	6843      	ldr	r3, [r0, #4]
 8000202:	700b      	strb	r3, [r1, #0]
 8000204:	6843      	ldr	r3, [r0, #4]
 8000206:	0a1b      	lsrs	r3, r3, #8
 8000208:	704b      	strb	r3, [r1, #1]
 800020a:	88c3      	ldrh	r3, [r0, #6]
 800020c:	708b      	strb	r3, [r1, #2]
 800020e:	79c3      	ldrb	r3, [r0, #7]
 8000210:	70cb      	strb	r3, [r1, #3]
 8000212:	6883      	ldr	r3, [r0, #8]
 8000214:	710b      	strb	r3, [r1, #4]
 8000216:	6883      	ldr	r3, [r0, #8]
 8000218:	0a1b      	lsrs	r3, r3, #8
 800021a:	714b      	strb	r3, [r1, #5]
 800021c:	8943      	ldrh	r3, [r0, #10]
 800021e:	718b      	strb	r3, [r1, #6]
 8000220:	7ac3      	ldrb	r3, [r0, #11]
 8000222:	71cb      	strb	r3, [r1, #7]
 8000224:	2008      	movs	r0, #8
 8000226:	4770      	bx	lr

08000228 <std_msgs::Time::deserialize(unsigned char*)>:
 8000228:	780b      	ldrb	r3, [r1, #0]
 800022a:	6043      	str	r3, [r0, #4]
 800022c:	784a      	ldrb	r2, [r1, #1]
 800022e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000232:	6043      	str	r3, [r0, #4]
 8000234:	788a      	ldrb	r2, [r1, #2]
 8000236:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800023a:	6043      	str	r3, [r0, #4]
 800023c:	78ca      	ldrb	r2, [r1, #3]
 800023e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000242:	6043      	str	r3, [r0, #4]
 8000244:	790b      	ldrb	r3, [r1, #4]
 8000246:	6083      	str	r3, [r0, #8]
 8000248:	794a      	ldrb	r2, [r1, #5]
 800024a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800024e:	6083      	str	r3, [r0, #8]
 8000250:	798a      	ldrb	r2, [r1, #6]
 8000252:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000256:	6083      	str	r3, [r0, #8]
 8000258:	79ca      	ldrb	r2, [r1, #7]
 800025a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800025e:	6083      	str	r3, [r0, #8]
 8000260:	2008      	movs	r0, #8
 8000262:	4770      	bx	lr

08000264 <std_msgs::Time::getType()>:
 8000264:	4800      	ldr	r0, [pc, #0]	; (8000268 <std_msgs::Time::getType()+0x4>)
 8000266:	4770      	bx	lr
 8000268:	08005330 	.word	0x08005330

0800026c <std_msgs::Time::getMD5()>:
 800026c:	4800      	ldr	r0, [pc, #0]	; (8000270 <std_msgs::Time::getMD5()+0x4>)
 800026e:	4770      	bx	lr
 8000270:	0800530f 	.word	0x0800530f

08000274 <rosserial_msgs::TopicInfo::getType()>:
 8000274:	4800      	ldr	r0, [pc, #0]	; (8000278 <rosserial_msgs::TopicInfo::getType()+0x4>)
 8000276:	4770      	bx	lr
 8000278:	080052a1 	.word	0x080052a1

0800027c <rosserial_msgs::TopicInfo::getMD5()>:
 800027c:	4800      	ldr	r0, [pc, #0]	; (8000280 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 800027e:	4770      	bx	lr
 8000280:	08005280 	.word	0x08005280

08000284 <rosserial_msgs::Log::getType()>:
 8000284:	4800      	ldr	r0, [pc, #0]	; (8000288 <rosserial_msgs::Log::getType()+0x4>)
 8000286:	4770      	bx	lr
 8000288:	0800526d 	.word	0x0800526d

0800028c <rosserial_msgs::Log::getMD5()>:
 800028c:	4800      	ldr	r0, [pc, #0]	; (8000290 <rosserial_msgs::Log::getMD5()+0x4>)
 800028e:	4770      	bx	lr
 8000290:	0800524c 	.word	0x0800524c

08000294 <rosserial_msgs::RequestParamResponse::getType()>:
 8000294:	4800      	ldr	r0, [pc, #0]	; (8000298 <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 8000296:	4770      	bx	lr
 8000298:	080052ba 	.word	0x080052ba

0800029c <rosserial_msgs::RequestParamResponse::getMD5()>:
 800029c:	4800      	ldr	r0, [pc, #0]	; (80002a0 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 800029e:	4770      	bx	lr
 80002a0:	0800522b 	.word	0x0800522b

080002a4 <std_msgs::Empty::serialize(unsigned char*) const>:
 80002a4:	2000      	movs	r0, #0
 80002a6:	4770      	bx	lr

080002a8 <std_msgs::Empty::deserialize(unsigned char*)>:
 80002a8:	2000      	movs	r0, #0
 80002aa:	4770      	bx	lr

080002ac <std_msgs::Empty::getType()>:
 80002ac:	4800      	ldr	r0, [pc, #0]	; (80002b0 <std_msgs::Empty::getType()+0x4>)
 80002ae:	4770      	bx	lr
 80002b0:	0800535f 	.word	0x0800535f

080002b4 <std_msgs::Empty::getMD5()>:
 80002b4:	4800      	ldr	r0, [pc, #0]	; (80002b8 <std_msgs::Empty::getMD5()+0x4>)
 80002b6:	4770      	bx	lr
 80002b8:	0800533e 	.word	0x0800533e

080002bc <ros::Subscriber<std_msgs::Empty, void>::callback(unsigned char*)>:
 80002bc:	6903      	ldr	r3, [r0, #16]
 80002be:	300c      	adds	r0, #12
 80002c0:	4718      	bx	r3

080002c2 <ros::Subscriber<std_msgs::Empty, void>::getEndpointType()>:
 80002c2:	6940      	ldr	r0, [r0, #20]
 80002c4:	4770      	bx	lr
	...

080002c8 <ros::Subscriber<std_msgs::Empty, void>::getMsgType()>:
 80002c8:	4800      	ldr	r0, [pc, #0]	; (80002cc <ros::Subscriber<std_msgs::Empty, void>::getMsgType()+0x4>)
 80002ca:	4770      	bx	lr
 80002cc:	0800535f 	.word	0x0800535f

080002d0 <ros::Subscriber<std_msgs::Empty, void>::getMsgMD5()>:
 80002d0:	4800      	ldr	r0, [pc, #0]	; (80002d4 <ros::Subscriber<std_msgs::Empty, void>::getMsgMD5()+0x4>)
 80002d2:	4770      	bx	lr
 80002d4:	0800533e 	.word	0x0800533e

080002d8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 80002d8:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 80002dc:	4770      	bx	lr
	...

080002e0 <messageCb(std_msgs::Empty const&)>:
 80002e0:	4a05      	ldr	r2, [pc, #20]	; (80002f8 <messageCb(std_msgs::Empty const&)+0x18>)
 80002e2:	6853      	ldr	r3, [r2, #4]
 80002e4:	6819      	ldr	r1, [r3, #0]
 80002e6:	6813      	ldr	r3, [r2, #0]
 80002e8:	4219      	tst	r1, r3
 80002ea:	bf0e      	itee	eq
 80002ec:	6892      	ldreq	r2, [r2, #8]
 80002ee:	68d2      	ldrne	r2, [r2, #12]
 80002f0:	041b      	lslne	r3, r3, #16
 80002f2:	6013      	str	r3, [r2, #0]
 80002f4:	4770      	bx	lr
 80002f6:	bf00      	nop
 80002f8:	2000024c 	.word	0x2000024c

080002fc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 80002fc:	3801      	subs	r0, #1
 80002fe:	2300      	movs	r3, #0
 8000300:	fa21 f203 	lsr.w	r2, r1, r3
 8000304:	3308      	adds	r3, #8
 8000306:	2b20      	cmp	r3, #32
 8000308:	f800 2f01 	strb.w	r2, [r0, #1]!
 800030c:	d1f8      	bne.n	8000300 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 800030e:	4770      	bx	lr

08000310 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 8000310:	6843      	ldr	r3, [r0, #4]
 8000312:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000316:	700b      	strb	r3, [r1, #0]
 8000318:	6843      	ldr	r3, [r0, #4]
 800031a:	0a1b      	lsrs	r3, r3, #8
 800031c:	704b      	strb	r3, [r1, #1]
 800031e:	88c3      	ldrh	r3, [r0, #6]
 8000320:	708b      	strb	r3, [r1, #2]
 8000322:	79c3      	ldrb	r3, [r0, #7]
 8000324:	70cb      	strb	r3, [r1, #3]
 8000326:	460d      	mov	r5, r1
 8000328:	1d0a      	adds	r2, r1, #4
 800032a:	4604      	mov	r4, r0
 800032c:	2100      	movs	r1, #0
 800032e:	6860      	ldr	r0, [r4, #4]
 8000330:	4281      	cmp	r1, r0
 8000332:	eba2 0305 	sub.w	r3, r2, r5
 8000336:	f102 0204 	add.w	r2, r2, #4
 800033a:	d20f      	bcs.n	800035c <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 800033c:	68e3      	ldr	r3, [r4, #12]
 800033e:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8000342:	f802 3c04 	strb.w	r3, [r2, #-4]
 8000346:	0a18      	lsrs	r0, r3, #8
 8000348:	f802 0c03 	strb.w	r0, [r2, #-3]
 800034c:	0c18      	lsrs	r0, r3, #16
 800034e:	0e1b      	lsrs	r3, r3, #24
 8000350:	f802 0c02 	strb.w	r0, [r2, #-2]
 8000354:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000358:	3101      	adds	r1, #1
 800035a:	e7e8      	b.n	800032e <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 800035c:	6922      	ldr	r2, [r4, #16]
 800035e:	54ea      	strb	r2, [r5, r3]
 8000360:	6921      	ldr	r1, [r4, #16]
 8000362:	18ea      	adds	r2, r5, r3
 8000364:	0a09      	lsrs	r1, r1, #8
 8000366:	7051      	strb	r1, [r2, #1]
 8000368:	8a61      	ldrh	r1, [r4, #18]
 800036a:	7091      	strb	r1, [r2, #2]
 800036c:	7ce1      	ldrb	r1, [r4, #19]
 800036e:	70d1      	strb	r1, [r2, #3]
 8000370:	3304      	adds	r3, #4
 8000372:	442b      	add	r3, r5
 8000374:	2100      	movs	r1, #0
 8000376:	6922      	ldr	r2, [r4, #16]
 8000378:	4291      	cmp	r1, r2
 800037a:	eba3 0605 	sub.w	r6, r3, r5
 800037e:	f103 0304 	add.w	r3, r3, #4
 8000382:	d20f      	bcs.n	80003a4 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 8000384:	69a2      	ldr	r2, [r4, #24]
 8000386:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800038a:	f803 2c04 	strb.w	r2, [r3, #-4]
 800038e:	0a10      	lsrs	r0, r2, #8
 8000390:	f803 0c03 	strb.w	r0, [r3, #-3]
 8000394:	0c10      	lsrs	r0, r2, #16
 8000396:	0e12      	lsrs	r2, r2, #24
 8000398:	f803 0c02 	strb.w	r0, [r3, #-2]
 800039c:	f803 2c01 	strb.w	r2, [r3, #-1]
 80003a0:	3101      	adds	r1, #1
 80003a2:	e7e8      	b.n	8000376 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 80003a4:	69e3      	ldr	r3, [r4, #28]
 80003a6:	55ab      	strb	r3, [r5, r6]
 80003a8:	69e2      	ldr	r2, [r4, #28]
 80003aa:	19ab      	adds	r3, r5, r6
 80003ac:	0a12      	lsrs	r2, r2, #8
 80003ae:	705a      	strb	r2, [r3, #1]
 80003b0:	8be2      	ldrh	r2, [r4, #30]
 80003b2:	709a      	strb	r2, [r3, #2]
 80003b4:	7fe2      	ldrb	r2, [r4, #31]
 80003b6:	70da      	strb	r2, [r3, #3]
 80003b8:	3604      	adds	r6, #4
 80003ba:	2700      	movs	r7, #0
 80003bc:	69e3      	ldr	r3, [r4, #28]
 80003be:	429f      	cmp	r7, r3
 80003c0:	d214      	bcs.n	80003ec <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 80003c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80003c4:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 80003c8:	f004 fd03 	bl	8004dd2 <strlen>
 80003cc:	4680      	mov	r8, r0
 80003ce:	4601      	mov	r1, r0
 80003d0:	19a8      	adds	r0, r5, r6
 80003d2:	f7ff ff93 	bl	80002fc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80003d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80003d8:	3604      	adds	r6, #4
 80003da:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 80003de:	19a8      	adds	r0, r5, r6
 80003e0:	4642      	mov	r2, r8
 80003e2:	f004 fa05 	bl	80047f0 <memcpy>
 80003e6:	4446      	add	r6, r8
 80003e8:	3701      	adds	r7, #1
 80003ea:	e7e7      	b.n	80003bc <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 80003ec:	4630      	mov	r0, r6
 80003ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080003f2 <rosserial_msgs::Log::serialize(unsigned char*) const>:
 80003f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003f4:	460e      	mov	r6, r1
 80003f6:	7903      	ldrb	r3, [r0, #4]
 80003f8:	f806 3b01 	strb.w	r3, [r6], #1
 80003fc:	4605      	mov	r5, r0
 80003fe:	6880      	ldr	r0, [r0, #8]
 8000400:	460f      	mov	r7, r1
 8000402:	f004 fce6 	bl	8004dd2 <strlen>
 8000406:	4604      	mov	r4, r0
 8000408:	4601      	mov	r1, r0
 800040a:	4630      	mov	r0, r6
 800040c:	f7ff ff76 	bl	80002fc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000410:	4622      	mov	r2, r4
 8000412:	68a9      	ldr	r1, [r5, #8]
 8000414:	1d78      	adds	r0, r7, #5
 8000416:	f004 f9eb 	bl	80047f0 <memcpy>
 800041a:	1d60      	adds	r0, r4, #5
 800041c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800041e <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 800041e:	8883      	ldrh	r3, [r0, #4]
 8000420:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000424:	700b      	strb	r3, [r1, #0]
 8000426:	8883      	ldrh	r3, [r0, #4]
 8000428:	0a1b      	lsrs	r3, r3, #8
 800042a:	704b      	strb	r3, [r1, #1]
 800042c:	4605      	mov	r5, r0
 800042e:	6880      	ldr	r0, [r0, #8]
 8000430:	460c      	mov	r4, r1
 8000432:	f004 fcce 	bl	8004dd2 <strlen>
 8000436:	4607      	mov	r7, r0
 8000438:	4601      	mov	r1, r0
 800043a:	1ca0      	adds	r0, r4, #2
 800043c:	f7ff ff5e 	bl	80002fc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000440:	463a      	mov	r2, r7
 8000442:	68a9      	ldr	r1, [r5, #8]
 8000444:	1da0      	adds	r0, r4, #6
 8000446:	f004 f9d3 	bl	80047f0 <memcpy>
 800044a:	68e8      	ldr	r0, [r5, #12]
 800044c:	f004 fcc1 	bl	8004dd2 <strlen>
 8000450:	f107 0806 	add.w	r8, r7, #6
 8000454:	4606      	mov	r6, r0
 8000456:	4601      	mov	r1, r0
 8000458:	370a      	adds	r7, #10
 800045a:	eb04 0008 	add.w	r0, r4, r8
 800045e:	f7ff ff4d 	bl	80002fc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000462:	4632      	mov	r2, r6
 8000464:	68e9      	ldr	r1, [r5, #12]
 8000466:	19e0      	adds	r0, r4, r7
 8000468:	f004 f9c2 	bl	80047f0 <memcpy>
 800046c:	6928      	ldr	r0, [r5, #16]
 800046e:	f004 fcb0 	bl	8004dd2 <strlen>
 8000472:	443e      	add	r6, r7
 8000474:	4601      	mov	r1, r0
 8000476:	4607      	mov	r7, r0
 8000478:	19a0      	adds	r0, r4, r6
 800047a:	3604      	adds	r6, #4
 800047c:	f7ff ff3e 	bl	80002fc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000480:	463a      	mov	r2, r7
 8000482:	19a0      	adds	r0, r4, r6
 8000484:	6929      	ldr	r1, [r5, #16]
 8000486:	443e      	add	r6, r7
 8000488:	f004 f9b2 	bl	80047f0 <memcpy>
 800048c:	696b      	ldr	r3, [r5, #20]
 800048e:	55a3      	strb	r3, [r4, r6]
 8000490:	4434      	add	r4, r6
 8000492:	0a1a      	lsrs	r2, r3, #8
 8000494:	7062      	strb	r2, [r4, #1]
 8000496:	0c1a      	lsrs	r2, r3, #16
 8000498:	0e1b      	lsrs	r3, r3, #24
 800049a:	70a2      	strb	r2, [r4, #2]
 800049c:	70e3      	strb	r3, [r4, #3]
 800049e:	1d30      	adds	r0, r6, #4
 80004a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080004a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 80004a4:	b510      	push	{r4, lr}
 80004a6:	2300      	movs	r3, #0
 80004a8:	6003      	str	r3, [r0, #0]
 80004aa:	3901      	subs	r1, #1
 80004ac:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80004b0:	fa02 f403 	lsl.w	r4, r2, r3
 80004b4:	6802      	ldr	r2, [r0, #0]
 80004b6:	3308      	adds	r3, #8
 80004b8:	4322      	orrs	r2, r4
 80004ba:	2b20      	cmp	r3, #32
 80004bc:	6002      	str	r2, [r0, #0]
 80004be:	d1f5      	bne.n	80004ac <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 80004c0:	bd10      	pop	{r4, pc}

080004c2 <rosserial_msgs::Log::deserialize(unsigned char*)>:
 80004c2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80004c4:	460c      	mov	r4, r1
 80004c6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80004ca:	7103      	strb	r3, [r0, #4]
 80004cc:	4605      	mov	r5, r0
 80004ce:	a801      	add	r0, sp, #4
 80004d0:	f7ff ffe8 	bl	80004a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80004d4:	9b01      	ldr	r3, [sp, #4]
 80004d6:	1d62      	adds	r2, r4, #5
 80004d8:	1d58      	adds	r0, r3, #5
 80004da:	1b11      	subs	r1, r2, r4
 80004dc:	4288      	cmp	r0, r1
 80004de:	d904      	bls.n	80004ea <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 80004e0:	f812 1b01 	ldrb.w	r1, [r2], #1
 80004e4:	f802 1c02 	strb.w	r1, [r2, #-2]
 80004e8:	e7f7      	b.n	80004da <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 80004ea:	4423      	add	r3, r4
 80004ec:	2200      	movs	r2, #0
 80004ee:	3404      	adds	r4, #4
 80004f0:	711a      	strb	r2, [r3, #4]
 80004f2:	60ac      	str	r4, [r5, #8]
 80004f4:	b003      	add	sp, #12
 80004f6:	bd30      	pop	{r4, r5, pc}

080004f8 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 80004f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004fa:	780b      	ldrb	r3, [r1, #0]
 80004fc:	8083      	strh	r3, [r0, #4]
 80004fe:	784a      	ldrb	r2, [r1, #1]
 8000500:	b085      	sub	sp, #20
 8000502:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000506:	8083      	strh	r3, [r0, #4]
 8000508:	460c      	mov	r4, r1
 800050a:	4606      	mov	r6, r0
 800050c:	3102      	adds	r1, #2
 800050e:	a801      	add	r0, sp, #4
 8000510:	f7ff ffc8 	bl	80004a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000514:	9f01      	ldr	r7, [sp, #4]
 8000516:	1da3      	adds	r3, r4, #6
 8000518:	1dbd      	adds	r5, r7, #6
 800051a:	1b1a      	subs	r2, r3, r4
 800051c:	4295      	cmp	r5, r2
 800051e:	d904      	bls.n	800052a <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 8000520:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000524:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000528:	e7f7      	b.n	800051a <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 800052a:	19e3      	adds	r3, r4, r7
 800052c:	2200      	movs	r2, #0
 800052e:	715a      	strb	r2, [r3, #5]
 8000530:	1d63      	adds	r3, r4, #5
 8000532:	60b3      	str	r3, [r6, #8]
 8000534:	1961      	adds	r1, r4, r5
 8000536:	a802      	add	r0, sp, #8
 8000538:	f7ff ffb4 	bl	80004a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800053c:	1d2b      	adds	r3, r5, #4
 800053e:	9d02      	ldr	r5, [sp, #8]
 8000540:	f107 020a 	add.w	r2, r7, #10
 8000544:	441d      	add	r5, r3
 8000546:	4422      	add	r2, r4
 8000548:	1b11      	subs	r1, r2, r4
 800054a:	428d      	cmp	r5, r1
 800054c:	d904      	bls.n	8000558 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 800054e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000552:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000556:	e7f7      	b.n	8000548 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 8000558:	1961      	adds	r1, r4, r5
 800055a:	3b01      	subs	r3, #1
 800055c:	4423      	add	r3, r4
 800055e:	2200      	movs	r2, #0
 8000560:	f801 2c01 	strb.w	r2, [r1, #-1]
 8000564:	a803      	add	r0, sp, #12
 8000566:	60f3      	str	r3, [r6, #12]
 8000568:	f7ff ff9c 	bl	80004a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800056c:	9803      	ldr	r0, [sp, #12]
 800056e:	3504      	adds	r5, #4
 8000570:	4428      	add	r0, r5
 8000572:	1963      	adds	r3, r4, r5
 8000574:	1b1a      	subs	r2, r3, r4
 8000576:	4290      	cmp	r0, r2
 8000578:	d904      	bls.n	8000584 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 800057a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800057e:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000582:	e7f7      	b.n	8000574 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 8000584:	1822      	adds	r2, r4, r0
 8000586:	3d01      	subs	r5, #1
 8000588:	2300      	movs	r3, #0
 800058a:	4425      	add	r5, r4
 800058c:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000590:	6135      	str	r5, [r6, #16]
 8000592:	7893      	ldrb	r3, [r2, #2]
 8000594:	7851      	ldrb	r1, [r2, #1]
 8000596:	78d2      	ldrb	r2, [r2, #3]
 8000598:	041b      	lsls	r3, r3, #16
 800059a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800059e:	5c21      	ldrb	r1, [r4, r0]
 80005a0:	430b      	orrs	r3, r1
 80005a2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80005a6:	3004      	adds	r0, #4
 80005a8:	6173      	str	r3, [r6, #20]
 80005aa:	b005      	add	sp, #20
 80005ac:	bdf0      	pop	{r4, r5, r6, r7, pc}

080005ae <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 80005ae:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80005b2:	6843      	ldr	r3, [r0, #4]
 80005b4:	680d      	ldr	r5, [r1, #0]
 80005b6:	429d      	cmp	r5, r3
 80005b8:	4604      	mov	r4, r0
 80005ba:	460e      	mov	r6, r1
 80005bc:	d904      	bls.n	80005c8 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 80005be:	00a9      	lsls	r1, r5, #2
 80005c0:	68c0      	ldr	r0, [r0, #12]
 80005c2:	f004 fbab 	bl	8004d1c <realloc>
 80005c6:	60e0      	str	r0, [r4, #12]
 80005c8:	6065      	str	r5, [r4, #4]
 80005ca:	1d32      	adds	r2, r6, #4
 80005cc:	2100      	movs	r1, #0
 80005ce:	6860      	ldr	r0, [r4, #4]
 80005d0:	4281      	cmp	r1, r0
 80005d2:	eba2 0306 	sub.w	r3, r2, r6
 80005d6:	f102 0204 	add.w	r2, r2, #4
 80005da:	d213      	bcs.n	8000604 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 80005dc:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 80005e0:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 80005e4:	041b      	lsls	r3, r3, #16
 80005e6:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80005ea:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 80005ee:	4303      	orrs	r3, r0
 80005f0:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 80005f4:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 80005f8:	68e0      	ldr	r0, [r4, #12]
 80005fa:	60a3      	str	r3, [r4, #8]
 80005fc:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000600:	3101      	adds	r1, #1
 8000602:	e7e4      	b.n	80005ce <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 8000604:	18f2      	adds	r2, r6, r3
 8000606:	5cf1      	ldrb	r1, [r6, r3]
 8000608:	7895      	ldrb	r5, [r2, #2]
 800060a:	7850      	ldrb	r0, [r2, #1]
 800060c:	78d2      	ldrb	r2, [r2, #3]
 800060e:	042d      	lsls	r5, r5, #16
 8000610:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8000614:	430d      	orrs	r5, r1
 8000616:	1d1f      	adds	r7, r3, #4
 8000618:	6923      	ldr	r3, [r4, #16]
 800061a:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800061e:	429d      	cmp	r5, r3
 8000620:	d904      	bls.n	800062c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 8000622:	00a9      	lsls	r1, r5, #2
 8000624:	69a0      	ldr	r0, [r4, #24]
 8000626:	f004 fb79 	bl	8004d1c <realloc>
 800062a:	61a0      	str	r0, [r4, #24]
 800062c:	6125      	str	r5, [r4, #16]
 800062e:	19f3      	adds	r3, r6, r7
 8000630:	2100      	movs	r1, #0
 8000632:	6922      	ldr	r2, [r4, #16]
 8000634:	4291      	cmp	r1, r2
 8000636:	eba3 0506 	sub.w	r5, r3, r6
 800063a:	f103 0304 	add.w	r3, r3, #4
 800063e:	d213      	bcs.n	8000668 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000640:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8000644:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000648:	0412      	lsls	r2, r2, #16
 800064a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800064e:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8000652:	4302      	orrs	r2, r0
 8000654:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8000658:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 800065c:	69a0      	ldr	r0, [r4, #24]
 800065e:	6162      	str	r2, [r4, #20]
 8000660:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8000664:	3101      	adds	r1, #1
 8000666:	e7e4      	b.n	8000632 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 8000668:	1973      	adds	r3, r6, r5
 800066a:	5d72      	ldrb	r2, [r6, r5]
 800066c:	789f      	ldrb	r7, [r3, #2]
 800066e:	7859      	ldrb	r1, [r3, #1]
 8000670:	78db      	ldrb	r3, [r3, #3]
 8000672:	043f      	lsls	r7, r7, #16
 8000674:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 8000678:	4317      	orrs	r7, r2
 800067a:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 800067e:	69e3      	ldr	r3, [r4, #28]
 8000680:	429f      	cmp	r7, r3
 8000682:	f105 0504 	add.w	r5, r5, #4
 8000686:	d904      	bls.n	8000692 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 8000688:	00b9      	lsls	r1, r7, #2
 800068a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800068c:	f004 fb46 	bl	8004d1c <realloc>
 8000690:	6260      	str	r0, [r4, #36]	; 0x24
 8000692:	61e7      	str	r7, [r4, #28]
 8000694:	2700      	movs	r7, #0
 8000696:	46b8      	mov	r8, r7
 8000698:	69e3      	ldr	r3, [r4, #28]
 800069a:	429f      	cmp	r7, r3
 800069c:	d21a      	bcs.n	80006d4 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 800069e:	1971      	adds	r1, r6, r5
 80006a0:	a801      	add	r0, sp, #4
 80006a2:	f7ff feff 	bl	80004a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80006a6:	1d2b      	adds	r3, r5, #4
 80006a8:	9d01      	ldr	r5, [sp, #4]
 80006aa:	18f2      	adds	r2, r6, r3
 80006ac:	441d      	add	r5, r3
 80006ae:	1b91      	subs	r1, r2, r6
 80006b0:	42a9      	cmp	r1, r5
 80006b2:	d204      	bcs.n	80006be <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 80006b4:	f812 1b01 	ldrb.w	r1, [r2], #1
 80006b8:	f802 1c02 	strb.w	r1, [r2, #-2]
 80006bc:	e7f7      	b.n	80006ae <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 80006be:	1972      	adds	r2, r6, r5
 80006c0:	3b01      	subs	r3, #1
 80006c2:	f802 8c01 	strb.w	r8, [r2, #-1]
 80006c6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80006c8:	4433      	add	r3, r6
 80006ca:	6223      	str	r3, [r4, #32]
 80006cc:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 80006d0:	3701      	adds	r7, #1
 80006d2:	e7e1      	b.n	8000698 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 80006d4:	4628      	mov	r0, r5
 80006d6:	b002      	add	sp, #8
 80006d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080006dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 80006dc:	b530      	push	{r4, r5, lr}
 80006de:	b085      	sub	sp, #20
 80006e0:	4604      	mov	r4, r0
 80006e2:	4b09      	ldr	r3, [pc, #36]	; (8000708 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 80006e4:	9301      	str	r3, [sp, #4]
 80006e6:	2300      	movs	r3, #0
 80006e8:	9302      	str	r3, [sp, #8]
 80006ea:	9303      	str	r3, [sp, #12]
 80006ec:	f854 3bec 	ldr.w	r3, [r4], #236
 80006f0:	aa01      	add	r2, sp, #4
 80006f2:	681b      	ldr	r3, [r3, #0]
 80006f4:	210a      	movs	r1, #10
 80006f6:	4605      	mov	r5, r0
 80006f8:	4798      	blx	r3
 80006fa:	4620      	mov	r0, r4
 80006fc:	f003 fb00 	bl	8003d00 <mbed::Timer::read_ms()>
 8000700:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 8000704:	b005      	add	sp, #20
 8000706:	bd30      	pop	{r4, r5, pc}
 8000708:	08005184 	.word	0x08005184

0800070c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 800070c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000710:	b086      	sub	sp, #24
 8000712:	4b2b      	ldr	r3, [pc, #172]	; (80007c0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000714:	9300      	str	r3, [sp, #0]
 8000716:	2200      	movs	r2, #0
 8000718:	4b2a      	ldr	r3, [pc, #168]	; (80007c4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 800071a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800071e:	4605      	mov	r5, r0
 8000720:	9302      	str	r3, [sp, #8]
 8000722:	9303      	str	r3, [sp, #12]
 8000724:	9304      	str	r3, [sp, #16]
 8000726:	9205      	str	r2, [sp, #20]
 8000728:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 800072c:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 8000730:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000734:	6823      	ldr	r3, [r4, #0]
 8000736:	b1bb      	cbz	r3, 8000768 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000738:	6858      	ldr	r0, [r3, #4]
 800073a:	689a      	ldr	r2, [r3, #8]
 800073c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000740:	681a      	ldr	r2, [r3, #0]
 8000742:	6803      	ldr	r3, [r0, #0]
 8000744:	9202      	str	r2, [sp, #8]
 8000746:	689b      	ldr	r3, [r3, #8]
 8000748:	4798      	blx	r3
 800074a:	6823      	ldr	r3, [r4, #0]
 800074c:	9003      	str	r0, [sp, #12]
 800074e:	6858      	ldr	r0, [r3, #4]
 8000750:	6803      	ldr	r3, [r0, #0]
 8000752:	68db      	ldr	r3, [r3, #12]
 8000754:	4798      	blx	r3
 8000756:	6821      	ldr	r1, [r4, #0]
 8000758:	682b      	ldr	r3, [r5, #0]
 800075a:	9004      	str	r0, [sp, #16]
 800075c:	9705      	str	r7, [sp, #20]
 800075e:	681b      	ldr	r3, [r3, #0]
 8000760:	6909      	ldr	r1, [r1, #16]
 8000762:	466a      	mov	r2, sp
 8000764:	4628      	mov	r0, r5
 8000766:	4798      	blx	r3
 8000768:	3404      	adds	r4, #4
 800076a:	42b4      	cmp	r4, r6
 800076c:	d1e2      	bne.n	8000734 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 800076e:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 8000772:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000776:	6820      	ldr	r0, [r4, #0]
 8000778:	b1c8      	cbz	r0, 80007ae <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 800077a:	6843      	ldr	r3, [r0, #4]
 800077c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000780:	6883      	ldr	r3, [r0, #8]
 8000782:	9302      	str	r3, [sp, #8]
 8000784:	6803      	ldr	r3, [r0, #0]
 8000786:	689b      	ldr	r3, [r3, #8]
 8000788:	4798      	blx	r3
 800078a:	9003      	str	r0, [sp, #12]
 800078c:	6820      	ldr	r0, [r4, #0]
 800078e:	6803      	ldr	r3, [r0, #0]
 8000790:	68db      	ldr	r3, [r3, #12]
 8000792:	4798      	blx	r3
 8000794:	682b      	ldr	r3, [r5, #0]
 8000796:	9004      	str	r0, [sp, #16]
 8000798:	6820      	ldr	r0, [r4, #0]
 800079a:	f8d3 8000 	ldr.w	r8, [r3]
 800079e:	6803      	ldr	r3, [r0, #0]
 80007a0:	9705      	str	r7, [sp, #20]
 80007a2:	685b      	ldr	r3, [r3, #4]
 80007a4:	4798      	blx	r3
 80007a6:	466a      	mov	r2, sp
 80007a8:	4601      	mov	r1, r0
 80007aa:	4628      	mov	r0, r5
 80007ac:	47c0      	blx	r8
 80007ae:	3404      	adds	r4, #4
 80007b0:	42a6      	cmp	r6, r4
 80007b2:	d1e0      	bne.n	8000776 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 80007b4:	2301      	movs	r3, #1
 80007b6:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 80007ba:	b006      	add	sp, #24
 80007bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80007c0:	0800519c 	.word	0x0800519c
 80007c4:	080053f3 	.word	0x080053f3

080007c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 80007c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007ca:	b085      	sub	sp, #20
 80007cc:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 80007d0:	4b1f      	ldr	r3, [pc, #124]	; (8000850 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 80007d2:	9301      	str	r3, [sp, #4]
 80007d4:	4604      	mov	r4, r0
 80007d6:	2300      	movs	r3, #0
 80007d8:	4628      	mov	r0, r5
 80007da:	9302      	str	r3, [sp, #8]
 80007dc:	9303      	str	r3, [sp, #12]
 80007de:	460e      	mov	r6, r1
 80007e0:	f003 fa8e 	bl	8003d00 <mbed::Timer::read_ms()>
 80007e4:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 80007e8:	4631      	mov	r1, r6
 80007ea:	1a87      	subs	r7, r0, r2
 80007ec:	a801      	add	r0, sp, #4
 80007ee:	f7ff fd1b 	bl	8000228 <std_msgs::Time::deserialize(unsigned char*)>
 80007f2:	9b02      	ldr	r3, [sp, #8]
 80007f4:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 80007f8:	fbb7 f2f6 	udiv	r2, r7, r6
 80007fc:	4413      	add	r3, r2
 80007fe:	9302      	str	r3, [sp, #8]
 8000800:	fb06 7212 	mls	r2, r6, r2, r7
 8000804:	9b03      	ldr	r3, [sp, #12]
 8000806:	4f13      	ldr	r7, [pc, #76]	; (8000854 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 8000808:	4628      	mov	r0, r5
 800080a:	fb07 3202 	mla	r2, r7, r2, r3
 800080e:	9203      	str	r2, [sp, #12]
 8000810:	f003 fa76 	bl	8003d00 <mbed::Timer::read_ms()>
 8000814:	9a02      	ldr	r2, [sp, #8]
 8000816:	fbb0 f3f6 	udiv	r3, r0, r6
 800081a:	3a01      	subs	r2, #1
 800081c:	1ad2      	subs	r2, r2, r3
 800081e:	9903      	ldr	r1, [sp, #12]
 8000820:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000824:	4a0c      	ldr	r2, [pc, #48]	; (8000858 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 8000826:	fb06 0313 	mls	r3, r6, r3, r0
 800082a:	440a      	add	r2, r1
 800082c:	fb07 2313 	mls	r3, r7, r3, r2
 8000830:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8000834:	f504 7182 	add.w	r1, r4, #260	; 0x104
 8000838:	f504 7080 	add.w	r0, r4, #256	; 0x100
 800083c:	f000 fa4c 	bl	8000cd8 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000840:	4628      	mov	r0, r5
 8000842:	f003 fa5d 	bl	8003d00 <mbed::Timer::read_ms()>
 8000846:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 800084a:	b005      	add	sp, #20
 800084c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800084e:	bf00      	nop
 8000850:	08005184 	.word	0x08005184
 8000854:	000f4240 	.word	0x000f4240
 8000858:	3b9aca00 	.word	0x3b9aca00

0800085c <_GLOBAL__sub_I_nh>:
 800085c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800085e:	4c35      	ldr	r4, [pc, #212]	; (8000934 <_GLOBAL__sub_I_nh+0xd8>)
 8000860:	4b35      	ldr	r3, [pc, #212]	; (8000938 <_GLOBAL__sub_I_nh+0xdc>)
 8000862:	4620      	mov	r0, r4
 8000864:	2500      	movs	r5, #0
 8000866:	f840 3b04 	str.w	r3, [r0], #4
 800086a:	2304      	movs	r3, #4
 800086c:	2203      	movs	r2, #3
 800086e:	2102      	movs	r1, #2
 8000870:	e88d 0028 	stmia.w	sp, {r3, r5}
 8000874:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000878:	f000 fb24 	bl	8000ec4 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 800087c:	f104 00ec 	add.w	r0, r4, #236	; 0xec
 8000880:	f003 fa54 	bl	8003d2c <mbed::Timer::Timer()>
 8000884:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000888:	f104 00ec 	add.w	r0, r4, #236	; 0xec
 800088c:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 8000890:	f003 fa0a 	bl	8003ca8 <mbed::Timer::start()>
 8000894:	4b29      	ldr	r3, [pc, #164]	; (800093c <_GLOBAL__sub_I_nh+0xe0>)
 8000896:	f884 55e8 	strb.w	r5, [r4, #1512]	; 0x5e8
 800089a:	f8c4 35fc 	str.w	r3, [r4, #1532]	; 0x5fc
 800089e:	f8c4 5600 	str.w	r5, [r4, #1536]	; 0x600
 80008a2:	f8c4 5608 	str.w	r5, [r4, #1544]	; 0x608
 80008a6:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 80008aa:	f8c4 5614 	str.w	r5, [r4, #1556]	; 0x614
 80008ae:	f8c4 5618 	str.w	r5, [r4, #1560]	; 0x618
 80008b2:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
 80008b6:	462a      	mov	r2, r5
 80008b8:	1963      	adds	r3, r4, r5
 80008ba:	3504      	adds	r5, #4
 80008bc:	2d64      	cmp	r5, #100	; 0x64
 80008be:	f8c3 250c 	str.w	r2, [r3, #1292]	; 0x50c
 80008c2:	d1f9      	bne.n	80008b8 <_GLOBAL__sub_I_nh+0x5c>
 80008c4:	2300      	movs	r3, #0
 80008c6:	4619      	mov	r1, r3
 80008c8:	18e2      	adds	r2, r4, r3
 80008ca:	3304      	adds	r3, #4
 80008cc:	2b64      	cmp	r3, #100	; 0x64
 80008ce:	f8c2 1570 	str.w	r1, [r2, #1392]	; 0x570
 80008d2:	d1f9      	bne.n	80008c8 <_GLOBAL__sub_I_nh+0x6c>
 80008d4:	2300      	movs	r3, #0
 80008d6:	4619      	mov	r1, r3
 80008d8:	18e2      	adds	r2, r4, r3
 80008da:	3301      	adds	r3, #1
 80008dc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80008e0:	f882 110c 	strb.w	r1, [r2, #268]	; 0x10c
 80008e4:	d1f8      	bne.n	80008d8 <_GLOBAL__sub_I_nh+0x7c>
 80008e6:	2300      	movs	r3, #0
 80008e8:	461a      	mov	r2, r3
 80008ea:	18e1      	adds	r1, r4, r3
 80008ec:	3301      	adds	r3, #1
 80008ee:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80008f2:	f881 230c 	strb.w	r2, [r1, #780]	; 0x30c
 80008f6:	d1f8      	bne.n	80008ea <_GLOBAL__sub_I_nh+0x8e>
 80008f8:	f8c4 2108 	str.w	r2, [r4, #264]	; 0x108
 80008fc:	4910      	ldr	r1, [pc, #64]	; (8000940 <_GLOBAL__sub_I_nh+0xe4>)
 80008fe:	4a11      	ldr	r2, [pc, #68]	; (8000944 <_GLOBAL__sub_I_nh+0xe8>)
 8000900:	480c      	ldr	r0, [pc, #48]	; (8000934 <_GLOBAL__sub_I_nh+0xd8>)
 8000902:	f003 fc49 	bl	8004198 <__aeabi_atexit>
 8000906:	221c      	movs	r2, #28
 8000908:	2100      	movs	r1, #0
 800090a:	480f      	ldr	r0, [pc, #60]	; (8000948 <_GLOBAL__sub_I_nh+0xec>)
 800090c:	f003 ff95 	bl	800483a <memset>
 8000910:	2105      	movs	r1, #5
 8000912:	480d      	ldr	r0, [pc, #52]	; (8000948 <_GLOBAL__sub_I_nh+0xec>)
 8000914:	f000 fc08 	bl	8001128 <gpio_init_out>
 8000918:	4b0c      	ldr	r3, [pc, #48]	; (800094c <_GLOBAL__sub_I_nh+0xf0>)
 800091a:	4a0d      	ldr	r2, [pc, #52]	; (8000950 <_GLOBAL__sub_I_nh+0xf4>)
 800091c:	601a      	str	r2, [r3, #0]
 800091e:	4a0d      	ldr	r2, [pc, #52]	; (8000954 <_GLOBAL__sub_I_nh+0xf8>)
 8000920:	60da      	str	r2, [r3, #12]
 8000922:	4a0d      	ldr	r2, [pc, #52]	; (8000958 <_GLOBAL__sub_I_nh+0xfc>)
 8000924:	611a      	str	r2, [r3, #16]
 8000926:	2201      	movs	r2, #1
 8000928:	615a      	str	r2, [r3, #20]
 800092a:	4a0c      	ldr	r2, [pc, #48]	; (800095c <_GLOBAL__sub_I_nh+0x100>)
 800092c:	609a      	str	r2, [r3, #8]
 800092e:	b003      	add	sp, #12
 8000930:	bd30      	pop	{r4, r5, pc}
 8000932:	bf00      	nop
 8000934:	20000268 	.word	0x20000268
 8000938:	080051fc 	.word	0x080051fc
 800093c:	080051cc 	.word	0x080051cc
 8000940:	08000c99 	.word	0x08000c99
 8000944:	20000194 	.word	0x20000194
 8000948:	2000024c 	.word	0x2000024c
 800094c:	2000088c 	.word	0x2000088c
 8000950:	08005210 	.word	0x08005210
 8000954:	080051e4 	.word	0x080051e4
 8000958:	080002e1 	.word	0x080002e1
 800095c:	08005220 	.word	0x08005220

08000960 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000960:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8000964:	f100 08ec 	add.w	r8, r0, #236	; 0xec
 8000968:	4604      	mov	r4, r0
 800096a:	4640      	mov	r0, r8
 800096c:	f003 f9c8 	bl	8003d00 <mbed::Timer::read_ms()>
 8000970:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 8000974:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000978:	1ac3      	subs	r3, r0, r3
 800097a:	4293      	cmp	r3, r2
 800097c:	bf84      	itt	hi
 800097e:	2300      	movhi	r3, #0
 8000980:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 8000984:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 8000988:	4605      	mov	r5, r0
 800098a:	b133      	cbz	r3, 800099a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 800098c:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 8000990:	4283      	cmp	r3, r0
 8000992:	bf3c      	itt	cc
 8000994:	2300      	movcc	r3, #0
 8000996:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 800099a:	f104 0904 	add.w	r9, r4, #4
 800099e:	2600      	movs	r6, #0
 80009a0:	f504 7786 	add.w	r7, r4, #268	; 0x10c
 80009a4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80009a8:	b9ab      	cbnz	r3, 80009d6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 80009aa:	4648      	mov	r0, r9
 80009ac:	f000 f9a2 	bl	8000cf4 <BufferedSerial::readable()>
 80009b0:	b9e8      	cbnz	r0, 80009ee <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 80009b2:	f894 05e8 	ldrb.w	r0, [r4, #1512]	; 0x5e8
 80009b6:	b160      	cbz	r0, 80009d2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 80009b8:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 80009bc:	f640 12c4 	movw	r2, #2500	; 0x9c4
 80009c0:	1aeb      	subs	r3, r5, r3
 80009c2:	4293      	cmp	r3, r2
 80009c4:	d904      	bls.n	80009d0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 80009c6:	4620      	mov	r0, r4
 80009c8:	f7ff fe88 	bl	80006dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 80009cc:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 80009d0:	2000      	movs	r0, #0
 80009d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80009d6:	4640      	mov	r0, r8
 80009d8:	f003 f992 	bl	8003d00 <mbed::Timer::read_ms()>
 80009dc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80009e0:	1b40      	subs	r0, r0, r5
 80009e2:	4298      	cmp	r0, r3
 80009e4:	d9e1      	bls.n	80009aa <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 80009e6:	f06f 0001 	mvn.w	r0, #1
 80009ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80009ee:	4648      	mov	r0, r9
 80009f0:	f000 f98a 	bl	8000d08 <BufferedSerial::getc()>
 80009f4:	2800      	cmp	r0, #0
 80009f6:	dbdc      	blt.n	80009b2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 80009f8:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 80009fc:	f8d4 a5d4 	ldr.w	r10, [r4, #1492]	; 0x5d4
 8000a00:	4403      	add	r3, r0
 8000a02:	f1ba 0f07 	cmp.w	r10, #7
 8000a06:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 8000a0a:	d112      	bne.n	8000a32 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 8000a0c:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8000a10:	1c5a      	adds	r2, r3, #1
 8000a12:	4423      	add	r3, r4
 8000a14:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 8000a18:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 8000a1c:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000a20:	3b01      	subs	r3, #1
 8000a22:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000a26:	2b00      	cmp	r3, #0
 8000a28:	d1bc      	bne.n	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a2a:	2308      	movs	r3, #8
 8000a2c:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000a30:	e7b8      	b.n	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a32:	f1ba 0f00 	cmp.w	r10, #0
 8000a36:	d114      	bne.n	8000a62 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 8000a38:	28ff      	cmp	r0, #255	; 0xff
 8000a3a:	d107      	bne.n	8000a4c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 8000a3c:	2301      	movs	r3, #1
 8000a3e:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000a42:	f105 0314 	add.w	r3, r5, #20
 8000a46:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 8000a4a:	e7ab      	b.n	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a4c:	4640      	mov	r0, r8
 8000a4e:	f003 f957 	bl	8003d00 <mbed::Timer::read_ms()>
 8000a52:	f241 3388 	movw	r3, #5000	; 0x1388
 8000a56:	1b40      	subs	r0, r0, r5
 8000a58:	4298      	cmp	r0, r3
 8000a5a:	d9a3      	bls.n	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a5c:	f884 a5e8 	strb.w	r10, [r4, #1512]	; 0x5e8
 8000a60:	e7c1      	b.n	80009e6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 8000a62:	f1ba 0f01 	cmp.w	r10, #1
 8000a66:	d10d      	bne.n	8000a84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 8000a68:	28fe      	cmp	r0, #254	; 0xfe
 8000a6a:	d101      	bne.n	8000a70 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 8000a6c:	2302      	movs	r3, #2
 8000a6e:	e7dd      	b.n	8000a2c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000a70:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000a74:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000a78:	2b00      	cmp	r3, #0
 8000a7a:	d193      	bne.n	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a7c:	4620      	mov	r0, r4
 8000a7e:	f7ff fe2d 	bl	80006dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000a82:	e78f      	b.n	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a84:	f1ba 0f02 	cmp.w	r10, #2
 8000a88:	d109      	bne.n	8000a9e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8000a8a:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000a8e:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 8000a92:	2303      	movs	r3, #3
 8000a94:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000a98:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8000a9c:	e782      	b.n	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a9e:	f1ba 0f03 	cmp.w	r10, #3
 8000aa2:	d107      	bne.n	8000ab4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 8000aa4:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000aa8:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000aac:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000ab0:	2304      	movs	r3, #4
 8000ab2:	e7bb      	b.n	8000a2c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000ab4:	f1ba 0f04 	cmp.w	r10, #4
 8000ab8:	d10b      	bne.n	8000ad2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8000aba:	425a      	negs	r2, r3
 8000abc:	b2d2      	uxtb	r2, r2
 8000abe:	b2db      	uxtb	r3, r3
 8000ac0:	bf58      	it	pl
 8000ac2:	4253      	negpl	r3, r2
 8000ac4:	2bff      	cmp	r3, #255	; 0xff
 8000ac6:	d101      	bne.n	8000acc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 8000ac8:	2305      	movs	r3, #5
 8000aca:	e7af      	b.n	8000a2c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000acc:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000ad0:	e768      	b.n	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ad2:	f1ba 0f05 	cmp.w	r10, #5
 8000ad6:	d103      	bne.n	8000ae0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 8000ad8:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000adc:	2306      	movs	r3, #6
 8000ade:	e7d9      	b.n	8000a94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 8000ae0:	f1ba 0f06 	cmp.w	r10, #6
 8000ae4:	d10b      	bne.n	8000afe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 8000ae6:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000aea:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000aee:	2307      	movs	r3, #7
 8000af0:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000af4:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000af8:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000afc:	e793      	b.n	8000a26 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 8000afe:	f1ba 0f08 	cmp.w	r10, #8
 8000b02:	f47f af4f 	bne.w	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b06:	425a      	negs	r2, r3
 8000b08:	b2d2      	uxtb	r2, r2
 8000b0a:	b2db      	uxtb	r3, r3
 8000b0c:	bf58      	it	pl
 8000b0e:	4253      	negpl	r3, r2
 8000b10:	2bff      	cmp	r3, #255	; 0xff
 8000b12:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000b16:	f47f af45 	bne.w	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b1a:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000b1e:	b96b      	cbnz	r3, 8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 8000b20:	4620      	mov	r0, r4
 8000b22:	f7ff fddb 	bl	80006dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000b26:	4620      	mov	r0, r4
 8000b28:	f7ff fdf0 	bl	800070c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8000b2c:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000b30:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8000b34:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000b38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000b3c:	2b0a      	cmp	r3, #10
 8000b3e:	d104      	bne.n	8000b4a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 8000b40:	4639      	mov	r1, r7
 8000b42:	4620      	mov	r0, r4
 8000b44:	f7ff fe40 	bl	80007c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8000b48:	e72c      	b.n	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b4a:	2b06      	cmp	r3, #6
 8000b4c:	d108      	bne.n	8000b60 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 8000b4e:	4639      	mov	r1, r7
 8000b50:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 8000b54:	f7ff fd2b 	bl	80005ae <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8000b58:	2301      	movs	r3, #1
 8000b5a:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 8000b5e:	e721      	b.n	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b60:	2b0b      	cmp	r3, #11
 8000b62:	d102      	bne.n	8000b6a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 8000b64:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 8000b68:	e71c      	b.n	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b6a:	33f8      	adds	r3, #248	; 0xf8
 8000b6c:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8000b70:	2800      	cmp	r0, #0
 8000b72:	f43f af17 	beq.w	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b76:	6803      	ldr	r3, [r0, #0]
 8000b78:	4639      	mov	r1, r7
 8000b7a:	681b      	ldr	r3, [r3, #0]
 8000b7c:	4798      	blx	r3
 8000b7e:	e711      	b.n	80009a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

08000b80 <main>:
 8000b80:	4c13      	ldr	r4, [pc, #76]	; (8000bd0 <main+0x50>)
 8000b82:	b508      	push	{r3, lr}
 8000b84:	f8d4 10e8 	ldr.w	r1, [r4, #232]	; 0xe8
 8000b88:	1d20      	adds	r0, r4, #4
 8000b8a:	f003 f8fe 	bl	8003d8a <mbed::SerialBase::baud(int)>
 8000b8e:	2300      	movs	r3, #0
 8000b90:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000b94:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000b98:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
 8000b9c:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 8000ba0:	f204 526c 	addw	r2, r4, #1388	; 0x56c
 8000ba4:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8000ba8:	b971      	cbnz	r1, 8000bc8 <main+0x48>
 8000baa:	f503 71ae 	add.w	r1, r3, #348	; 0x15c
 8000bae:	4a09      	ldr	r2, [pc, #36]	; (8000bd4 <main+0x54>)
 8000bb0:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
 8000bb4:	3364      	adds	r3, #100	; 0x64
 8000bb6:	6053      	str	r3, [r2, #4]
 8000bb8:	4c05      	ldr	r4, [pc, #20]	; (8000bd0 <main+0x50>)
 8000bba:	4620      	mov	r0, r4
 8000bbc:	f7ff fed0 	bl	8000960 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8000bc0:	2001      	movs	r0, #1
 8000bc2:	f003 f9e7 	bl	8003f94 <wait_ms>
 8000bc6:	e7f8      	b.n	8000bba <main+0x3a>
 8000bc8:	3301      	adds	r3, #1
 8000bca:	2b19      	cmp	r3, #25
 8000bcc:	d1ea      	bne.n	8000ba4 <main+0x24>
 8000bce:	e7f3      	b.n	8000bb8 <main+0x38>
 8000bd0:	20000268 	.word	0x20000268
 8000bd4:	2000088c 	.word	0x2000088c

08000bd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8000bd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000bda:	2963      	cmp	r1, #99	; 0x63
 8000bdc:	b085      	sub	sp, #20
 8000bde:	4604      	mov	r4, r0
 8000be0:	460e      	mov	r6, r1
 8000be2:	dd03      	ble.n	8000bec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000be4:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 8000be8:	2d00      	cmp	r5, #0
 8000bea:	d04d      	beq.n	8000c88 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000bec:	6813      	ldr	r3, [r2, #0]
 8000bee:	f204 3113 	addw	r1, r4, #787	; 0x313
 8000bf2:	681b      	ldr	r3, [r3, #0]
 8000bf4:	4610      	mov	r0, r2
 8000bf6:	4798      	blx	r3
 8000bf8:	23ff      	movs	r3, #255	; 0xff
 8000bfa:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 8000bfe:	23fe      	movs	r3, #254	; 0xfe
 8000c00:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000c04:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 8000c08:	b2c3      	uxtb	r3, r0
 8000c0a:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 8000c0e:	4413      	add	r3, r2
 8000c10:	43db      	mvns	r3, r3
 8000c12:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 8000c16:	f346 2607 	sbfx	r6, r6, #8, #8
 8000c1a:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 8000c1e:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 8000c22:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 8000c26:	f204 3111 	addw	r1, r4, #785	; 0x311
 8000c2a:	2205      	movs	r2, #5
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	1d86      	adds	r6, r0, #6
 8000c30:	42b2      	cmp	r2, r6
 8000c32:	dc04      	bgt.n	8000c3e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000c34:	f811 5b01 	ldrb.w	r5, [r1], #1
 8000c38:	3201      	adds	r2, #1
 8000c3a:	442b      	add	r3, r5
 8000c3c:	e7f8      	b.n	8000c30 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 8000c3e:	f100 0508 	add.w	r5, r0, #8
 8000c42:	4420      	add	r0, r4
 8000c44:	43db      	mvns	r3, r3
 8000c46:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8000c4a:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 8000c4e:	dc0c      	bgt.n	8000c6a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 8000c50:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 8000c54:	463e      	mov	r6, r7
 8000c56:	3404      	adds	r4, #4
 8000c58:	1bf3      	subs	r3, r6, r7
 8000c5a:	429d      	cmp	r5, r3
 8000c5c:	dd14      	ble.n	8000c88 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000c5e:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000c62:	4620      	mov	r0, r4
 8000c64:	f000 f99e 	bl	8000fa4 <BufferedSerial::putc(int)>
 8000c68:	e7f6      	b.n	8000c58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8000c6a:	4b09      	ldr	r3, [pc, #36]	; (8000c90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8000c6c:	9301      	str	r3, [sp, #4]
 8000c6e:	2303      	movs	r3, #3
 8000c70:	f88d 3008 	strb.w	r3, [sp, #8]
 8000c74:	4b07      	ldr	r3, [pc, #28]	; (8000c94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8000c76:	9303      	str	r3, [sp, #12]
 8000c78:	6823      	ldr	r3, [r4, #0]
 8000c7a:	aa01      	add	r2, sp, #4
 8000c7c:	681b      	ldr	r3, [r3, #0]
 8000c7e:	2107      	movs	r1, #7
 8000c80:	4620      	mov	r0, r4
 8000c82:	4798      	blx	r3
 8000c84:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000c88:	4628      	mov	r0, r5
 8000c8a:	b005      	add	sp, #20
 8000c8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000c8e:	bf00      	nop
 8000c90:	080051b4 	.word	0x080051b4
 8000c94:	080052d6 	.word	0x080052d6

08000c98 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 8000c98:	b510      	push	{r4, lr}
 8000c9a:	4b04      	ldr	r3, [pc, #16]	; (8000cac <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 8000c9c:	4604      	mov	r4, r0
 8000c9e:	f840 3b04 	str.w	r3, [r0], #4
 8000ca2:	f000 f8c3 	bl	8000e2c <BufferedSerial::~BufferedSerial()>
 8000ca6:	4620      	mov	r0, r4
 8000ca8:	bd10      	pop	{r4, pc}
 8000caa:	bf00      	nop
 8000cac:	080051fc 	.word	0x080051fc

08000cb0 <_start>:
 8000cb0:	4807      	ldr	r0, [pc, #28]	; (8000cd0 <_start+0x20>)
 8000cb2:	4a08      	ldr	r2, [pc, #32]	; (8000cd4 <_start+0x24>)
 8000cb4:	b508      	push	{r3, lr}
 8000cb6:	1a12      	subs	r2, r2, r0
 8000cb8:	2100      	movs	r1, #0
 8000cba:	f003 fdbe 	bl	800483a <memset>
 8000cbe:	f003 fa29 	bl	8004114 <software_init_hook>
 8000cc2:	f003 fd0f 	bl	80046e4 <__libc_init_array>
 8000cc6:	f003 fa2c 	bl	8004122 <__wrap_main>
 8000cca:	f003 fa67 	bl	800419c <__wrap_exit>
 8000cce:	bf00      	nop
 8000cd0:	20000230 	.word	0x20000230
 8000cd4:	200027c8 	.word	0x200027c8

08000cd8 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 8000cd8:	b530      	push	{r4, r5, lr}
 8000cda:	6802      	ldr	r2, [r0, #0]
 8000cdc:	680d      	ldr	r5, [r1, #0]
 8000cde:	4c04      	ldr	r4, [pc, #16]	; (8000cf0 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8000ce0:	fbb5 f3f4 	udiv	r3, r5, r4
 8000ce4:	441a      	add	r2, r3
 8000ce6:	fb04 5313 	mls	r3, r4, r3, r5
 8000cea:	6002      	str	r2, [r0, #0]
 8000cec:	600b      	str	r3, [r1, #0]
 8000cee:	bd30      	pop	{r4, r5, pc}
 8000cf0:	3b9aca00 	.word	0x3b9aca00

08000cf4 <BufferedSerial::readable()>:
 8000cf4:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 8000cf8:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8000cfc:	1a10      	subs	r0, r2, r0
 8000cfe:	bf18      	it	ne
 8000d00:	2001      	movne	r0, #1
 8000d02:	4770      	bx	lr

08000d04 <BufferedSerial::writeable()>:
 8000d04:	2001      	movs	r0, #1
 8000d06:	4770      	bx	lr

08000d08 <BufferedSerial::getc()>:
 8000d08:	b510      	push	{r4, lr}
 8000d0a:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 8000d0e:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 8000d12:	4603      	mov	r3, r0
 8000d14:	1c50      	adds	r0, r2, #1
 8000d16:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 8000d1a:	5c88      	ldrb	r0, [r1, r2]
 8000d1c:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8000d20:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 8000d24:	3a01      	subs	r2, #1
 8000d26:	fbb4 f1f2 	udiv	r1, r4, r2
 8000d2a:	fb02 4211 	mls	r2, r2, r1, r4
 8000d2e:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 8000d32:	bd10      	pop	{r4, pc}

08000d34 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8000d34:	4603      	mov	r3, r0
 8000d36:	b110      	cbz	r0, 8000d3e <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 8000d38:	c907      	ldmia	r1, {r0, r1, r2}
 8000d3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8000d3e:	4770      	bx	lr

08000d40 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8000d40:	4770      	bx	lr

08000d42 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 8000d42:	6842      	ldr	r2, [r0, #4]
 8000d44:	6881      	ldr	r1, [r0, #8]
 8000d46:	6803      	ldr	r3, [r0, #0]
 8000d48:	f012 0f01 	tst.w	r2, #1
 8000d4c:	ea4f 0262 	mov.w	r2, r2, asr #1
 8000d50:	bf1c      	itt	ne
 8000d52:	5888      	ldrne	r0, [r1, r2]
 8000d54:	58c3      	ldrne	r3, [r0, r3]
 8000d56:	1888      	adds	r0, r1, r2
 8000d58:	4718      	bx	r3

08000d5a <mbed::Callback<void ()>::~Callback()>:
 8000d5a:	68c3      	ldr	r3, [r0, #12]
 8000d5c:	b510      	push	{r4, lr}
 8000d5e:	4604      	mov	r4, r0
 8000d60:	b10b      	cbz	r3, 8000d66 <mbed::Callback<void ()>::~Callback()+0xc>
 8000d62:	689b      	ldr	r3, [r3, #8]
 8000d64:	4798      	blx	r3
 8000d66:	4620      	mov	r0, r4
 8000d68:	bd10      	pop	{r4, pc}

08000d6a <BufferedSerial::txIrq()>:
 8000d6a:	b530      	push	{r4, r5, lr}
 8000d6c:	4604      	mov	r4, r0
 8000d6e:	b085      	sub	sp, #20
 8000d70:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8000d74:	4628      	mov	r0, r5
 8000d76:	f002 f951 	bl	800301c <serial_writable>
 8000d7a:	b330      	cbz	r0, 8000dca <BufferedSerial::txIrq()+0x60>
 8000d7c:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 8000d80:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8000d84:	429a      	cmp	r2, r3
 8000d86:	d016      	beq.n	8000db6 <BufferedSerial::txIrq()+0x4c>
 8000d88:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8000d8c:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 8000d90:	1c59      	adds	r1, r3, #1
 8000d92:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 8000d96:	5cd1      	ldrb	r1, [r2, r3]
 8000d98:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 8000d9c:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 8000da0:	3b01      	subs	r3, #1
 8000da2:	fbb0 f2f3 	udiv	r2, r0, r3
 8000da6:	fb03 0312 	mls	r3, r3, r2, r0
 8000daa:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 8000dae:	4628      	mov	r0, r5
 8000db0:	f002 f93e 	bl	8003030 <serial_putc>
 8000db4:	e7de      	b.n	8000d74 <BufferedSerial::txIrq()+0xa>
 8000db6:	2300      	movs	r3, #0
 8000db8:	4620      	mov	r0, r4
 8000dba:	2201      	movs	r2, #1
 8000dbc:	4669      	mov	r1, sp
 8000dbe:	9303      	str	r3, [sp, #12]
 8000dc0:	f003 f860 	bl	8003e84 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000dc4:	4668      	mov	r0, sp
 8000dc6:	f7ff ffc8 	bl	8000d5a <mbed::Callback<void ()>::~Callback()>
 8000dca:	b005      	add	sp, #20
 8000dcc:	bd30      	pop	{r4, r5, pc}

08000dce <mbed::Callback<void (int)>::~Callback()>:
 8000dce:	68c3      	ldr	r3, [r0, #12]
 8000dd0:	b510      	push	{r4, lr}
 8000dd2:	4604      	mov	r4, r0
 8000dd4:	b10b      	cbz	r3, 8000dda <mbed::Callback<void (int)>::~Callback()+0xc>
 8000dd6:	689b      	ldr	r3, [r3, #8]
 8000dd8:	4798      	blx	r3
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <mbed::SerialBase::~SerialBase()>:
 8000de0:	b570      	push	{r4, r5, r6, lr}
 8000de2:	4606      	mov	r6, r0
 8000de4:	4b0b      	ldr	r3, [pc, #44]	; (8000e14 <mbed::SerialBase::~SerialBase()+0x34>)
 8000de6:	f846 3b98 	str.w	r3, [r6], #152
 8000dea:	4604      	mov	r4, r0
 8000dec:	b146      	cbz	r6, 8000e00 <mbed::SerialBase::~SerialBase()+0x20>
 8000dee:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 8000df2:	42b5      	cmp	r5, r6
 8000df4:	d004      	beq.n	8000e00 <mbed::SerialBase::~SerialBase()+0x20>
 8000df6:	3d10      	subs	r5, #16
 8000df8:	4628      	mov	r0, r5
 8000dfa:	f7ff ffae 	bl	8000d5a <mbed::Callback<void ()>::~Callback()>
 8000dfe:	e7f8      	b.n	8000df2 <mbed::SerialBase::~SerialBase()+0x12>
 8000e00:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8000e04:	f7ff ffe3 	bl	8000dce <mbed::Callback<void (int)>::~Callback()>
 8000e08:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8000e0c:	f7ff ffdf 	bl	8000dce <mbed::Callback<void (int)>::~Callback()>
 8000e10:	4620      	mov	r0, r4
 8000e12:	bd70      	pop	{r4, r5, r6, pc}
 8000e14:	08005654 	.word	0x08005654

08000e18 <mbed::SerialBase::~SerialBase()>:
 8000e18:	b510      	push	{r4, lr}
 8000e1a:	4604      	mov	r4, r0
 8000e1c:	f7ff ffe0 	bl	8000de0 <mbed::SerialBase::~SerialBase()>
 8000e20:	4620      	mov	r0, r4
 8000e22:	f003 f9d7 	bl	80041d4 <operator delete(void*)>
 8000e26:	4620      	mov	r0, r4
 8000e28:	bd10      	pop	{r4, pc}
	...

08000e2c <BufferedSerial::~BufferedSerial()>:
 8000e2c:	b530      	push	{r4, r5, lr}
 8000e2e:	4b13      	ldr	r3, [pc, #76]	; (8000e7c <BufferedSerial::~BufferedSerial()+0x50>)
 8000e30:	6003      	str	r3, [r0, #0]
 8000e32:	b085      	sub	sp, #20
 8000e34:	2500      	movs	r5, #0
 8000e36:	462a      	mov	r2, r5
 8000e38:	4669      	mov	r1, sp
 8000e3a:	4604      	mov	r4, r0
 8000e3c:	9503      	str	r5, [sp, #12]
 8000e3e:	f003 f821 	bl	8003e84 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000e42:	4668      	mov	r0, sp
 8000e44:	f7ff ff89 	bl	8000d5a <mbed::Callback<void ()>::~Callback()>
 8000e48:	2201      	movs	r2, #1
 8000e4a:	4669      	mov	r1, sp
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	9503      	str	r5, [sp, #12]
 8000e50:	f003 f818 	bl	8003e84 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000e54:	4668      	mov	r0, sp
 8000e56:	f7ff ff80 	bl	8000d5a <mbed::Callback<void ()>::~Callback()>
 8000e5a:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8000e5e:	f000 f923 	bl	80010a8 <Buffer<char>::~Buffer()>
 8000e62:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8000e66:	f000 f91f 	bl	80010a8 <Buffer<char>::~Buffer()>
 8000e6a:	4b05      	ldr	r3, [pc, #20]	; (8000e80 <BufferedSerial::~BufferedSerial()+0x54>)
 8000e6c:	6023      	str	r3, [r4, #0]
 8000e6e:	4620      	mov	r0, r4
 8000e70:	f7ff ffb6 	bl	8000de0 <mbed::SerialBase::~SerialBase()>
 8000e74:	4620      	mov	r0, r4
 8000e76:	b005      	add	sp, #20
 8000e78:	bd30      	pop	{r4, r5, pc}
 8000e7a:	bf00      	nop
 8000e7c:	080053fc 	.word	0x080053fc
 8000e80:	08005630 	.word	0x08005630

08000e84 <BufferedSerial::~BufferedSerial()>:
 8000e84:	b510      	push	{r4, lr}
 8000e86:	4604      	mov	r4, r0
 8000e88:	f7ff ffd0 	bl	8000e2c <BufferedSerial::~BufferedSerial()>
 8000e8c:	4620      	mov	r0, r4
 8000e8e:	f003 f9a1 	bl	80041d4 <operator delete(void*)>
 8000e92:	4620      	mov	r0, r4
 8000e94:	bd10      	pop	{r4, pc}
	...

08000e98 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 8000e98:	b510      	push	{r4, lr}
 8000e9a:	b086      	sub	sp, #24
 8000e9c:	e88d 000c 	stmia.w	sp, {r2, r3}
 8000ea0:	9b01      	ldr	r3, [sp, #4]
 8000ea2:	9202      	str	r2, [sp, #8]
 8000ea4:	9303      	str	r3, [sp, #12]
 8000ea6:	9104      	str	r1, [sp, #16]
 8000ea8:	4b05      	ldr	r3, [pc, #20]	; (8000ec0 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 8000eaa:	f89d 2020 	ldrb.w	r2, [sp, #32]
 8000eae:	9305      	str	r3, [sp, #20]
 8000eb0:	a902      	add	r1, sp, #8
 8000eb2:	f002 ffe7 	bl	8003e84 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000eb6:	a802      	add	r0, sp, #8
 8000eb8:	f7ff ff4f 	bl	8000d5a <mbed::Callback<void ()>::~Callback()>
 8000ebc:	b006      	add	sp, #24
 8000ebe:	bd10      	pop	{r4, pc}
 8000ec0:	08005370 	.word	0x08005370

08000ec4 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 8000ec4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8000ec6:	4604      	mov	r4, r0
 8000ec8:	461d      	mov	r5, r3
 8000eca:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8000ece:	9e08      	ldr	r6, [sp, #32]
 8000ed0:	f002 feb4 	bl	8003c3c <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 8000ed4:	4620      	mov	r0, r4
 8000ed6:	4b0f      	ldr	r3, [pc, #60]	; (8000f14 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8000ed8:	f840 3bbc 	str.w	r3, [r0], #188
 8000edc:	4629      	mov	r1, r5
 8000ede:	f000 f8f2 	bl	80010c6 <Buffer<char>::Buffer(unsigned long)>
 8000ee2:	fb06 f105 	mul.w	r1, r6, r5
 8000ee6:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8000eea:	f000 f8ec 	bl	80010c6 <Buffer<char>::Buffer(unsigned long)>
 8000eee:	4b0a      	ldr	r3, [pc, #40]	; (8000f18 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 8000ef0:	9302      	str	r3, [sp, #8]
 8000ef2:	2300      	movs	r3, #0
 8000ef4:	9303      	str	r3, [sp, #12]
 8000ef6:	9300      	str	r3, [sp, #0]
 8000ef8:	ab04      	add	r3, sp, #16
 8000efa:	4620      	mov	r0, r4
 8000efc:	e913 000c 	ldmdb	r3, {r2, r3}
 8000f00:	4621      	mov	r1, r4
 8000f02:	f7ff ffc9 	bl	8000e98 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8000f06:	4620      	mov	r0, r4
 8000f08:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 8000f0c:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 8000f10:	b004      	add	sp, #16
 8000f12:	bd70      	pop	{r4, r5, r6, pc}
 8000f14:	080053fc 	.word	0x080053fc
 8000f18:	08000f83 	.word	0x08000f83

08000f1c <BufferedSerial::prime()>:
 8000f1c:	b570      	push	{r4, r5, r6, lr}
 8000f1e:	4604      	mov	r4, r0
 8000f20:	b086      	sub	sp, #24
 8000f22:	304c      	adds	r0, #76	; 0x4c
 8000f24:	f002 f87a 	bl	800301c <serial_writable>
 8000f28:	b1c0      	cbz	r0, 8000f5c <BufferedSerial::prime()+0x40>
 8000f2a:	ad02      	add	r5, sp, #8
 8000f2c:	2201      	movs	r2, #1
 8000f2e:	4629      	mov	r1, r5
 8000f30:	2600      	movs	r6, #0
 8000f32:	4620      	mov	r0, r4
 8000f34:	9605      	str	r6, [sp, #20]
 8000f36:	f002 ffa5 	bl	8003e84 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000f3a:	4628      	mov	r0, r5
 8000f3c:	f7ff ff0d 	bl	8000d5a <mbed::Callback<void ()>::~Callback()>
 8000f40:	4620      	mov	r0, r4
 8000f42:	f7ff ff12 	bl	8000d6a <BufferedSerial::txIrq()>
 8000f46:	4b06      	ldr	r3, [pc, #24]	; (8000f60 <BufferedSerial::prime()+0x44>)
 8000f48:	9302      	str	r3, [sp, #8]
 8000f4a:	2301      	movs	r3, #1
 8000f4c:	9603      	str	r6, [sp, #12]
 8000f4e:	9300      	str	r3, [sp, #0]
 8000f50:	e895 000c 	ldmia.w	r5, {r2, r3}
 8000f54:	4621      	mov	r1, r4
 8000f56:	4620      	mov	r0, r4
 8000f58:	f7ff ff9e 	bl	8000e98 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8000f5c:	b006      	add	sp, #24
 8000f5e:	bd70      	pop	{r4, r5, r6, pc}
 8000f60:	08000d6b 	.word	0x08000d6b

08000f64 <Buffer<char>::put(char)>:
 8000f64:	6843      	ldr	r3, [r0, #4]
 8000f66:	6802      	ldr	r2, [r0, #0]
 8000f68:	b510      	push	{r4, lr}
 8000f6a:	1c5c      	adds	r4, r3, #1
 8000f6c:	6044      	str	r4, [r0, #4]
 8000f6e:	54d1      	strb	r1, [r2, r3]
 8000f70:	68c3      	ldr	r3, [r0, #12]
 8000f72:	6841      	ldr	r1, [r0, #4]
 8000f74:	3b01      	subs	r3, #1
 8000f76:	fbb1 f2f3 	udiv	r2, r1, r3
 8000f7a:	fb03 1312 	mls	r3, r3, r2, r1
 8000f7e:	6043      	str	r3, [r0, #4]
 8000f80:	bd10      	pop	{r4, pc}

08000f82 <BufferedSerial::rxIrq()>:
 8000f82:	b538      	push	{r3, r4, r5, lr}
 8000f84:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8000f88:	4604      	mov	r4, r0
 8000f8a:	4628      	mov	r0, r5
 8000f8c:	f002 f82a 	bl	8002fe4 <serial_readable>
 8000f90:	b138      	cbz	r0, 8000fa2 <BufferedSerial::rxIrq()+0x20>
 8000f92:	4628      	mov	r0, r5
 8000f94:	f002 f830 	bl	8002ff8 <serial_getc>
 8000f98:	b2c1      	uxtb	r1, r0
 8000f9a:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8000f9e:	f7ff ffe1 	bl	8000f64 <Buffer<char>::put(char)>
 8000fa2:	bd38      	pop	{r3, r4, r5, pc}

08000fa4 <BufferedSerial::putc(int)>:
 8000fa4:	b538      	push	{r3, r4, r5, lr}
 8000fa6:	4605      	mov	r5, r0
 8000fa8:	460c      	mov	r4, r1
 8000faa:	30cc      	adds	r0, #204	; 0xcc
 8000fac:	b2c9      	uxtb	r1, r1
 8000fae:	f7ff ffd9 	bl	8000f64 <Buffer<char>::put(char)>
 8000fb2:	4628      	mov	r0, r5
 8000fb4:	f7ff ffb2 	bl	8000f1c <BufferedSerial::prime()>
 8000fb8:	4620      	mov	r0, r4
 8000fba:	bd38      	pop	{r3, r4, r5, pc}

08000fbc <BufferedSerial::puts(char const*)>:
 8000fbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000fc0:	4607      	mov	r7, r0
 8000fc2:	460c      	mov	r4, r1
 8000fc4:	b1b1      	cbz	r1, 8000ff4 <BufferedSerial::puts(char const*)+0x38>
 8000fc6:	460d      	mov	r5, r1
 8000fc8:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8000fcc:	462e      	mov	r6, r5
 8000fce:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000fd2:	b121      	cbz	r1, 8000fde <BufferedSerial::puts(char const*)+0x22>
 8000fd4:	4640      	mov	r0, r8
 8000fd6:	f7ff ffc5 	bl	8000f64 <Buffer<char>::put(char)>
 8000fda:	4635      	mov	r5, r6
 8000fdc:	e7f6      	b.n	8000fcc <BufferedSerial::puts(char const*)+0x10>
 8000fde:	210a      	movs	r1, #10
 8000fe0:	4640      	mov	r0, r8
 8000fe2:	f7ff ffbf 	bl	8000f64 <Buffer<char>::put(char)>
 8000fe6:	1b2c      	subs	r4, r5, r4
 8000fe8:	4638      	mov	r0, r7
 8000fea:	f7ff ff97 	bl	8000f1c <BufferedSerial::prime()>
 8000fee:	1c60      	adds	r0, r4, #1
 8000ff0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000ff4:	4608      	mov	r0, r1
 8000ff6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000ffa <BufferedSerial::write(void const*, unsigned int)>:
 8000ffa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ffe:	4607      	mov	r7, r0
 8001000:	460d      	mov	r5, r1
 8001002:	b191      	cbz	r1, 800102a <BufferedSerial::write(void const*, unsigned int)+0x30>
 8001004:	b1a2      	cbz	r2, 8001030 <BufferedSerial::write(void const*, unsigned int)+0x36>
 8001006:	188c      	adds	r4, r1, r2
 8001008:	460e      	mov	r6, r1
 800100a:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 800100e:	42b4      	cmp	r4, r6
 8001010:	d005      	beq.n	800101e <BufferedSerial::write(void const*, unsigned int)+0x24>
 8001012:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001016:	4640      	mov	r0, r8
 8001018:	f7ff ffa4 	bl	8000f64 <Buffer<char>::put(char)>
 800101c:	e7f7      	b.n	800100e <BufferedSerial::write(void const*, unsigned int)+0x14>
 800101e:	4638      	mov	r0, r7
 8001020:	f7ff ff7c 	bl	8000f1c <BufferedSerial::prime()>
 8001024:	1b60      	subs	r0, r4, r5
 8001026:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800102a:	4608      	mov	r0, r1
 800102c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001030:	4610      	mov	r0, r2
 8001032:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08001038 <BufferedSerial::printf(char const*, ...)>:
 8001038:	b40e      	push	{r1, r2, r3}
 800103a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800103e:	b085      	sub	sp, #20
 8001040:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 8001044:	af02      	add	r7, sp, #8
 8001046:	1dd3      	adds	r3, r2, #7
 8001048:	f023 0307 	bic.w	r3, r3, #7
 800104c:	f107 0424 	add.w	r4, r7, #36	; 0x24
 8001050:	ebad 0d03 	sub.w	sp, sp, r3
 8001054:	f854 8b04 	ldr.w	r8, [r4], #4
 8001058:	ae02      	add	r6, sp, #8
 800105a:	4605      	mov	r5, r0
 800105c:	2100      	movs	r1, #0
 800105e:	4630      	mov	r0, r6
 8001060:	f003 fbeb 	bl	800483a <memset>
 8001064:	4622      	mov	r2, r4
 8001066:	4641      	mov	r1, r8
 8001068:	4630      	mov	r0, r6
 800106a:	607c      	str	r4, [r7, #4]
 800106c:	f003 fed2 	bl	8004e14 <vsiprintf>
 8001070:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 8001074:	4283      	cmp	r3, r0
 8001076:	4602      	mov	r2, r0
 8001078:	d20c      	bcs.n	8001094 <BufferedSerial::printf(char const*, ...)+0x5c>
 800107a:	9000      	str	r0, [sp, #0]
 800107c:	225d      	movs	r2, #93	; 0x5d
 800107e:	4808      	ldr	r0, [pc, #32]	; (80010a0 <BufferedSerial::printf(char const*, ...)+0x68>)
 8001080:	4908      	ldr	r1, [pc, #32]	; (80010a4 <BufferedSerial::printf(char const*, ...)+0x6c>)
 8001082:	f000 f917 	bl	80012b4 <error>
 8001086:	2000      	movs	r0, #0
 8001088:	370c      	adds	r7, #12
 800108a:	46bd      	mov	sp, r7
 800108c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001090:	b003      	add	sp, #12
 8001092:	4770      	bx	lr
 8001094:	4631      	mov	r1, r6
 8001096:	4628      	mov	r0, r5
 8001098:	f7ff ffaf 	bl	8000ffa <BufferedSerial::write(void const*, unsigned int)>
 800109c:	e7f4      	b.n	8001088 <BufferedSerial::printf(char const*, ...)+0x50>
 800109e:	bf00      	nop
 80010a0:	080053ba 	.word	0x080053ba
 80010a4:	0800537c 	.word	0x0800537c

080010a8 <Buffer<char>::~Buffer()>:
 80010a8:	b510      	push	{r4, lr}
 80010aa:	4604      	mov	r4, r0
 80010ac:	6800      	ldr	r0, [r0, #0]
 80010ae:	b108      	cbz	r0, 80010b4 <Buffer<char>::~Buffer()+0xc>
 80010b0:	f003 f88c 	bl	80041cc <operator delete[](void*)>
 80010b4:	4620      	mov	r0, r4
 80010b6:	bd10      	pop	{r4, pc}

080010b8 <Buffer<char>::clear()>:
 80010b8:	2100      	movs	r1, #0
 80010ba:	6041      	str	r1, [r0, #4]
 80010bc:	68c2      	ldr	r2, [r0, #12]
 80010be:	6081      	str	r1, [r0, #8]
 80010c0:	6800      	ldr	r0, [r0, #0]
 80010c2:	f003 bbba 	b.w	800483a <memset>

080010c6 <Buffer<char>::Buffer(unsigned long)>:
 80010c6:	b538      	push	{r3, r4, r5, lr}
 80010c8:	4604      	mov	r4, r0
 80010ca:	4608      	mov	r0, r1
 80010cc:	460d      	mov	r5, r1
 80010ce:	f003 f871 	bl	80041b4 <operator new[](unsigned int)>
 80010d2:	60e5      	str	r5, [r4, #12]
 80010d4:	6020      	str	r0, [r4, #0]
 80010d6:	4620      	mov	r0, r4
 80010d8:	f7ff ffee 	bl	80010b8 <Buffer<char>::clear()>
 80010dc:	4620      	mov	r0, r4
 80010de:	bd38      	pop	{r3, r4, r5, pc}

080010e0 <_gpio_init_out.part.2>:
 80010e0:	b538      	push	{r3, r4, r5, lr}
 80010e2:	4604      	mov	r4, r0
 80010e4:	460d      	mov	r5, r1
 80010e6:	6803      	ldr	r3, [r0, #0]
 80010e8:	b15a      	cbz	r2, 8001102 <_gpio_init_out.part.2+0x22>
 80010ea:	6882      	ldr	r2, [r0, #8]
 80010ec:	6013      	str	r3, [r2, #0]
 80010ee:	4620      	mov	r0, r4
 80010f0:	2101      	movs	r1, #1
 80010f2:	f001 fca1 	bl	8002a38 <gpio_dir>
 80010f6:	4629      	mov	r1, r5
 80010f8:	4620      	mov	r0, r4
 80010fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80010fe:	f001 bc97 	b.w	8002a30 <gpio_mode>
 8001102:	68c2      	ldr	r2, [r0, #12]
 8001104:	041b      	lsls	r3, r3, #16
 8001106:	e7f1      	b.n	80010ec <_gpio_init_out.part.2+0xc>

08001108 <gpio_init_out_ex>:
 8001108:	b570      	push	{r4, r5, r6, lr}
 800110a:	460e      	mov	r6, r1
 800110c:	4604      	mov	r4, r0
 800110e:	4615      	mov	r5, r2
 8001110:	f001 fc6e 	bl	80029f0 <gpio_init>
 8001114:	3601      	adds	r6, #1
 8001116:	d006      	beq.n	8001126 <gpio_init_out_ex+0x1e>
 8001118:	462a      	mov	r2, r5
 800111a:	4620      	mov	r0, r4
 800111c:	2100      	movs	r1, #0
 800111e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001122:	f7ff bfdd 	b.w	80010e0 <_gpio_init_out.part.2>
 8001126:	bd70      	pop	{r4, r5, r6, pc}

08001128 <gpio_init_out>:
 8001128:	2200      	movs	r2, #0
 800112a:	f7ff bfed 	b.w	8001108 <gpio_init_out_ex>
	...

08001130 <get_us_ticker_data>:
 8001130:	4800      	ldr	r0, [pc, #0]	; (8001134 <get_us_ticker_data+0x4>)
 8001132:	4770      	bx	lr
 8001134:	08005428 	.word	0x08005428

08001138 <us_ticker_irq_handler>:
 8001138:	4801      	ldr	r0, [pc, #4]	; (8001140 <us_ticker_irq_handler+0x8>)
 800113a:	f000 b803 	b.w	8001144 <ticker_irq_handler>
 800113e:	bf00      	nop
 8001140:	08005428 	.word	0x08005428

08001144 <ticker_irq_handler>:
 8001144:	6803      	ldr	r3, [r0, #0]
 8001146:	b570      	push	{r4, r5, r6, lr}
 8001148:	68db      	ldr	r3, [r3, #12]
 800114a:	4604      	mov	r4, r0
 800114c:	4798      	blx	r3
 800114e:	6863      	ldr	r3, [r4, #4]
 8001150:	685a      	ldr	r2, [r3, #4]
 8001152:	6823      	ldr	r3, [r4, #0]
 8001154:	b91a      	cbnz	r2, 800115e <ticker_irq_handler+0x1a>
 8001156:	689b      	ldr	r3, [r3, #8]
 8001158:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800115c:	4718      	bx	r3
 800115e:	685b      	ldr	r3, [r3, #4]
 8001160:	6815      	ldr	r5, [r2, #0]
 8001162:	4798      	blx	r3
 8001164:	6863      	ldr	r3, [r4, #4]
 8001166:	1a28      	subs	r0, r5, r0
 8001168:	2800      	cmp	r0, #0
 800116a:	685a      	ldr	r2, [r3, #4]
 800116c:	dc07      	bgt.n	800117e <ticker_irq_handler+0x3a>
 800116e:	6891      	ldr	r1, [r2, #8]
 8001170:	6059      	str	r1, [r3, #4]
 8001172:	681b      	ldr	r3, [r3, #0]
 8001174:	2b00      	cmp	r3, #0
 8001176:	d0ea      	beq.n	800114e <ticker_irq_handler+0xa>
 8001178:	6850      	ldr	r0, [r2, #4]
 800117a:	4798      	blx	r3
 800117c:	e7e7      	b.n	800114e <ticker_irq_handler+0xa>
 800117e:	6823      	ldr	r3, [r4, #0]
 8001180:	6810      	ldr	r0, [r2, #0]
 8001182:	691b      	ldr	r3, [r3, #16]
 8001184:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001188:	4718      	bx	r3

0800118a <ticker_read>:
 800118a:	6803      	ldr	r3, [r0, #0]
 800118c:	685b      	ldr	r3, [r3, #4]
 800118e:	4718      	bx	r3

08001190 <pinmap_pinout>:
 8001190:	b510      	push	{r4, lr}
 8001192:	4604      	mov	r4, r0
 8001194:	3001      	adds	r0, #1
 8001196:	d10d      	bne.n	80011b4 <pinmap_pinout+0x24>
 8001198:	bd10      	pop	{r4, pc}
 800119a:	429c      	cmp	r4, r3
 800119c:	d109      	bne.n	80011b2 <pinmap_pinout+0x22>
 800119e:	4620      	mov	r0, r4
 80011a0:	6889      	ldr	r1, [r1, #8]
 80011a2:	f001 fce1 	bl	8002b68 <pin_function>
 80011a6:	4620      	mov	r0, r4
 80011a8:	2100      	movs	r1, #0
 80011aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80011ae:	f001 bd5f 	b.w	8002c70 <pin_mode>
 80011b2:	310c      	adds	r1, #12
 80011b4:	f9b1 3000 	ldrsh.w	r3, [r1]
 80011b8:	1c5a      	adds	r2, r3, #1
 80011ba:	d1ee      	bne.n	800119a <pinmap_pinout+0xa>
 80011bc:	4802      	ldr	r0, [pc, #8]	; (80011c8 <pinmap_pinout+0x38>)
 80011be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80011c2:	f000 b877 	b.w	80012b4 <error>
 80011c6:	bf00      	nop
 80011c8:	08005475 	.word	0x08005475

080011cc <pinmap_merge>:
 80011cc:	4288      	cmp	r0, r1
 80011ce:	b508      	push	{r3, lr}
 80011d0:	d008      	beq.n	80011e4 <pinmap_merge+0x18>
 80011d2:	1c43      	adds	r3, r0, #1
 80011d4:	d006      	beq.n	80011e4 <pinmap_merge+0x18>
 80011d6:	3101      	adds	r1, #1
 80011d8:	d006      	beq.n	80011e8 <pinmap_merge+0x1c>
 80011da:	4804      	ldr	r0, [pc, #16]	; (80011ec <pinmap_merge+0x20>)
 80011dc:	f000 f86a 	bl	80012b4 <error>
 80011e0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80011e4:	4608      	mov	r0, r1
 80011e6:	bd08      	pop	{r3, pc}
 80011e8:	4601      	mov	r1, r0
 80011ea:	e7fb      	b.n	80011e4 <pinmap_merge+0x18>
 80011ec:	08005444 	.word	0x08005444

080011f0 <pinmap_find_peripheral>:
 80011f0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80011f4:	1c5a      	adds	r2, r3, #1
 80011f6:	d101      	bne.n	80011fc <pinmap_find_peripheral+0xc>
 80011f8:	4618      	mov	r0, r3
 80011fa:	4770      	bx	lr
 80011fc:	4283      	cmp	r3, r0
 80011fe:	d101      	bne.n	8001204 <pinmap_find_peripheral+0x14>
 8001200:	6848      	ldr	r0, [r1, #4]
 8001202:	4770      	bx	lr
 8001204:	310c      	adds	r1, #12
 8001206:	e7f3      	b.n	80011f0 <pinmap_find_peripheral>

08001208 <pinmap_peripheral>:
 8001208:	1c42      	adds	r2, r0, #1
 800120a:	b510      	push	{r4, lr}
 800120c:	4604      	mov	r4, r0
 800120e:	d007      	beq.n	8001220 <pinmap_peripheral+0x18>
 8001210:	f7ff ffee 	bl	80011f0 <pinmap_find_peripheral>
 8001214:	1c43      	adds	r3, r0, #1
 8001216:	4604      	mov	r4, r0
 8001218:	d102      	bne.n	8001220 <pinmap_peripheral+0x18>
 800121a:	4802      	ldr	r0, [pc, #8]	; (8001224 <pinmap_peripheral+0x1c>)
 800121c:	f000 f84a 	bl	80012b4 <error>
 8001220:	4620      	mov	r0, r4
 8001222:	bd10      	pop	{r4, pc}
 8001224:	08005455 	.word	0x08005455

08001228 <core_util_are_interrupts_enabled>:
 8001228:	f3ef 8010 	mrs	r0, PRIMASK
 800122c:	43c0      	mvns	r0, r0
 800122e:	f000 0001 	and.w	r0, r0, #1
 8001232:	4770      	bx	lr

08001234 <core_util_critical_section_enter>:
 8001234:	b508      	push	{r3, lr}
 8001236:	f7ff fff7 	bl	8001228 <core_util_are_interrupts_enabled>
 800123a:	b672      	cpsid	i
 800123c:	4b06      	ldr	r3, [pc, #24]	; (8001258 <core_util_critical_section_enter+0x24>)
 800123e:	681a      	ldr	r2, [r3, #0]
 8001240:	b922      	cbnz	r2, 800124c <core_util_critical_section_enter+0x18>
 8001242:	f080 0001 	eor.w	r0, r0, #1
 8001246:	4a05      	ldr	r2, [pc, #20]	; (800125c <core_util_critical_section_enter+0x28>)
 8001248:	b2c0      	uxtb	r0, r0
 800124a:	7010      	strb	r0, [r2, #0]
 800124c:	681a      	ldr	r2, [r3, #0]
 800124e:	681a      	ldr	r2, [r3, #0]
 8001250:	3201      	adds	r2, #1
 8001252:	601a      	str	r2, [r3, #0]
 8001254:	bd08      	pop	{r3, pc}
 8001256:	bf00      	nop
 8001258:	200008b0 	.word	0x200008b0
 800125c:	200008ac 	.word	0x200008ac

08001260 <core_util_critical_section_exit>:
 8001260:	b508      	push	{r3, lr}
 8001262:	4b07      	ldr	r3, [pc, #28]	; (8001280 <core_util_critical_section_exit+0x20>)
 8001264:	681a      	ldr	r2, [r3, #0]
 8001266:	b152      	cbz	r2, 800127e <core_util_critical_section_exit+0x1e>
 8001268:	f7ff ffde 	bl	8001228 <core_util_are_interrupts_enabled>
 800126c:	681a      	ldr	r2, [r3, #0]
 800126e:	3a01      	subs	r2, #1
 8001270:	601a      	str	r2, [r3, #0]
 8001272:	681b      	ldr	r3, [r3, #0]
 8001274:	b91b      	cbnz	r3, 800127e <core_util_critical_section_exit+0x1e>
 8001276:	4b03      	ldr	r3, [pc, #12]	; (8001284 <core_util_critical_section_exit+0x24>)
 8001278:	781b      	ldrb	r3, [r3, #0]
 800127a:	b903      	cbnz	r3, 800127e <core_util_critical_section_exit+0x1e>
 800127c:	b662      	cpsie	i
 800127e:	bd08      	pop	{r3, pc}
 8001280:	200008b0 	.word	0x200008b0
 8001284:	200008ac 	.word	0x200008ac

08001288 <mbed_die>:
 8001288:	b500      	push	{lr}
 800128a:	b089      	sub	sp, #36	; 0x24
 800128c:	f7ff ffd2 	bl	8001234 <core_util_critical_section_enter>
 8001290:	2105      	movs	r1, #5
 8001292:	a801      	add	r0, sp, #4
 8001294:	f7ff ff48 	bl	8001128 <gpio_init_out>
 8001298:	9b03      	ldr	r3, [sp, #12]
 800129a:	9a01      	ldr	r2, [sp, #4]
 800129c:	601a      	str	r2, [r3, #0]
 800129e:	2096      	movs	r0, #150	; 0x96
 80012a0:	f002 fe78 	bl	8003f94 <wait_ms>
 80012a4:	9b01      	ldr	r3, [sp, #4]
 80012a6:	9a04      	ldr	r2, [sp, #16]
 80012a8:	041b      	lsls	r3, r3, #16
 80012aa:	6013      	str	r3, [r2, #0]
 80012ac:	2096      	movs	r0, #150	; 0x96
 80012ae:	f002 fe71 	bl	8003f94 <wait_ms>
 80012b2:	e7f1      	b.n	8001298 <mbed_die+0x10>

080012b4 <error>:
 80012b4:	b40f      	push	{r0, r1, r2, r3}
 80012b6:	2001      	movs	r0, #1
 80012b8:	b508      	push	{r3, lr}
 80012ba:	f002 ff6f 	bl	800419c <__wrap_exit>

080012be <default_idle_hook>:
 80012be:	f001 bbe4 	b.w	8002a8a <hal_sleep>
	...

080012c4 <rtos_idle_loop>:
 80012c4:	b508      	push	{r3, lr}
 80012c6:	4c02      	ldr	r4, [pc, #8]	; (80012d0 <rtos_idle_loop+0xc>)
 80012c8:	6823      	ldr	r3, [r4, #0]
 80012ca:	4798      	blx	r3
 80012cc:	e7fc      	b.n	80012c8 <rtos_idle_loop+0x4>
 80012ce:	bf00      	nop
 80012d0:	20000198 	.word	0x20000198

080012d4 <pre_main>:
 80012d4:	b508      	push	{r3, lr}
 80012d6:	480b      	ldr	r0, [pc, #44]	; (8001304 <pre_main+0x30>)
 80012d8:	f000 fd9c 	bl	8001e14 <osMutexCreate>
 80012dc:	4b0a      	ldr	r3, [pc, #40]	; (8001308 <pre_main+0x34>)
 80012de:	6018      	str	r0, [r3, #0]
 80012e0:	480a      	ldr	r0, [pc, #40]	; (800130c <pre_main+0x38>)
 80012e2:	f000 fd97 	bl	8001e14 <osMutexCreate>
 80012e6:	4b0a      	ldr	r3, [pc, #40]	; (8001310 <pre_main+0x3c>)
 80012e8:	6018      	str	r0, [r3, #0]
 80012ea:	480a      	ldr	r0, [pc, #40]	; (8001314 <pre_main+0x40>)
 80012ec:	f000 fd92 	bl	8001e14 <osMutexCreate>
 80012f0:	4b09      	ldr	r3, [pc, #36]	; (8001318 <pre_main+0x44>)
 80012f2:	6018      	str	r0, [r3, #0]
 80012f4:	f003 f9f6 	bl	80046e4 <__libc_init_array>
 80012f8:	2100      	movs	r1, #0
 80012fa:	4608      	mov	r0, r1
 80012fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001300:	f002 bf0f 	b.w	8004122 <__wrap_main>
 8001304:	080054d4 	.word	0x080054d4
 8001308:	20001fac 	.word	0x20001fac
 800130c:	080054d0 	.word	0x080054d0
 8001310:	200008bc 	.word	0x200008bc
 8001314:	080054cc 	.word	0x080054cc
 8001318:	200008b4 	.word	0x200008b4

0800131c <os_idle_demon>:
 800131c:	f7ff bfd2 	b.w	80012c4 <rtos_idle_loop>

08001320 <os_error>:
 8001320:	b510      	push	{r4, lr}
 8001322:	4604      	mov	r4, r0
 8001324:	f000 fce4 	bl	8001cf0 <svcThreadGetId>
 8001328:	4621      	mov	r1, r4
 800132a:	4602      	mov	r2, r0
 800132c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001330:	4801      	ldr	r0, [pc, #4]	; (8001338 <os_error+0x18>)
 8001332:	f7ff bfbf 	b.w	80012b4 <error>
 8001336:	bf00      	nop
 8001338:	08005494 	.word	0x08005494

0800133c <sysThreadTerminate>:
 800133c:	f002 bf4c 	b.w	80041d8 <thread_terminate_hook>

08001340 <set_stack_heap>:
 8001340:	4a0b      	ldr	r2, [pc, #44]	; (8001370 <set_stack_heap+0x30>)
 8001342:	4b0c      	ldr	r3, [pc, #48]	; (8001374 <set_stack_heap+0x34>)
 8001344:	480c      	ldr	r0, [pc, #48]	; (8001378 <set_stack_heap+0x38>)
 8001346:	b430      	push	{r4, r5}
 8001348:	601a      	str	r2, [r3, #0]
 800134a:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 800134e:	f503 33c0 	add.w	r3, r3, #98304	; 0x18000
 8001352:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001356:	4619      	mov	r1, r3
 8001358:	bf28      	it	cs
 800135a:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 800135e:	4d07      	ldr	r5, [pc, #28]	; (800137c <set_stack_heap+0x3c>)
 8001360:	4c07      	ldr	r4, [pc, #28]	; (8001380 <set_stack_heap+0x40>)
 8001362:	6001      	str	r1, [r0, #0]
 8001364:	1a5b      	subs	r3, r3, r1
 8001366:	441a      	add	r2, r3
 8001368:	602a      	str	r2, [r5, #0]
 800136a:	6023      	str	r3, [r4, #0]
 800136c:	bc30      	pop	{r4, r5}
 800136e:	4770      	bx	lr
 8001370:	200027c8 	.word	0x200027c8
 8001374:	20001cc4 	.word	0x20001cc4
 8001378:	200008c0 	.word	0x200008c0
 800137c:	200008c4 	.word	0x200008c4
 8001380:	20001cc0 	.word	0x20001cc0

08001384 <software_init_hook_rtos>:
 8001384:	f000 fe1a 	bl	8001fbc <osKernelInitialize>
 8001388:	f7ff ffda 	bl	8001340 <set_stack_heap>
 800138c:	4803      	ldr	r0, [pc, #12]	; (800139c <software_init_hook_rtos+0x18>)
 800138e:	2100      	movs	r1, #0
 8001390:	f000 fdc8 	bl	8001f24 <osThreadCreate>
 8001394:	f000 fc2e 	bl	8001bf4 <osKernelStart>
 8001398:	e7fe      	b.n	8001398 <software_init_hook_rtos+0x14>
 800139a:	0000      	.short	0x0000
 800139c:	2000019c 	.word	0x2000019c

080013a0 <__rtos_malloc_lock>:
 80013a0:	4b02      	ldr	r3, [pc, #8]	; (80013ac <__rtos_malloc_lock+0xc>)
 80013a2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80013a6:	6818      	ldr	r0, [r3, #0]
 80013a8:	f000 bd52 	b.w	8001e50 <osMutexWait>
 80013ac:	200008bc 	.word	0x200008bc

080013b0 <__rtos_malloc_unlock>:
 80013b0:	4b01      	ldr	r3, [pc, #4]	; (80013b8 <__rtos_malloc_unlock+0x8>)
 80013b2:	6818      	ldr	r0, [r3, #0]
 80013b4:	f000 bd74 	b.w	8001ea0 <osMutexRelease>
 80013b8:	200008bc 	.word	0x200008bc

080013bc <rt_put_prio>:
 80013bc:	b530      	push	{r4, r5, lr}
 80013be:	7802      	ldrb	r2, [r0, #0]
 80013c0:	788c      	ldrb	r4, [r1, #2]
 80013c2:	6843      	ldr	r3, [r0, #4]
 80013c4:	3a01      	subs	r2, #1
 80013c6:	b2d2      	uxtb	r2, r2
 80013c8:	b113      	cbz	r3, 80013d0 <rt_put_prio+0x14>
 80013ca:	789d      	ldrb	r5, [r3, #2]
 80013cc:	42a5      	cmp	r5, r4
 80013ce:	d207      	bcs.n	80013e0 <rt_put_prio+0x24>
 80013d0:	2a02      	cmp	r2, #2
 80013d2:	604b      	str	r3, [r1, #4]
 80013d4:	6041      	str	r1, [r0, #4]
 80013d6:	d806      	bhi.n	80013e6 <rt_put_prio+0x2a>
 80013d8:	b103      	cbz	r3, 80013dc <rt_put_prio+0x20>
 80013da:	6099      	str	r1, [r3, #8]
 80013dc:	6088      	str	r0, [r1, #8]
 80013de:	bd30      	pop	{r4, r5, pc}
 80013e0:	4618      	mov	r0, r3
 80013e2:	685b      	ldr	r3, [r3, #4]
 80013e4:	e7f0      	b.n	80013c8 <rt_put_prio+0xc>
 80013e6:	2300      	movs	r3, #0
 80013e8:	608b      	str	r3, [r1, #8]
 80013ea:	bd30      	pop	{r4, r5, pc}

080013ec <rt_get_first>:
 80013ec:	7802      	ldrb	r2, [r0, #0]
 80013ee:	6843      	ldr	r3, [r0, #4]
 80013f0:	3a01      	subs	r2, #1
 80013f2:	6859      	ldr	r1, [r3, #4]
 80013f4:	6041      	str	r1, [r0, #4]
 80013f6:	2a02      	cmp	r2, #2
 80013f8:	f04f 0200 	mov.w	r2, #0
 80013fc:	d805      	bhi.n	800140a <rt_get_first+0x1e>
 80013fe:	b109      	cbz	r1, 8001404 <rt_get_first+0x18>
 8001400:	6088      	str	r0, [r1, #8]
 8001402:	605a      	str	r2, [r3, #4]
 8001404:	609a      	str	r2, [r3, #8]
 8001406:	4618      	mov	r0, r3
 8001408:	4770      	bx	lr
 800140a:	605a      	str	r2, [r3, #4]
 800140c:	e7fb      	b.n	8001406 <rt_get_first+0x1a>
	...

08001410 <rt_put_rdy_first>:
 8001410:	4b03      	ldr	r3, [pc, #12]	; (8001420 <rt_put_rdy_first+0x10>)
 8001412:	685a      	ldr	r2, [r3, #4]
 8001414:	6042      	str	r2, [r0, #4]
 8001416:	2200      	movs	r2, #0
 8001418:	6082      	str	r2, [r0, #8]
 800141a:	6058      	str	r0, [r3, #4]
 800141c:	4770      	bx	lr
 800141e:	bf00      	nop
 8001420:	200026a0 	.word	0x200026a0

08001424 <rt_put_dly>:
 8001424:	4b10      	ldr	r3, [pc, #64]	; (8001468 <rt_put_dly+0x44>)
 8001426:	68da      	ldr	r2, [r3, #12]
 8001428:	b510      	push	{r4, lr}
 800142a:	b18a      	cbz	r2, 8001450 <rt_put_dly+0x2c>
 800142c:	8a9a      	ldrh	r2, [r3, #20]
 800142e:	68dc      	ldr	r4, [r3, #12]
 8001430:	428a      	cmp	r2, r1
 8001432:	d30c      	bcc.n	800144e <rt_put_dly+0x2a>
 8001434:	60c4      	str	r4, [r0, #12]
 8001436:	60d8      	str	r0, [r3, #12]
 8001438:	68c4      	ldr	r4, [r0, #12]
 800143a:	6103      	str	r3, [r0, #16]
 800143c:	b104      	cbz	r4, 8001440 <rt_put_dly+0x1c>
 800143e:	6120      	str	r0, [r4, #16]
 8001440:	1a52      	subs	r2, r2, r1
 8001442:	b292      	uxth	r2, r2
 8001444:	8282      	strh	r2, [r0, #20]
 8001446:	8a99      	ldrh	r1, [r3, #20]
 8001448:	1a8a      	subs	r2, r1, r2
 800144a:	829a      	strh	r2, [r3, #20]
 800144c:	bd10      	pop	{r4, pc}
 800144e:	b93c      	cbnz	r4, 8001460 <rt_put_dly+0x3c>
 8001450:	2400      	movs	r4, #0
 8001452:	1a8a      	subs	r2, r1, r2
 8001454:	60c4      	str	r4, [r0, #12]
 8001456:	60d8      	str	r0, [r3, #12]
 8001458:	6103      	str	r3, [r0, #16]
 800145a:	829a      	strh	r2, [r3, #20]
 800145c:	8284      	strh	r4, [r0, #20]
 800145e:	bd10      	pop	{r4, pc}
 8001460:	8aa3      	ldrh	r3, [r4, #20]
 8001462:	441a      	add	r2, r3
 8001464:	4623      	mov	r3, r4
 8001466:	e7e2      	b.n	800142e <rt_put_dly+0xa>
 8001468:	200026b8 	.word	0x200026b8

0800146c <rt_dec_dly>:
 800146c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001470:	4d17      	ldr	r5, [pc, #92]	; (80014d0 <rt_dec_dly+0x64>)
 8001472:	68eb      	ldr	r3, [r5, #12]
 8001474:	b153      	cbz	r3, 800148c <rt_dec_dly+0x20>
 8001476:	8aab      	ldrh	r3, [r5, #20]
 8001478:	4f16      	ldr	r7, [pc, #88]	; (80014d4 <rt_dec_dly+0x68>)
 800147a:	f8df 805c 	ldr.w	r8, [pc, #92]	; 80014d8 <rt_dec_dly+0x6c>
 800147e:	3b01      	subs	r3, #1
 8001480:	82ab      	strh	r3, [r5, #20]
 8001482:	2600      	movs	r6, #0
 8001484:	8aaa      	ldrh	r2, [r5, #20]
 8001486:	b90a      	cbnz	r2, 800148c <rt_dec_dly+0x20>
 8001488:	68ec      	ldr	r4, [r5, #12]
 800148a:	b90c      	cbnz	r4, 8001490 <rt_dec_dly+0x24>
 800148c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001490:	68a3      	ldr	r3, [r4, #8]
 8001492:	b133      	cbz	r3, 80014a2 <rt_dec_dly+0x36>
 8001494:	6861      	ldr	r1, [r4, #4]
 8001496:	6059      	str	r1, [r3, #4]
 8001498:	6861      	ldr	r1, [r4, #4]
 800149a:	b109      	cbz	r1, 80014a0 <rt_dec_dly+0x34>
 800149c:	608b      	str	r3, [r1, #8]
 800149e:	6062      	str	r2, [r4, #4]
 80014a0:	60a6      	str	r6, [r4, #8]
 80014a2:	4621      	mov	r1, r4
 80014a4:	4638      	mov	r0, r7
 80014a6:	f7ff ff89 	bl	80013bc <rt_put_prio>
 80014aa:	8aa3      	ldrh	r3, [r4, #20]
 80014ac:	82ab      	strh	r3, [r5, #20]
 80014ae:	7863      	ldrb	r3, [r4, #1]
 80014b0:	2b04      	cmp	r3, #4
 80014b2:	bf01      	itttt	eq
 80014b4:	f8d8 3000 	ldreq.w	r3, [r8]
 80014b8:	8ae2      	ldrheq	r2, [r4, #22]
 80014ba:	189b      	addeq	r3, r3, r2
 80014bc:	82a3      	strheq	r3, [r4, #20]
 80014be:	2301      	movs	r3, #1
 80014c0:	7063      	strb	r3, [r4, #1]
 80014c2:	68e3      	ldr	r3, [r4, #12]
 80014c4:	60eb      	str	r3, [r5, #12]
 80014c6:	b10b      	cbz	r3, 80014cc <rt_dec_dly+0x60>
 80014c8:	611d      	str	r5, [r3, #16]
 80014ca:	60e6      	str	r6, [r4, #12]
 80014cc:	6126      	str	r6, [r4, #16]
 80014ce:	e7d9      	b.n	8001484 <rt_dec_dly+0x18>
 80014d0:	200026b8 	.word	0x200026b8
 80014d4:	200026a0 	.word	0x200026a0
 80014d8:	20002734 	.word	0x20002734

080014dc <rt_rmv_list>:
 80014dc:	6883      	ldr	r3, [r0, #8]
 80014de:	b12b      	cbz	r3, 80014ec <rt_rmv_list+0x10>
 80014e0:	6842      	ldr	r2, [r0, #4]
 80014e2:	605a      	str	r2, [r3, #4]
 80014e4:	6842      	ldr	r2, [r0, #4]
 80014e6:	b15a      	cbz	r2, 8001500 <rt_rmv_list+0x24>
 80014e8:	6093      	str	r3, [r2, #8]
 80014ea:	4770      	bx	lr
 80014ec:	4b05      	ldr	r3, [pc, #20]	; (8001504 <rt_rmv_list+0x28>)
 80014ee:	685a      	ldr	r2, [r3, #4]
 80014f0:	4290      	cmp	r0, r2
 80014f2:	d102      	bne.n	80014fa <rt_rmv_list+0x1e>
 80014f4:	6842      	ldr	r2, [r0, #4]
 80014f6:	605a      	str	r2, [r3, #4]
 80014f8:	4770      	bx	lr
 80014fa:	4613      	mov	r3, r2
 80014fc:	2a00      	cmp	r2, #0
 80014fe:	d1f6      	bne.n	80014ee <rt_rmv_list+0x12>
 8001500:	4770      	bx	lr
 8001502:	bf00      	nop
 8001504:	200026a0 	.word	0x200026a0

08001508 <rt_resort_prio>:
 8001508:	b510      	push	{r4, lr}
 800150a:	6884      	ldr	r4, [r0, #8]
 800150c:	4601      	mov	r1, r0
 800150e:	b92c      	cbnz	r4, 800151c <rt_resort_prio+0x14>
 8001510:	7843      	ldrb	r3, [r0, #1]
 8001512:	2b01      	cmp	r3, #1
 8001514:	d10d      	bne.n	8001532 <rt_resort_prio+0x2a>
 8001516:	4c07      	ldr	r4, [pc, #28]	; (8001534 <rt_resort_prio+0x2c>)
 8001518:	e003      	b.n	8001522 <rt_resort_prio+0x1a>
 800151a:	68a4      	ldr	r4, [r4, #8]
 800151c:	7823      	ldrb	r3, [r4, #0]
 800151e:	2b00      	cmp	r3, #0
 8001520:	d0fb      	beq.n	800151a <rt_resort_prio+0x12>
 8001522:	4608      	mov	r0, r1
 8001524:	f7ff ffda 	bl	80014dc <rt_rmv_list>
 8001528:	4620      	mov	r0, r4
 800152a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800152e:	f7ff bf45 	b.w	80013bc <rt_put_prio>
 8001532:	bd10      	pop	{r4, pc}
 8001534:	200026a0 	.word	0x200026a0

08001538 <rt_rmv_dly>:
 8001538:	6903      	ldr	r3, [r0, #16]
 800153a:	b510      	push	{r4, lr}
 800153c:	b163      	cbz	r3, 8001558 <rt_rmv_dly+0x20>
 800153e:	68c2      	ldr	r2, [r0, #12]
 8001540:	60da      	str	r2, [r3, #12]
 8001542:	68c2      	ldr	r2, [r0, #12]
 8001544:	b14a      	cbz	r2, 800155a <rt_rmv_dly+0x22>
 8001546:	8a99      	ldrh	r1, [r3, #20]
 8001548:	8a84      	ldrh	r4, [r0, #20]
 800154a:	4421      	add	r1, r4
 800154c:	8299      	strh	r1, [r3, #20]
 800154e:	6113      	str	r3, [r2, #16]
 8001550:	2300      	movs	r3, #0
 8001552:	60c3      	str	r3, [r0, #12]
 8001554:	2300      	movs	r3, #0
 8001556:	6103      	str	r3, [r0, #16]
 8001558:	bd10      	pop	{r4, pc}
 800155a:	829a      	strh	r2, [r3, #20]
 800155c:	e7fa      	b.n	8001554 <rt_rmv_dly+0x1c>
	...

08001560 <rt_psq_enq>:
 8001560:	b470      	push	{r4, r5, r6}
 8001562:	4b11      	ldr	r3, [pc, #68]	; (80015a8 <rt_psq_enq+0x48>)
 8001564:	78dd      	ldrb	r5, [r3, #3]
 8001566:	f3ef 8610 	mrs	r6, PRIMASK
 800156a:	f3ef 8210 	mrs	r2, PRIMASK
 800156e:	b672      	cpsid	i
 8001570:	789a      	ldrb	r2, [r3, #2]
 8001572:	4295      	cmp	r5, r2
 8001574:	d911      	bls.n	800159a <rt_psq_enq+0x3a>
 8001576:	3201      	adds	r2, #1
 8001578:	709a      	strb	r2, [r3, #2]
 800157a:	781a      	ldrb	r2, [r3, #0]
 800157c:	1c54      	adds	r4, r2, #1
 800157e:	42a5      	cmp	r5, r4
 8001580:	bf08      	it	eq
 8001582:	2400      	moveq	r4, #0
 8001584:	701c      	strb	r4, [r3, #0]
 8001586:	b906      	cbnz	r6, 800158a <rt_psq_enq+0x2a>
 8001588:	b662      	cpsie	i
 800158a:	4295      	cmp	r5, r2
 800158c:	d907      	bls.n	800159e <rt_psq_enq+0x3e>
 800158e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8001592:	bc70      	pop	{r4, r5, r6}
 8001594:	6058      	str	r0, [r3, #4]
 8001596:	6099      	str	r1, [r3, #8]
 8001598:	4770      	bx	lr
 800159a:	2e00      	cmp	r6, #0
 800159c:	d0f4      	beq.n	8001588 <rt_psq_enq+0x28>
 800159e:	2002      	movs	r0, #2
 80015a0:	bc70      	pop	{r4, r5, r6}
 80015a2:	f7ff bebd 	b.w	8001320 <os_error>
 80015a6:	bf00      	nop
 80015a8:	20001f24 	.word	0x20001f24

080015ac <rt_psh_req>:
 80015ac:	4b05      	ldr	r3, [pc, #20]	; (80015c4 <rt_psh_req+0x18>)
 80015ae:	781b      	ldrb	r3, [r3, #0]
 80015b0:	b923      	cbnz	r3, 80015bc <rt_psh_req+0x10>
 80015b2:	4b05      	ldr	r3, [pc, #20]	; (80015c8 <rt_psh_req+0x1c>)
 80015b4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80015b8:	601a      	str	r2, [r3, #0]
 80015ba:	4770      	bx	lr
 80015bc:	4b03      	ldr	r3, [pc, #12]	; (80015cc <rt_psh_req+0x20>)
 80015be:	2201      	movs	r2, #1
 80015c0:	701a      	strb	r2, [r3, #0]
 80015c2:	4770      	bx	lr
 80015c4:	20001918 	.word	0x20001918
 80015c8:	e000ed04 	.word	0xe000ed04
 80015cc:	20001919 	.word	0x20001919

080015d0 <rt_pop_req>:
 80015d0:	b538      	push	{r3, r4, r5, lr}
 80015d2:	4b1a      	ldr	r3, [pc, #104]	; (800163c <rt_pop_req+0x6c>)
 80015d4:	4c1a      	ldr	r4, [pc, #104]	; (8001640 <rt_pop_req+0x70>)
 80015d6:	6818      	ldr	r0, [r3, #0]
 80015d8:	2301      	movs	r3, #1
 80015da:	7043      	strb	r3, [r0, #1]
 80015dc:	f7ff ff18 	bl	8001410 <rt_put_rdy_first>
 80015e0:	7865      	ldrb	r5, [r4, #1]
 80015e2:	78a3      	ldrb	r3, [r4, #2]
 80015e4:	b93b      	cbnz	r3, 80015f6 <rt_pop_req+0x26>
 80015e6:	4817      	ldr	r0, [pc, #92]	; (8001644 <rt_pop_req+0x74>)
 80015e8:	7065      	strb	r5, [r4, #1]
 80015ea:	f7ff feff 	bl	80013ec <rt_get_first>
 80015ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80015f2:	f000 bdbd 	b.w	8002170 <rt_switch_req>
 80015f6:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80015fa:	6858      	ldr	r0, [r3, #4]
 80015fc:	7802      	ldrb	r2, [r0, #0]
 80015fe:	b99a      	cbnz	r2, 8001628 <rt_pop_req+0x58>
 8001600:	8919      	ldrh	r1, [r3, #8]
 8001602:	f000 fa1b 	bl	8001a3c <rt_evt_psh>
 8001606:	78e3      	ldrb	r3, [r4, #3]
 8001608:	3501      	adds	r5, #1
 800160a:	429d      	cmp	r5, r3
 800160c:	bf08      	it	eq
 800160e:	2500      	moveq	r5, #0
 8001610:	f3ef 8310 	mrs	r3, PRIMASK
 8001614:	f3ef 8210 	mrs	r2, PRIMASK
 8001618:	b672      	cpsid	i
 800161a:	78a2      	ldrb	r2, [r4, #2]
 800161c:	3a01      	subs	r2, #1
 800161e:	70a2      	strb	r2, [r4, #2]
 8001620:	2b00      	cmp	r3, #0
 8001622:	d1de      	bne.n	80015e2 <rt_pop_req+0x12>
 8001624:	b662      	cpsie	i
 8001626:	e7dc      	b.n	80015e2 <rt_pop_req+0x12>
 8001628:	2a01      	cmp	r2, #1
 800162a:	d103      	bne.n	8001634 <rt_pop_req+0x64>
 800162c:	6899      	ldr	r1, [r3, #8]
 800162e:	f000 f993 	bl	8001958 <rt_mbx_psh>
 8001632:	e7e8      	b.n	8001606 <rt_pop_req+0x36>
 8001634:	f001 f8a4 	bl	8002780 <rt_sem_psh>
 8001638:	e7e5      	b.n	8001606 <rt_pop_req+0x36>
 800163a:	bf00      	nop
 800163c:	200026ec 	.word	0x200026ec
 8001640:	20001f24 	.word	0x20001f24
 8001644:	200026a0 	.word	0x200026a0

08001648 <os_tick_init>:
 8001648:	4b08      	ldr	r3, [pc, #32]	; (800166c <os_tick_init+0x24>)
 800164a:	681a      	ldr	r2, [r3, #0]
 800164c:	4b08      	ldr	r3, [pc, #32]	; (8001670 <os_tick_init+0x28>)
 800164e:	601a      	str	r2, [r3, #0]
 8001650:	2200      	movs	r2, #0
 8001652:	605a      	str	r2, [r3, #4]
 8001654:	2207      	movs	r2, #7
 8001656:	f843 2c04 	str.w	r2, [r3, #-4]
 800165a:	4a06      	ldr	r2, [pc, #24]	; (8001674 <os_tick_init+0x2c>)
 800165c:	6813      	ldr	r3, [r2, #0]
 800165e:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001662:	6013      	str	r3, [r2, #0]
 8001664:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001668:	4770      	bx	lr
 800166a:	bf00      	nop
 800166c:	080054f4 	.word	0x080054f4
 8001670:	e000e014 	.word	0xe000e014
 8001674:	e000ed20 	.word	0xe000ed20

08001678 <os_tick_irqack>:
 8001678:	4770      	bx	lr
	...

0800167c <rt_systick>:
 800167c:	b508      	push	{r3, lr}
 800167e:	4b0b      	ldr	r3, [pc, #44]	; (80016ac <rt_systick+0x30>)
 8001680:	6818      	ldr	r0, [r3, #0]
 8001682:	2301      	movs	r3, #1
 8001684:	7043      	strb	r3, [r0, #1]
 8001686:	f7ff fec3 	bl	8001410 <rt_put_rdy_first>
 800168a:	f000 fa0d 	bl	8001aa8 <rt_chk_robin>
 800168e:	4a08      	ldr	r2, [pc, #32]	; (80016b0 <rt_systick+0x34>)
 8001690:	6813      	ldr	r3, [r2, #0]
 8001692:	3301      	adds	r3, #1
 8001694:	6013      	str	r3, [r2, #0]
 8001696:	f7ff fee9 	bl	800146c <rt_dec_dly>
 800169a:	f000 fcf1 	bl	8002080 <sysTimerTick>
 800169e:	4805      	ldr	r0, [pc, #20]	; (80016b4 <rt_systick+0x38>)
 80016a0:	f7ff fea4 	bl	80013ec <rt_get_first>
 80016a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80016a8:	f000 bd62 	b.w	8002170 <rt_switch_req>
 80016ac:	200026ec 	.word	0x200026ec
 80016b0:	20002734 	.word	0x20002734
 80016b4:	200026a0 	.word	0x200026a0

080016b8 <rt_stk_check>:
 80016b8:	4b06      	ldr	r3, [pc, #24]	; (80016d4 <rt_stk_check+0x1c>)
 80016ba:	681a      	ldr	r2, [r3, #0]
 80016bc:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80016be:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80016c0:	4293      	cmp	r3, r2
 80016c2:	d803      	bhi.n	80016cc <rt_stk_check+0x14>
 80016c4:	681a      	ldr	r2, [r3, #0]
 80016c6:	4b04      	ldr	r3, [pc, #16]	; (80016d8 <rt_stk_check+0x20>)
 80016c8:	429a      	cmp	r2, r3
 80016ca:	d002      	beq.n	80016d2 <rt_stk_check+0x1a>
 80016cc:	2001      	movs	r0, #1
 80016ce:	f7ff be27 	b.w	8001320 <os_error>
 80016d2:	4770      	bx	lr
 80016d4:	200026ec 	.word	0x200026ec
 80016d8:	e25a2ea5 	.word	0xe25a2ea5

080016dc <rt_init_stack>:
 80016dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80016de:	089b      	lsrs	r3, r3, #2
 80016e0:	bf04      	itt	eq
 80016e2:	4b22      	ldreq	r3, [pc, #136]	; (800176c <rt_init_stack+0x90>)
 80016e4:	881b      	ldrheq	r3, [r3, #0]
 80016e6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80016e8:	6b05      	ldr	r5, [r0, #48]	; 0x30
 80016ea:	bf08      	it	eq
 80016ec:	089b      	lsreq	r3, r3, #2
 80016ee:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 80016f2:	0754      	lsls	r4, r2, #29
 80016f4:	bf48      	it	mi
 80016f6:	3a04      	submi	r2, #4
 80016f8:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 80016fc:	e902 0042 	stmdb	r2, {r1, r6}
 8001700:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 8001704:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8001708:	f1a2 070c 	sub.w	r7, r2, #12
 800170c:	f04f 0e00 	mov.w	lr, #0
 8001710:	f846 ef04 	str.w	lr, [r6, #4]!
 8001714:	42be      	cmp	r6, r7
 8001716:	d1fb      	bne.n	8001710 <rt_init_stack+0x34>
 8001718:	69c6      	ldr	r6, [r0, #28]
 800171a:	f842 6c20 	str.w	r6, [r2, #-32]
 800171e:	6341      	str	r1, [r0, #52]	; 0x34
 8001720:	4912      	ldr	r1, [pc, #72]	; (800176c <rt_init_stack+0x90>)
 8001722:	62c4      	str	r4, [r0, #44]	; 0x2c
 8001724:	6809      	ldr	r1, [r1, #0]
 8001726:	00c9      	lsls	r1, r1, #3
 8001728:	d517      	bpl.n	800175a <rt_init_stack+0x7e>
 800172a:	2b11      	cmp	r3, #17
 800172c:	d915      	bls.n	800175a <rt_init_stack+0x7e>
 800172e:	3b10      	subs	r3, #16
 8001730:	f06f 0107 	mvn.w	r1, #7
 8001734:	085b      	lsrs	r3, r3, #1
 8001736:	434b      	muls	r3, r1
 8001738:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 800173c:	440a      	add	r2, r1
 800173e:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 8001742:	4621      	mov	r1, r4
 8001744:	4291      	cmp	r1, r2
 8001746:	d10b      	bne.n	8001760 <rt_init_stack+0x84>
 8001748:	3308      	adds	r3, #8
 800174a:	441c      	add	r4, r3
 800174c:	1f23      	subs	r3, r4, #4
 800174e:	429d      	cmp	r5, r3
 8001750:	bf3c      	itt	cc
 8001752:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 8001756:	f844 3c04 	strcc.w	r3, [r4, #-4]
 800175a:	4b05      	ldr	r3, [pc, #20]	; (8001770 <rt_init_stack+0x94>)
 800175c:	602b      	str	r3, [r5, #0]
 800175e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001760:	f841 0c04 	str.w	r0, [r1, #-4]
 8001764:	f841 0d08 	str.w	r0, [r1, #-8]!
 8001768:	e7ec      	b.n	8001744 <rt_init_stack+0x68>
 800176a:	bf00      	nop
 800176c:	080054dc 	.word	0x080054dc
 8001770:	e25a2ea5 	.word	0xe25a2ea5

08001774 <rt_ret_val>:
 8001774:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001778:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800177a:	b112      	cbz	r2, 8001782 <rt_ret_val+0xe>
 800177c:	3360      	adds	r3, #96	; 0x60
 800177e:	6019      	str	r1, [r3, #0]
 8001780:	4770      	bx	lr
 8001782:	3320      	adds	r3, #32
 8001784:	e7fb      	b.n	800177e <rt_ret_val+0xa>

08001786 <rt_ret_val2>:
 8001786:	b510      	push	{r4, lr}
 8001788:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 800178c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800178e:	b11c      	cbz	r4, 8001798 <rt_ret_val2+0x12>
 8001790:	3360      	adds	r3, #96	; 0x60
 8001792:	e883 0006 	stmia.w	r3, {r1, r2}
 8001796:	bd10      	pop	{r4, pc}
 8001798:	3320      	adds	r3, #32
 800179a:	e7fa      	b.n	8001792 <rt_ret_val2+0xc>

0800179c <_init_box>:
 800179c:	2a00      	cmp	r2, #0
 800179e:	bfbb      	ittet	lt
 80017a0:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 80017a4:	3207      	addlt	r2, #7
 80017a6:	3203      	addge	r2, #3
 80017a8:	f022 0207 	biclt.w	r2, r2, #7
 80017ac:	bfa8      	it	ge
 80017ae:	f022 0203 	bicge.w	r2, r2, #3
 80017b2:	b510      	push	{r4, lr}
 80017b4:	bfb4      	ite	lt
 80017b6:	2310      	movlt	r3, #16
 80017b8:	230c      	movge	r3, #12
 80017ba:	b192      	cbz	r2, 80017e2 <_init_box+0x46>
 80017bc:	18d4      	adds	r4, r2, r3
 80017be:	428c      	cmp	r4, r1
 80017c0:	d80f      	bhi.n	80017e2 <_init_box+0x46>
 80017c2:	4401      	add	r1, r0
 80017c4:	4403      	add	r3, r0
 80017c6:	4254      	negs	r4, r2
 80017c8:	6041      	str	r1, [r0, #4]
 80017ca:	6003      	str	r3, [r0, #0]
 80017cc:	6082      	str	r2, [r0, #8]
 80017ce:	4421      	add	r1, r4
 80017d0:	1898      	adds	r0, r3, r2
 80017d2:	4281      	cmp	r1, r0
 80017d4:	d302      	bcc.n	80017dc <_init_box+0x40>
 80017d6:	5100      	str	r0, [r0, r4]
 80017d8:	4603      	mov	r3, r0
 80017da:	e7f9      	b.n	80017d0 <_init_box+0x34>
 80017dc:	2000      	movs	r0, #0
 80017de:	6018      	str	r0, [r3, #0]
 80017e0:	bd10      	pop	{r4, pc}
 80017e2:	2001      	movs	r0, #1
 80017e4:	bd10      	pop	{r4, pc}

080017e6 <rt_alloc_box>:
 80017e6:	f3ef 8310 	mrs	r3, PRIMASK
 80017ea:	b672      	cpsid	i
 80017ec:	6802      	ldr	r2, [r0, #0]
 80017ee:	f003 0301 	and.w	r3, r3, #1
 80017f2:	b10a      	cbz	r2, 80017f8 <rt_alloc_box+0x12>
 80017f4:	6811      	ldr	r1, [r2, #0]
 80017f6:	6001      	str	r1, [r0, #0]
 80017f8:	b903      	cbnz	r3, 80017fc <rt_alloc_box+0x16>
 80017fa:	b662      	cpsie	i
 80017fc:	4610      	mov	r0, r2
 80017fe:	4770      	bx	lr

08001800 <rt_free_box>:
 8001800:	4281      	cmp	r1, r0
 8001802:	d30d      	bcc.n	8001820 <rt_free_box+0x20>
 8001804:	6843      	ldr	r3, [r0, #4]
 8001806:	4299      	cmp	r1, r3
 8001808:	d20a      	bcs.n	8001820 <rt_free_box+0x20>
 800180a:	f3ef 8310 	mrs	r3, PRIMASK
 800180e:	b672      	cpsid	i
 8001810:	6802      	ldr	r2, [r0, #0]
 8001812:	600a      	str	r2, [r1, #0]
 8001814:	6001      	str	r1, [r0, #0]
 8001816:	f013 0001 	ands.w	r0, r3, #1
 800181a:	d103      	bne.n	8001824 <rt_free_box+0x24>
 800181c:	b662      	cpsie	i
 800181e:	4770      	bx	lr
 8001820:	2001      	movs	r0, #1
 8001822:	4770      	bx	lr
 8001824:	2000      	movs	r0, #0
 8001826:	4770      	bx	lr

08001828 <rt_mbx_init>:
 8001828:	2301      	movs	r3, #1
 800182a:	3910      	subs	r1, #16
 800182c:	7003      	strb	r3, [r0, #0]
 800182e:	0889      	lsrs	r1, r1, #2
 8001830:	2300      	movs	r3, #0
 8001832:	7043      	strb	r3, [r0, #1]
 8001834:	7083      	strb	r3, [r0, #2]
 8001836:	6043      	str	r3, [r0, #4]
 8001838:	8103      	strh	r3, [r0, #8]
 800183a:	8143      	strh	r3, [r0, #10]
 800183c:	8183      	strh	r3, [r0, #12]
 800183e:	81c1      	strh	r1, [r0, #14]
 8001840:	4770      	bx	lr
	...

08001844 <rt_mbx_wait>:
 8001844:	b570      	push	{r4, r5, r6, lr}
 8001846:	8985      	ldrh	r5, [r0, #12]
 8001848:	4604      	mov	r4, r0
 800184a:	4616      	mov	r6, r2
 800184c:	2d00      	cmp	r5, #0
 800184e:	d038      	beq.n	80018c2 <rt_mbx_wait+0x7e>
 8001850:	8943      	ldrh	r3, [r0, #10]
 8001852:	1d1a      	adds	r2, r3, #4
 8001854:	3301      	adds	r3, #1
 8001856:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800185a:	600a      	str	r2, [r1, #0]
 800185c:	89c2      	ldrh	r2, [r0, #14]
 800185e:	b29b      	uxth	r3, r3
 8001860:	429a      	cmp	r2, r3
 8001862:	8143      	strh	r3, [r0, #10]
 8001864:	bf04      	itt	eq
 8001866:	2300      	moveq	r3, #0
 8001868:	8143      	strheq	r3, [r0, #10]
 800186a:	6843      	ldr	r3, [r0, #4]
 800186c:	b1f3      	cbz	r3, 80018ac <rt_mbx_wait+0x68>
 800186e:	7843      	ldrb	r3, [r0, #1]
 8001870:	2b02      	cmp	r3, #2
 8001872:	d11b      	bne.n	80018ac <rt_mbx_wait+0x68>
 8001874:	f7ff fdba 	bl	80013ec <rt_get_first>
 8001878:	2100      	movs	r1, #0
 800187a:	4605      	mov	r5, r0
 800187c:	f7ff ff7a 	bl	8001774 <rt_ret_val>
 8001880:	8923      	ldrh	r3, [r4, #8]
 8001882:	69e9      	ldr	r1, [r5, #28]
 8001884:	1d1a      	adds	r2, r3, #4
 8001886:	3301      	adds	r3, #1
 8001888:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 800188c:	89e2      	ldrh	r2, [r4, #14]
 800188e:	b29b      	uxth	r3, r3
 8001890:	429a      	cmp	r2, r3
 8001892:	8123      	strh	r3, [r4, #8]
 8001894:	bf08      	it	eq
 8001896:	2300      	moveq	r3, #0
 8001898:	4628      	mov	r0, r5
 800189a:	bf08      	it	eq
 800189c:	8123      	strheq	r3, [r4, #8]
 800189e:	f7ff fe4b 	bl	8001538 <rt_rmv_dly>
 80018a2:	4628      	mov	r0, r5
 80018a4:	f000 fc7e 	bl	80021a4 <rt_dispatch>
 80018a8:	2000      	movs	r0, #0
 80018aa:	bd70      	pop	{r4, r5, r6, pc}
 80018ac:	f3ef 8010 	mrs	r0, PRIMASK
 80018b0:	f3ef 8310 	mrs	r3, PRIMASK
 80018b4:	b672      	cpsid	i
 80018b6:	3d01      	subs	r5, #1
 80018b8:	81a5      	strh	r5, [r4, #12]
 80018ba:	2800      	cmp	r0, #0
 80018bc:	d1f4      	bne.n	80018a8 <rt_mbx_wait+0x64>
 80018be:	b662      	cpsie	i
 80018c0:	bd70      	pop	{r4, r5, r6, pc}
 80018c2:	b14a      	cbz	r2, 80018d8 <rt_mbx_wait+0x94>
 80018c4:	6842      	ldr	r2, [r0, #4]
 80018c6:	4b09      	ldr	r3, [pc, #36]	; (80018ec <rt_mbx_wait+0xa8>)
 80018c8:	b142      	cbz	r2, 80018dc <rt_mbx_wait+0x98>
 80018ca:	6819      	ldr	r1, [r3, #0]
 80018cc:	f7ff fd76 	bl	80013bc <rt_put_prio>
 80018d0:	2108      	movs	r1, #8
 80018d2:	4630      	mov	r0, r6
 80018d4:	f000 fc8a 	bl	80021ec <rt_block>
 80018d8:	2001      	movs	r0, #1
 80018da:	bd70      	pop	{r4, r5, r6, pc}
 80018dc:	681b      	ldr	r3, [r3, #0]
 80018de:	6043      	str	r3, [r0, #4]
 80018e0:	605a      	str	r2, [r3, #4]
 80018e2:	6098      	str	r0, [r3, #8]
 80018e4:	2301      	movs	r3, #1
 80018e6:	7043      	strb	r3, [r0, #1]
 80018e8:	e7f2      	b.n	80018d0 <rt_mbx_wait+0x8c>
 80018ea:	bf00      	nop
 80018ec:	200026ec 	.word	0x200026ec

080018f0 <rt_mbx_check>:
 80018f0:	89c2      	ldrh	r2, [r0, #14]
 80018f2:	8980      	ldrh	r0, [r0, #12]
 80018f4:	1a10      	subs	r0, r2, r0
 80018f6:	4770      	bx	lr

080018f8 <isr_mbx_send>:
 80018f8:	b508      	push	{r3, lr}
 80018fa:	f7ff fe31 	bl	8001560 <rt_psq_enq>
 80018fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001902:	f7ff be53 	b.w	80015ac <rt_psh_req>

08001906 <isr_mbx_receive>:
 8001906:	8983      	ldrh	r3, [r0, #12]
 8001908:	b510      	push	{r4, lr}
 800190a:	4604      	mov	r4, r0
 800190c:	b30b      	cbz	r3, 8001952 <isr_mbx_receive+0x4c>
 800190e:	8943      	ldrh	r3, [r0, #10]
 8001910:	3304      	adds	r3, #4
 8001912:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8001916:	600b      	str	r3, [r1, #0]
 8001918:	7843      	ldrb	r3, [r0, #1]
 800191a:	2b02      	cmp	r3, #2
 800191c:	d104      	bne.n	8001928 <isr_mbx_receive+0x22>
 800191e:	2100      	movs	r1, #0
 8001920:	f7ff fe1e 	bl	8001560 <rt_psq_enq>
 8001924:	f7ff fe42 	bl	80015ac <rt_psh_req>
 8001928:	f3ef 8310 	mrs	r3, PRIMASK
 800192c:	f3ef 8210 	mrs	r2, PRIMASK
 8001930:	b672      	cpsid	i
 8001932:	89a2      	ldrh	r2, [r4, #12]
 8001934:	3a01      	subs	r2, #1
 8001936:	81a2      	strh	r2, [r4, #12]
 8001938:	b903      	cbnz	r3, 800193c <isr_mbx_receive+0x36>
 800193a:	b662      	cpsie	i
 800193c:	8963      	ldrh	r3, [r4, #10]
 800193e:	89e2      	ldrh	r2, [r4, #14]
 8001940:	3301      	adds	r3, #1
 8001942:	b29b      	uxth	r3, r3
 8001944:	429a      	cmp	r2, r3
 8001946:	8163      	strh	r3, [r4, #10]
 8001948:	d101      	bne.n	800194e <isr_mbx_receive+0x48>
 800194a:	2300      	movs	r3, #0
 800194c:	8163      	strh	r3, [r4, #10]
 800194e:	2004      	movs	r0, #4
 8001950:	bd10      	pop	{r4, pc}
 8001952:	4618      	mov	r0, r3
 8001954:	bd10      	pop	{r4, pc}
	...

08001958 <rt_mbx_psh>:
 8001958:	6843      	ldr	r3, [r0, #4]
 800195a:	b570      	push	{r4, r5, r6, lr}
 800195c:	4604      	mov	r4, r0
 800195e:	460e      	mov	r6, r1
 8001960:	2b00      	cmp	r3, #0
 8001962:	d04b      	beq.n	80019fc <rt_mbx_psh+0xa4>
 8001964:	7845      	ldrb	r5, [r0, #1]
 8001966:	2d02      	cmp	r5, #2
 8001968:	d020      	beq.n	80019ac <rt_mbx_psh+0x54>
 800196a:	2d03      	cmp	r5, #3
 800196c:	d00a      	beq.n	8001984 <rt_mbx_psh+0x2c>
 800196e:	2d01      	cmp	r5, #1
 8001970:	d161      	bne.n	8001a36 <rt_mbx_psh+0xde>
 8001972:	f7ff fd3b 	bl	80013ec <rt_get_first>
 8001976:	4604      	mov	r4, r0
 8001978:	4632      	mov	r2, r6
 800197a:	2110      	movs	r1, #16
 800197c:	f7ff ff03 	bl	8001786 <rt_ret_val2>
 8001980:	7065      	strb	r5, [r4, #1]
 8001982:	e00e      	b.n	80019a2 <rt_mbx_psh+0x4a>
 8001984:	4608      	mov	r0, r1
 8001986:	f7ff ff2e 	bl	80017e6 <rt_alloc_box>
 800198a:	4605      	mov	r5, r0
 800198c:	2800      	cmp	r0, #0
 800198e:	d052      	beq.n	8001a36 <rt_mbx_psh+0xde>
 8001990:	4620      	mov	r0, r4
 8001992:	f7ff fd2b 	bl	80013ec <rt_get_first>
 8001996:	4629      	mov	r1, r5
 8001998:	4604      	mov	r4, r0
 800199a:	f7ff feeb 	bl	8001774 <rt_ret_val>
 800199e:	2301      	movs	r3, #1
 80019a0:	7063      	strb	r3, [r4, #1]
 80019a2:	4620      	mov	r0, r4
 80019a4:	f7ff fdc8 	bl	8001538 <rt_rmv_dly>
 80019a8:	4621      	mov	r1, r4
 80019aa:	e022      	b.n	80019f2 <rt_mbx_psh+0x9a>
 80019ac:	f7ff fd1e 	bl	80013ec <rt_get_first>
 80019b0:	2100      	movs	r1, #0
 80019b2:	4605      	mov	r5, r0
 80019b4:	f7ff fede 	bl	8001774 <rt_ret_val>
 80019b8:	8923      	ldrh	r3, [r4, #8]
 80019ba:	69e9      	ldr	r1, [r5, #28]
 80019bc:	1d1a      	adds	r2, r3, #4
 80019be:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 80019c2:	f3ef 8210 	mrs	r2, PRIMASK
 80019c6:	f3ef 8110 	mrs	r1, PRIMASK
 80019ca:	b672      	cpsid	i
 80019cc:	89a1      	ldrh	r1, [r4, #12]
 80019ce:	3101      	adds	r1, #1
 80019d0:	81a1      	strh	r1, [r4, #12]
 80019d2:	b902      	cbnz	r2, 80019d6 <rt_mbx_psh+0x7e>
 80019d4:	b662      	cpsie	i
 80019d6:	89e2      	ldrh	r2, [r4, #14]
 80019d8:	3301      	adds	r3, #1
 80019da:	b29b      	uxth	r3, r3
 80019dc:	429a      	cmp	r2, r3
 80019de:	8123      	strh	r3, [r4, #8]
 80019e0:	bf04      	itt	eq
 80019e2:	2300      	moveq	r3, #0
 80019e4:	8123      	strheq	r3, [r4, #8]
 80019e6:	2301      	movs	r3, #1
 80019e8:	706b      	strb	r3, [r5, #1]
 80019ea:	4628      	mov	r0, r5
 80019ec:	f7ff fda4 	bl	8001538 <rt_rmv_dly>
 80019f0:	4629      	mov	r1, r5
 80019f2:	4811      	ldr	r0, [pc, #68]	; (8001a38 <rt_mbx_psh+0xe0>)
 80019f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80019f8:	f7ff bce0 	b.w	80013bc <rt_put_prio>
 80019fc:	8980      	ldrh	r0, [r0, #12]
 80019fe:	89e1      	ldrh	r1, [r4, #14]
 8001a00:	4288      	cmp	r0, r1
 8001a02:	d213      	bcs.n	8001a2c <rt_mbx_psh+0xd4>
 8001a04:	8923      	ldrh	r3, [r4, #8]
 8001a06:	1d1a      	adds	r2, r3, #4
 8001a08:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8001a0c:	f3ef 8210 	mrs	r2, PRIMASK
 8001a10:	f3ef 8510 	mrs	r5, PRIMASK
 8001a14:	b672      	cpsid	i
 8001a16:	3001      	adds	r0, #1
 8001a18:	81a0      	strh	r0, [r4, #12]
 8001a1a:	b902      	cbnz	r2, 8001a1e <rt_mbx_psh+0xc6>
 8001a1c:	b662      	cpsie	i
 8001a1e:	3301      	adds	r3, #1
 8001a20:	b29b      	uxth	r3, r3
 8001a22:	4299      	cmp	r1, r3
 8001a24:	bf08      	it	eq
 8001a26:	2300      	moveq	r3, #0
 8001a28:	8123      	strh	r3, [r4, #8]
 8001a2a:	bd70      	pop	{r4, r5, r6, pc}
 8001a2c:	2003      	movs	r0, #3
 8001a2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001a32:	f7ff bc75 	b.w	8001320 <os_error>
 8001a36:	bd70      	pop	{r4, r5, r6, pc}
 8001a38:	200026a0 	.word	0x200026a0

08001a3c <rt_evt_psh>:
 8001a3c:	b510      	push	{r4, lr}
 8001a3e:	8b03      	ldrh	r3, [r0, #24]
 8001a40:	7842      	ldrb	r2, [r0, #1]
 8001a42:	4319      	orrs	r1, r3
 8001a44:	2a06      	cmp	r2, #6
 8001a46:	4604      	mov	r4, r0
 8001a48:	8301      	strh	r1, [r0, #24]
 8001a4a:	8b43      	ldrh	r3, [r0, #26]
 8001a4c:	d115      	bne.n	8001a7a <rt_evt_psh+0x3e>
 8001a4e:	ea33 0201 	bics.w	r2, r3, r1
 8001a52:	d119      	bne.n	8001a88 <rt_evt_psh+0x4c>
 8001a54:	ea21 0103 	bic.w	r1, r1, r3
 8001a58:	8321      	strh	r1, [r4, #24]
 8001a5a:	4620      	mov	r0, r4
 8001a5c:	f7ff fd6c 	bl	8001538 <rt_rmv_dly>
 8001a60:	2301      	movs	r3, #1
 8001a62:	4620      	mov	r0, r4
 8001a64:	7063      	strb	r3, [r4, #1]
 8001a66:	8b62      	ldrh	r2, [r4, #26]
 8001a68:	2108      	movs	r1, #8
 8001a6a:	f7ff fe8c 	bl	8001786 <rt_ret_val2>
 8001a6e:	4621      	mov	r1, r4
 8001a70:	4806      	ldr	r0, [pc, #24]	; (8001a8c <rt_evt_psh+0x50>)
 8001a72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001a76:	f7ff bca1 	b.w	80013bc <rt_put_prio>
 8001a7a:	2a05      	cmp	r2, #5
 8001a7c:	d104      	bne.n	8001a88 <rt_evt_psh+0x4c>
 8001a7e:	ea11 0203 	ands.w	r2, r1, r3
 8001a82:	d001      	beq.n	8001a88 <rt_evt_psh+0x4c>
 8001a84:	8342      	strh	r2, [r0, #26]
 8001a86:	e7e5      	b.n	8001a54 <rt_evt_psh+0x18>
 8001a88:	bd10      	pop	{r4, pc}
 8001a8a:	bf00      	nop
 8001a8c:	200026a0 	.word	0x200026a0

08001a90 <rt_init_robin>:
 8001a90:	4b03      	ldr	r3, [pc, #12]	; (8001aa0 <rt_init_robin+0x10>)
 8001a92:	2200      	movs	r2, #0
 8001a94:	601a      	str	r2, [r3, #0]
 8001a96:	4a03      	ldr	r2, [pc, #12]	; (8001aa4 <rt_init_robin+0x14>)
 8001a98:	6812      	ldr	r2, [r2, #0]
 8001a9a:	80da      	strh	r2, [r3, #6]
 8001a9c:	4770      	bx	lr
 8001a9e:	bf00      	nop
 8001aa0:	200026d8 	.word	0x200026d8
 8001aa4:	080054d8 	.word	0x080054d8

08001aa8 <rt_chk_robin>:
 8001aa8:	b508      	push	{r3, lr}
 8001aaa:	4b0e      	ldr	r3, [pc, #56]	; (8001ae4 <rt_chk_robin+0x3c>)
 8001aac:	685a      	ldr	r2, [r3, #4]
 8001aae:	4b0e      	ldr	r3, [pc, #56]	; (8001ae8 <rt_chk_robin+0x40>)
 8001ab0:	6819      	ldr	r1, [r3, #0]
 8001ab2:	4291      	cmp	r1, r2
 8001ab4:	490d      	ldr	r1, [pc, #52]	; (8001aec <rt_chk_robin+0x44>)
 8001ab6:	d005      	beq.n	8001ac4 <rt_chk_robin+0x1c>
 8001ab8:	601a      	str	r2, [r3, #0]
 8001aba:	88da      	ldrh	r2, [r3, #6]
 8001abc:	6808      	ldr	r0, [r1, #0]
 8001abe:	3a01      	subs	r2, #1
 8001ac0:	4402      	add	r2, r0
 8001ac2:	809a      	strh	r2, [r3, #4]
 8001ac4:	8898      	ldrh	r0, [r3, #4]
 8001ac6:	880a      	ldrh	r2, [r1, #0]
 8001ac8:	4290      	cmp	r0, r2
 8001aca:	d10a      	bne.n	8001ae2 <rt_chk_robin+0x3a>
 8001acc:	2200      	movs	r2, #0
 8001ace:	4805      	ldr	r0, [pc, #20]	; (8001ae4 <rt_chk_robin+0x3c>)
 8001ad0:	601a      	str	r2, [r3, #0]
 8001ad2:	f7ff fc8b 	bl	80013ec <rt_get_first>
 8001ad6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001ada:	4601      	mov	r1, r0
 8001adc:	4801      	ldr	r0, [pc, #4]	; (8001ae4 <rt_chk_robin+0x3c>)
 8001ade:	f7ff bc6d 	b.w	80013bc <rt_put_prio>
 8001ae2:	bd08      	pop	{r3, pc}
 8001ae4:	200026a0 	.word	0x200026a0
 8001ae8:	200026d8 	.word	0x200026d8
 8001aec:	20002734 	.word	0x20002734

08001af0 <rt_timer_insert>:
 8001af0:	4a0b      	ldr	r2, [pc, #44]	; (8001b20 <rt_timer_insert+0x30>)
 8001af2:	6813      	ldr	r3, [r2, #0]
 8001af4:	b530      	push	{r4, r5, lr}
 8001af6:	2400      	movs	r4, #0
 8001af8:	b943      	cbnz	r3, 8001b0c <rt_timer_insert+0x1c>
 8001afa:	6003      	str	r3, [r0, #0]
 8001afc:	6081      	str	r1, [r0, #8]
 8001afe:	b113      	cbz	r3, 8001b06 <rt_timer_insert+0x16>
 8001b00:	689d      	ldr	r5, [r3, #8]
 8001b02:	1a69      	subs	r1, r5, r1
 8001b04:	6099      	str	r1, [r3, #8]
 8001b06:	b144      	cbz	r4, 8001b1a <rt_timer_insert+0x2a>
 8001b08:	6020      	str	r0, [r4, #0]
 8001b0a:	bd30      	pop	{r4, r5, pc}
 8001b0c:	689d      	ldr	r5, [r3, #8]
 8001b0e:	42a9      	cmp	r1, r5
 8001b10:	d3f3      	bcc.n	8001afa <rt_timer_insert+0xa>
 8001b12:	461c      	mov	r4, r3
 8001b14:	1b49      	subs	r1, r1, r5
 8001b16:	681b      	ldr	r3, [r3, #0]
 8001b18:	e7ee      	b.n	8001af8 <rt_timer_insert+0x8>
 8001b1a:	6010      	str	r0, [r2, #0]
 8001b1c:	bd30      	pop	{r4, r5, pc}
 8001b1e:	bf00      	nop
 8001b20:	200026e8 	.word	0x200026e8

08001b24 <rt_ms2tick>:
 8001b24:	b1c0      	cbz	r0, 8001b58 <rt_ms2tick+0x34>
 8001b26:	1c43      	adds	r3, r0, #1
 8001b28:	d011      	beq.n	8001b4e <rt_ms2tick+0x2a>
 8001b2a:	4b0c      	ldr	r3, [pc, #48]	; (8001b5c <rt_ms2tick+0x38>)
 8001b2c:	4298      	cmp	r0, r3
 8001b2e:	d811      	bhi.n	8001b54 <rt_ms2tick+0x30>
 8001b30:	4b0b      	ldr	r3, [pc, #44]	; (8001b60 <rt_ms2tick+0x3c>)
 8001b32:	681b      	ldr	r3, [r3, #0]
 8001b34:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001b38:	1e5a      	subs	r2, r3, #1
 8001b3a:	fb01 2000 	mla	r0, r1, r0, r2
 8001b3e:	fbb0 f3f3 	udiv	r3, r0, r3
 8001b42:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001b46:	4283      	cmp	r3, r0
 8001b48:	d806      	bhi.n	8001b58 <rt_ms2tick+0x34>
 8001b4a:	b298      	uxth	r0, r3
 8001b4c:	4770      	bx	lr
 8001b4e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001b52:	4770      	bx	lr
 8001b54:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001b58:	4770      	bx	lr
 8001b5a:	bf00      	nop
 8001b5c:	003d0900 	.word	0x003d0900
 8001b60:	08005490 	.word	0x08005490

08001b64 <rt_tid2ptcb>:
 8001b64:	b138      	cbz	r0, 8001b76 <rt_tid2ptcb+0x12>
 8001b66:	0783      	lsls	r3, r0, #30
 8001b68:	d104      	bne.n	8001b74 <rt_tid2ptcb+0x10>
 8001b6a:	7803      	ldrb	r3, [r0, #0]
 8001b6c:	2b00      	cmp	r3, #0
 8001b6e:	bf18      	it	ne
 8001b70:	2000      	movne	r0, #0
 8001b72:	4770      	bx	lr
 8001b74:	2000      	movs	r0, #0
 8001b76:	4770      	bx	lr

08001b78 <svcKernelStart>:
 8001b78:	b5b0      	push	{r4, r5, r7, lr}
 8001b7a:	4d0e      	ldr	r5, [pc, #56]	; (8001bb4 <svcKernelStart+0x3c>)
 8001b7c:	7828      	ldrb	r0, [r5, #0]
 8001b7e:	af00      	add	r7, sp, #0
 8001b80:	b9a8      	cbnz	r0, 8001bae <svcKernelStart+0x36>
 8001b82:	4c0d      	ldr	r4, [pc, #52]	; (8001bb8 <svcKernelStart+0x40>)
 8001b84:	6823      	ldr	r3, [r4, #0]
 8001b86:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8001b8a:	f000 fb51 	bl	8002230 <rt_tsk_prio>
 8001b8e:	6823      	ldr	r3, [r4, #0]
 8001b90:	78da      	ldrb	r2, [r3, #3]
 8001b92:	2aff      	cmp	r2, #255	; 0xff
 8001b94:	d103      	bne.n	8001b9e <svcKernelStart+0x26>
 8001b96:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001b98:	3220      	adds	r2, #32
 8001b9a:	f382 8809 	msr	PSP, r2
 8001b9e:	6862      	ldr	r2, [r4, #4]
 8001ba0:	b90a      	cbnz	r2, 8001ba6 <svcKernelStart+0x2e>
 8001ba2:	e884 000c 	stmia.w	r4, {r2, r3}
 8001ba6:	f000 fcfb 	bl	80025a0 <rt_sys_start>
 8001baa:	2301      	movs	r3, #1
 8001bac:	702b      	strb	r3, [r5, #0]
 8001bae:	2000      	movs	r0, #0
 8001bb0:	bdb0      	pop	{r4, r5, r7, pc}
 8001bb2:	bf00      	nop
 8001bb4:	200026e5 	.word	0x200026e5
 8001bb8:	200026ec 	.word	0x200026ec

08001bbc <svcKernelRunning>:
 8001bbc:	4b01      	ldr	r3, [pc, #4]	; (8001bc4 <svcKernelRunning+0x8>)
 8001bbe:	7818      	ldrb	r0, [r3, #0]
 8001bc0:	4770      	bx	lr
 8001bc2:	bf00      	nop
 8001bc4:	200026e5 	.word	0x200026e5

08001bc8 <osKernelRunning>:
 8001bc8:	b510      	push	{r4, lr}
 8001bca:	f3ef 8410 	mrs	r4, PRIMASK
 8001bce:	b934      	cbnz	r4, 8001bde <osKernelRunning+0x16>
 8001bd0:	f3ef 8405 	mrs	r4, IPSR
 8001bd4:	b91c      	cbnz	r4, 8001bde <osKernelRunning+0x16>
 8001bd6:	f3ef 8414 	mrs	r4, CONTROL
 8001bda:	07e4      	lsls	r4, r4, #31
 8001bdc:	d402      	bmi.n	8001be4 <osKernelRunning+0x1c>
 8001bde:	4b03      	ldr	r3, [pc, #12]	; (8001bec <osKernelRunning+0x24>)
 8001be0:	7818      	ldrb	r0, [r3, #0]
 8001be2:	bd10      	pop	{r4, pc}
 8001be4:	f8df c008 	ldr.w	r12, [pc, #8]	; 8001bf0 <osKernelRunning+0x28>
 8001be8:	df00      	svc	0
 8001bea:	bd10      	pop	{r4, pc}
 8001bec:	200026e5 	.word	0x200026e5
 8001bf0:	08001bbd 	.word	0x08001bbd

08001bf4 <osKernelStart>:
 8001bf4:	b590      	push	{r4, r7, lr}
 8001bf6:	b089      	sub	sp, #36	; 0x24
 8001bf8:	af00      	add	r7, sp, #0
 8001bfa:	f3ef 8310 	mrs	r3, PRIMASK
 8001bfe:	2b00      	cmp	r3, #0
 8001c00:	d137      	bne.n	8001c72 <osKernelStart+0x7e>
 8001c02:	f3ef 8305 	mrs	r3, IPSR
 8001c06:	2b00      	cmp	r3, #0
 8001c08:	d133      	bne.n	8001c72 <osKernelStart+0x7e>
 8001c0a:	f7ff ffdd 	bl	8001bc8 <osKernelRunning>
 8001c0e:	b928      	cbnz	r0, 8001c1c <osKernelStart+0x28>
 8001c10:	4c19      	ldr	r4, [pc, #100]	; (8001c78 <osKernelStart+0x84>)
 8001c12:	6824      	ldr	r4, [r4, #0]
 8001c14:	b114      	cbz	r4, 8001c1c <osKernelStart+0x28>
 8001c16:	6864      	ldr	r4, [r4, #4]
 8001c18:	b104      	cbz	r4, 8001c1c <osKernelStart+0x28>
 8001c1a:	47a0      	blx	r4
 8001c1c:	f3ef 8414 	mrs	r4, CONTROL
 8001c20:	f004 0403 	and.w	r4, r4, #3
 8001c24:	2c02      	cmp	r4, #2
 8001c26:	d018      	beq.n	8001c5a <osKernelStart+0x66>
 8001c28:	2c03      	cmp	r4, #3
 8001c2a:	d01c      	beq.n	8001c66 <osKernelStart+0x72>
 8001c2c:	2c01      	cmp	r4, #1
 8001c2e:	d01e      	beq.n	8001c6e <osKernelStart+0x7a>
 8001c30:	f107 0420 	add.w	r4, r7, #32
 8001c34:	f384 8809 	msr	PSP, r4
 8001c38:	4c10      	ldr	r4, [pc, #64]	; (8001c7c <osKernelStart+0x88>)
 8001c3a:	7824      	ldrb	r4, [r4, #0]
 8001c3c:	07e4      	lsls	r4, r4, #31
 8001c3e:	d510      	bpl.n	8001c62 <osKernelStart+0x6e>
 8001c40:	2402      	movs	r4, #2
 8001c42:	f384 8814 	msr	CONTROL, r4
 8001c46:	f3bf 8f4f 	dsb	sy
 8001c4a:	f3bf 8f6f 	isb	sy
 8001c4e:	f8df c030 	ldr.w	r12, [pc, #48]	; 8001c80 <osKernelStart+0x8c>
 8001c52:	df00      	svc	0
 8001c54:	3724      	adds	r7, #36	; 0x24
 8001c56:	46bd      	mov	sp, r7
 8001c58:	bd90      	pop	{r4, r7, pc}
 8001c5a:	4c08      	ldr	r4, [pc, #32]	; (8001c7c <osKernelStart+0x88>)
 8001c5c:	7824      	ldrb	r4, [r4, #0]
 8001c5e:	07e4      	lsls	r4, r4, #31
 8001c60:	d4f5      	bmi.n	8001c4e <osKernelStart+0x5a>
 8001c62:	2403      	movs	r4, #3
 8001c64:	e7ed      	b.n	8001c42 <osKernelStart+0x4e>
 8001c66:	4c05      	ldr	r4, [pc, #20]	; (8001c7c <osKernelStart+0x88>)
 8001c68:	7824      	ldrb	r4, [r4, #0]
 8001c6a:	07e4      	lsls	r4, r4, #31
 8001c6c:	d5ef      	bpl.n	8001c4e <osKernelStart+0x5a>
 8001c6e:	20ff      	movs	r0, #255	; 0xff
 8001c70:	e7f0      	b.n	8001c54 <osKernelStart+0x60>
 8001c72:	2082      	movs	r0, #130	; 0x82
 8001c74:	e7ee      	b.n	8001c54 <osKernelStart+0x60>
 8001c76:	bf00      	nop
 8001c78:	200026d4 	.word	0x200026d4
 8001c7c:	080054be 	.word	0x080054be
 8001c80:	08001b79 	.word	0x08001b79

08001c84 <svcThreadCreate>:
 8001c84:	b570      	push	{r4, r5, r6, lr}
 8001c86:	460b      	mov	r3, r1
 8001c88:	4616      	mov	r6, r2
 8001c8a:	4602      	mov	r2, r0
 8001c8c:	b910      	cbnz	r0, 8001c94 <svcThreadCreate+0x10>
 8001c8e:	2400      	movs	r4, #0
 8001c90:	4620      	mov	r0, r4
 8001c92:	bd70      	pop	{r4, r5, r6, pc}
 8001c94:	6800      	ldr	r0, [r0, #0]
 8001c96:	2800      	cmp	r0, #0
 8001c98:	d0f9      	beq.n	8001c8e <svcThreadCreate+0xa>
 8001c9a:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 8001c9e:	1ce5      	adds	r5, r4, #3
 8001ca0:	b2ad      	uxth	r5, r5
 8001ca2:	2d06      	cmp	r5, #6
 8001ca4:	d8f3      	bhi.n	8001c8e <svcThreadCreate+0xa>
 8001ca6:	68d1      	ldr	r1, [r2, #12]
 8001ca8:	b1c1      	cbz	r1, 8001cdc <svcThreadCreate+0x58>
 8001caa:	6912      	ldr	r2, [r2, #16]
 8001cac:	3404      	adds	r4, #4
 8001cae:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 8001cb2:	f000 fafb 	bl	80022ac <rt_tsk_create>
 8001cb6:	2800      	cmp	r0, #0
 8001cb8:	d0e9      	beq.n	8001c8e <svcThreadCreate+0xa>
 8001cba:	4b0a      	ldr	r3, [pc, #40]	; (8001ce4 <svcThreadCreate+0x60>)
 8001cbc:	4a0a      	ldr	r2, [pc, #40]	; (8001ce8 <svcThreadCreate+0x64>)
 8001cbe:	3801      	subs	r0, #1
 8001cc0:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8001cc4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001cc6:	635a      	str	r2, [r3, #52]	; 0x34
 8001cc8:	4b08      	ldr	r3, [pc, #32]	; (8001cec <svcThreadCreate+0x68>)
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	b143      	cbz	r3, 8001ce0 <svcThreadCreate+0x5c>
 8001cce:	689b      	ldr	r3, [r3, #8]
 8001cd0:	b133      	cbz	r3, 8001ce0 <svcThreadCreate+0x5c>
 8001cd2:	4631      	mov	r1, r6
 8001cd4:	78e0      	ldrb	r0, [r4, #3]
 8001cd6:	4798      	blx	r3
 8001cd8:	63e0      	str	r0, [r4, #60]	; 0x3c
 8001cda:	e7d9      	b.n	8001c90 <svcThreadCreate+0xc>
 8001cdc:	460a      	mov	r2, r1
 8001cde:	e7e5      	b.n	8001cac <svcThreadCreate+0x28>
 8001ce0:	63e6      	str	r6, [r4, #60]	; 0x3c
 8001ce2:	e7d5      	b.n	8001c90 <svcThreadCreate+0xc>
 8001ce4:	20001ee8 	.word	0x20001ee8
 8001ce8:	08001e71 	.word	0x08001e71
 8001cec:	200026d4 	.word	0x200026d4

08001cf0 <svcThreadGetId>:
 8001cf0:	b508      	push	{r3, lr}
 8001cf2:	f000 fa95 	bl	8002220 <rt_tsk_self>
 8001cf6:	b118      	cbz	r0, 8001d00 <svcThreadGetId+0x10>
 8001cf8:	3801      	subs	r0, #1
 8001cfa:	4b02      	ldr	r3, [pc, #8]	; (8001d04 <svcThreadGetId+0x14>)
 8001cfc:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8001d00:	bd08      	pop	{r3, pc}
 8001d02:	bf00      	nop
 8001d04:	20001ee8 	.word	0x20001ee8

08001d08 <svcThreadTerminate>:
 8001d08:	b510      	push	{r4, lr}
 8001d0a:	f7ff ff2b 	bl	8001b64 <rt_tid2ptcb>
 8001d0e:	4604      	mov	r4, r0
 8001d10:	b170      	cbz	r0, 8001d30 <svcThreadTerminate+0x28>
 8001d12:	4b08      	ldr	r3, [pc, #32]	; (8001d34 <svcThreadTerminate+0x2c>)
 8001d14:	681b      	ldr	r3, [r3, #0]
 8001d16:	b11b      	cbz	r3, 8001d20 <svcThreadTerminate+0x18>
 8001d18:	68db      	ldr	r3, [r3, #12]
 8001d1a:	b10b      	cbz	r3, 8001d20 <svcThreadTerminate+0x18>
 8001d1c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8001d1e:	4798      	blx	r3
 8001d20:	78e0      	ldrb	r0, [r4, #3]
 8001d22:	f000 fb19 	bl	8002358 <rt_tsk_delete>
 8001d26:	28ff      	cmp	r0, #255	; 0xff
 8001d28:	bf0c      	ite	eq
 8001d2a:	2081      	moveq	r0, #129	; 0x81
 8001d2c:	2000      	movne	r0, #0
 8001d2e:	bd10      	pop	{r4, pc}
 8001d30:	2080      	movs	r0, #128	; 0x80
 8001d32:	bd10      	pop	{r4, pc}
 8001d34:	200026d4 	.word	0x200026d4

08001d38 <svcDelay>:
 8001d38:	b508      	push	{r3, lr}
 8001d3a:	b128      	cbz	r0, 8001d48 <svcDelay+0x10>
 8001d3c:	f7ff fef2 	bl	8001b24 <rt_ms2tick>
 8001d40:	f000 fd1a 	bl	8002778 <rt_dly_wait>
 8001d44:	2040      	movs	r0, #64	; 0x40
 8001d46:	bd08      	pop	{r3, pc}
 8001d48:	bd08      	pop	{r3, pc}
	...

08001d4c <osDelay>:
 8001d4c:	b510      	push	{r4, lr}
 8001d4e:	f3ef 8410 	mrs	r4, PRIMASK
 8001d52:	b934      	cbnz	r4, 8001d62 <osDelay+0x16>
 8001d54:	f3ef 8405 	mrs	r4, IPSR
 8001d58:	b91c      	cbnz	r4, 8001d62 <osDelay+0x16>
 8001d5a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001d68 <osDelay+0x1c>
 8001d5e:	df00      	svc	0
 8001d60:	bd10      	pop	{r4, pc}
 8001d62:	2082      	movs	r0, #130	; 0x82
 8001d64:	bd10      	pop	{r4, pc}
 8001d66:	0000      	.short	0x0000
 8001d68:	08001d39 	.word	0x08001d39

08001d6c <svcTimerCall>:
 8001d6c:	0783      	lsls	r3, r0, #30
 8001d6e:	d105      	bne.n	8001d7c <svcTimerCall+0x10>
 8001d70:	b138      	cbz	r0, 8001d82 <svcTimerCall+0x16>
 8001d72:	6943      	ldr	r3, [r0, #20]
 8001d74:	6901      	ldr	r1, [r0, #16]
 8001d76:	681b      	ldr	r3, [r3, #0]
 8001d78:	4618      	mov	r0, r3
 8001d7a:	4770      	bx	lr
 8001d7c:	2300      	movs	r3, #0
 8001d7e:	4619      	mov	r1, r3
 8001d80:	e7fa      	b.n	8001d78 <svcTimerCall+0xc>
 8001d82:	4603      	mov	r3, r0
 8001d84:	e7fb      	b.n	8001d7e <svcTimerCall+0x12>
	...

08001d88 <osTimerCall>:
 8001d88:	b510      	push	{r4, lr}
 8001d8a:	4604      	mov	r4, r0
 8001d8c:	4608      	mov	r0, r1
 8001d8e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001d9c <osTimerCall+0x14>
 8001d92:	df00      	svc	0
 8001d94:	e884 0003 	stmia.w	r4, {r0, r1}
 8001d98:	4620      	mov	r0, r4
 8001d9a:	bd10      	pop	{r4, pc}
 8001d9c:	08001d6d 	.word	0x08001d6d

08001da0 <svcMutexCreate>:
 8001da0:	b510      	push	{r4, lr}
 8001da2:	b148      	cbz	r0, 8001db8 <svcMutexCreate+0x18>
 8001da4:	6804      	ldr	r4, [r0, #0]
 8001da6:	b124      	cbz	r4, 8001db2 <svcMutexCreate+0x12>
 8001da8:	7823      	ldrb	r3, [r4, #0]
 8001daa:	b923      	cbnz	r3, 8001db6 <svcMutexCreate+0x16>
 8001dac:	4620      	mov	r0, r4
 8001dae:	f000 fc3d 	bl	800262c <rt_mut_init>
 8001db2:	4620      	mov	r0, r4
 8001db4:	bd10      	pop	{r4, pc}
 8001db6:	2000      	movs	r0, #0
 8001db8:	bd10      	pop	{r4, pc}

08001dba <svcMutexWait>:
 8001dba:	b570      	push	{r4, r5, r6, lr}
 8001dbc:	f010 0403 	ands.w	r4, r0, #3
 8001dc0:	4605      	mov	r5, r0
 8001dc2:	460e      	mov	r6, r1
 8001dc4:	d111      	bne.n	8001dea <svcMutexWait+0x30>
 8001dc6:	b180      	cbz	r0, 8001dea <svcMutexWait+0x30>
 8001dc8:	7803      	ldrb	r3, [r0, #0]
 8001dca:	2b03      	cmp	r3, #3
 8001dcc:	d10d      	bne.n	8001dea <svcMutexWait+0x30>
 8001dce:	4608      	mov	r0, r1
 8001dd0:	f7ff fea8 	bl	8001b24 <rt_ms2tick>
 8001dd4:	4601      	mov	r1, r0
 8001dd6:	4628      	mov	r0, r5
 8001dd8:	f000 fca0 	bl	800271c <rt_mut_wait>
 8001ddc:	2801      	cmp	r0, #1
 8001dde:	d106      	bne.n	8001dee <svcMutexWait+0x34>
 8001de0:	2e00      	cmp	r6, #0
 8001de2:	bf14      	ite	ne
 8001de4:	20c1      	movne	r0, #193	; 0xc1
 8001de6:	2081      	moveq	r0, #129	; 0x81
 8001de8:	bd70      	pop	{r4, r5, r6, pc}
 8001dea:	2080      	movs	r0, #128	; 0x80
 8001dec:	bd70      	pop	{r4, r5, r6, pc}
 8001dee:	4620      	mov	r0, r4
 8001df0:	bd70      	pop	{r4, r5, r6, pc}

08001df2 <svcMutexRelease>:
 8001df2:	0782      	lsls	r2, r0, #30
 8001df4:	b508      	push	{r3, lr}
 8001df6:	d10a      	bne.n	8001e0e <svcMutexRelease+0x1c>
 8001df8:	b148      	cbz	r0, 8001e0e <svcMutexRelease+0x1c>
 8001dfa:	7803      	ldrb	r3, [r0, #0]
 8001dfc:	2b03      	cmp	r3, #3
 8001dfe:	d106      	bne.n	8001e0e <svcMutexRelease+0x1c>
 8001e00:	f000 fc1c 	bl	800263c <rt_mut_release>
 8001e04:	28ff      	cmp	r0, #255	; 0xff
 8001e06:	bf0c      	ite	eq
 8001e08:	2081      	moveq	r0, #129	; 0x81
 8001e0a:	2000      	movne	r0, #0
 8001e0c:	bd08      	pop	{r3, pc}
 8001e0e:	2080      	movs	r0, #128	; 0x80
 8001e10:	bd08      	pop	{r3, pc}
	...

08001e14 <osMutexCreate>:
 8001e14:	b570      	push	{r4, r5, r6, lr}
 8001e16:	4605      	mov	r5, r0
 8001e18:	f3ef 8410 	mrs	r4, PRIMASK
 8001e1c:	b994      	cbnz	r4, 8001e44 <osMutexCreate+0x30>
 8001e1e:	f3ef 8605 	mrs	r6, IPSR
 8001e22:	b97e      	cbnz	r6, 8001e44 <osMutexCreate+0x30>
 8001e24:	f3ef 8414 	mrs	r4, CONTROL
 8001e28:	07e4      	lsls	r4, r4, #31
 8001e2a:	d406      	bmi.n	8001e3a <osMutexCreate+0x26>
 8001e2c:	4c06      	ldr	r4, [pc, #24]	; (8001e48 <osMutexCreate+0x34>)
 8001e2e:	7824      	ldrb	r4, [r4, #0]
 8001e30:	b91c      	cbnz	r4, 8001e3a <osMutexCreate+0x26>
 8001e32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001e36:	f7ff bfb3 	b.w	8001da0 <svcMutexCreate>
 8001e3a:	4628      	mov	r0, r5
 8001e3c:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001e4c <osMutexCreate+0x38>
 8001e40:	df00      	svc	0
 8001e42:	bd70      	pop	{r4, r5, r6, pc}
 8001e44:	2000      	movs	r0, #0
 8001e46:	bd70      	pop	{r4, r5, r6, pc}
 8001e48:	200026e5 	.word	0x200026e5
 8001e4c:	08001da1 	.word	0x08001da1

08001e50 <osMutexWait>:
 8001e50:	b510      	push	{r4, lr}
 8001e52:	f3ef 8410 	mrs	r4, PRIMASK
 8001e56:	b934      	cbnz	r4, 8001e66 <osMutexWait+0x16>
 8001e58:	f3ef 8405 	mrs	r4, IPSR
 8001e5c:	b91c      	cbnz	r4, 8001e66 <osMutexWait+0x16>
 8001e5e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001e6c <osMutexWait+0x1c>
 8001e62:	df00      	svc	0
 8001e64:	bd10      	pop	{r4, pc}
 8001e66:	2082      	movs	r0, #130	; 0x82
 8001e68:	bd10      	pop	{r4, pc}
 8001e6a:	0000      	.short	0x0000
 8001e6c:	08001dbb 	.word	0x08001dbb

08001e70 <osThreadExit>:
 8001e70:	4808      	ldr	r0, [pc, #32]	; (8001e94 <osThreadExit+0x24>)
 8001e72:	b508      	push	{r3, lr}
 8001e74:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001e78:	6800      	ldr	r0, [r0, #0]
 8001e7a:	f7ff ffe9 	bl	8001e50 <osMutexWait>
 8001e7e:	f8df c018 	ldr.w	r12, [pc, #24]	; 8001e98 <osThreadExit+0x28>
 8001e82:	df00      	svc	0
 8001e84:	4604      	mov	r4, r0
 8001e86:	f7ff fa59 	bl	800133c <sysThreadTerminate>
 8001e8a:	4620      	mov	r0, r4
 8001e8c:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001e9c <osThreadExit+0x2c>
 8001e90:	df00      	svc	0
 8001e92:	e7fe      	b.n	8001e92 <osThreadExit+0x22>
 8001e94:	200026e0 	.word	0x200026e0
 8001e98:	08001cf1 	.word	0x08001cf1
 8001e9c:	08001d09 	.word	0x08001d09

08001ea0 <osMutexRelease>:
 8001ea0:	b510      	push	{r4, lr}
 8001ea2:	f3ef 8410 	mrs	r4, PRIMASK
 8001ea6:	b934      	cbnz	r4, 8001eb6 <osMutexRelease+0x16>
 8001ea8:	f3ef 8405 	mrs	r4, IPSR
 8001eac:	b91c      	cbnz	r4, 8001eb6 <osMutexRelease+0x16>
 8001eae:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001ebc <osMutexRelease+0x1c>
 8001eb2:	df00      	svc	0
 8001eb4:	bd10      	pop	{r4, pc}
 8001eb6:	2082      	movs	r0, #130	; 0x82
 8001eb8:	bd10      	pop	{r4, pc}
 8001eba:	0000      	.short	0x0000
 8001ebc:	08001df3 	.word	0x08001df3

08001ec0 <osThreadContextCreate>:
 8001ec0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001ec4:	4680      	mov	r8, r0
 8001ec6:	460f      	mov	r7, r1
 8001ec8:	4616      	mov	r6, r2
 8001eca:	f3ef 8410 	mrs	r4, PRIMASK
 8001ece:	bb04      	cbnz	r4, 8001f12 <osThreadContextCreate+0x52>
 8001ed0:	f3ef 8305 	mrs	r3, IPSR
 8001ed4:	b9d3      	cbnz	r3, 8001f0c <osThreadContextCreate+0x4c>
 8001ed6:	f3ef 8314 	mrs	r3, CONTROL
 8001eda:	07db      	lsls	r3, r3, #31
 8001edc:	d406      	bmi.n	8001eec <osThreadContextCreate+0x2c>
 8001ede:	4b0e      	ldr	r3, [pc, #56]	; (8001f18 <osThreadContextCreate+0x58>)
 8001ee0:	781b      	ldrb	r3, [r3, #0]
 8001ee2:	b91b      	cbnz	r3, 8001eec <osThreadContextCreate+0x2c>
 8001ee4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001ee8:	f7ff becc 	b.w	8001c84 <svcThreadCreate>
 8001eec:	4d0b      	ldr	r5, [pc, #44]	; (8001f1c <osThreadContextCreate+0x5c>)
 8001eee:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001ef2:	6828      	ldr	r0, [r5, #0]
 8001ef4:	f7ff ffac 	bl	8001e50 <osMutexWait>
 8001ef8:	4640      	mov	r0, r8
 8001efa:	4639      	mov	r1, r7
 8001efc:	4632      	mov	r2, r6
 8001efe:	f8df c020 	ldr.w	r12, [pc, #32]	; 8001f20 <osThreadContextCreate+0x60>
 8001f02:	df00      	svc	0
 8001f04:	4604      	mov	r4, r0
 8001f06:	6828      	ldr	r0, [r5, #0]
 8001f08:	f7ff ffca 	bl	8001ea0 <osMutexRelease>
 8001f0c:	4620      	mov	r0, r4
 8001f0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001f12:	2400      	movs	r4, #0
 8001f14:	e7fa      	b.n	8001f0c <osThreadContextCreate+0x4c>
 8001f16:	bf00      	nop
 8001f18:	200026e5 	.word	0x200026e5
 8001f1c:	200026e0 	.word	0x200026e0
 8001f20:	08001c85 	.word	0x08001c85

08001f24 <osThreadCreate>:
 8001f24:	2200      	movs	r2, #0
 8001f26:	f7ff bfcb 	b.w	8001ec0 <osThreadContextCreate>

08001f2a <svcMessageCreate>:
 8001f2a:	b510      	push	{r4, lr}
 8001f2c:	4604      	mov	r4, r0
 8001f2e:	b160      	cbz	r0, 8001f4a <svcMessageCreate+0x20>
 8001f30:	6801      	ldr	r1, [r0, #0]
 8001f32:	b151      	cbz	r1, 8001f4a <svcMessageCreate+0x20>
 8001f34:	6840      	ldr	r0, [r0, #4]
 8001f36:	b148      	cbz	r0, 8001f4c <svcMessageCreate+0x22>
 8001f38:	7803      	ldrb	r3, [r0, #0]
 8001f3a:	b933      	cbnz	r3, 8001f4a <svcMessageCreate+0x20>
 8001f3c:	3104      	adds	r1, #4
 8001f3e:	0089      	lsls	r1, r1, #2
 8001f40:	b289      	uxth	r1, r1
 8001f42:	f7ff fc71 	bl	8001828 <rt_mbx_init>
 8001f46:	6860      	ldr	r0, [r4, #4]
 8001f48:	bd10      	pop	{r4, pc}
 8001f4a:	2000      	movs	r0, #0
 8001f4c:	bd10      	pop	{r4, pc}
	...

08001f50 <svcKernelInitialize>:
 8001f50:	b538      	push	{r3, r4, r5, lr}
 8001f52:	4c11      	ldr	r4, [pc, #68]	; (8001f98 <svcKernelInitialize+0x48>)
 8001f54:	7823      	ldrb	r3, [r4, #0]
 8001f56:	b90b      	cbnz	r3, 8001f5c <svcKernelInitialize+0xc>
 8001f58:	f000 faa8 	bl	80024ac <rt_sys_init>
 8001f5c:	4b0f      	ldr	r3, [pc, #60]	; (8001f9c <svcKernelInitialize+0x4c>)
 8001f5e:	7825      	ldrb	r5, [r4, #0]
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	22ff      	movs	r2, #255	; 0xff
 8001f64:	709a      	strb	r2, [r3, #2]
 8001f66:	b98d      	cbnz	r5, 8001f8c <svcKernelInitialize+0x3c>
 8001f68:	4629      	mov	r1, r5
 8001f6a:	480d      	ldr	r0, [pc, #52]	; (8001fa0 <svcKernelInitialize+0x50>)
 8001f6c:	f7ff ffdd 	bl	8001f2a <svcMessageCreate>
 8001f70:	4b0c      	ldr	r3, [pc, #48]	; (8001fa4 <svcKernelInitialize+0x54>)
 8001f72:	462a      	mov	r2, r5
 8001f74:	6018      	str	r0, [r3, #0]
 8001f76:	4629      	mov	r1, r5
 8001f78:	480b      	ldr	r0, [pc, #44]	; (8001fa8 <svcKernelInitialize+0x58>)
 8001f7a:	f7ff fe83 	bl	8001c84 <svcThreadCreate>
 8001f7e:	4b0b      	ldr	r3, [pc, #44]	; (8001fac <svcKernelInitialize+0x5c>)
 8001f80:	6018      	str	r0, [r3, #0]
 8001f82:	480b      	ldr	r0, [pc, #44]	; (8001fb0 <svcKernelInitialize+0x60>)
 8001f84:	f7ff ff46 	bl	8001e14 <osMutexCreate>
 8001f88:	4b0a      	ldr	r3, [pc, #40]	; (8001fb4 <svcKernelInitialize+0x64>)
 8001f8a:	6018      	str	r0, [r3, #0]
 8001f8c:	2301      	movs	r3, #1
 8001f8e:	7023      	strb	r3, [r4, #0]
 8001f90:	4b09      	ldr	r3, [pc, #36]	; (8001fb8 <svcKernelInitialize+0x68>)
 8001f92:	2000      	movs	r0, #0
 8001f94:	7018      	strb	r0, [r3, #0]
 8001f96:	bd38      	pop	{r3, r4, r5, pc}
 8001f98:	200026e4 	.word	0x200026e4
 8001f9c:	200026ec 	.word	0x200026ec
 8001fa0:	080054c4 	.word	0x080054c4
 8001fa4:	20001fa8 	.word	0x20001fa8
 8001fa8:	080054e0 	.word	0x080054e0
 8001fac:	2000269c 	.word	0x2000269c
 8001fb0:	080054f8 	.word	0x080054f8
 8001fb4:	200026e0 	.word	0x200026e0
 8001fb8:	200026e5 	.word	0x200026e5

08001fbc <osKernelInitialize>:
 8001fbc:	b510      	push	{r4, lr}
 8001fbe:	f3ef 8410 	mrs	r4, PRIMASK
 8001fc2:	b974      	cbnz	r4, 8001fe2 <osKernelInitialize+0x26>
 8001fc4:	f3ef 8405 	mrs	r4, IPSR
 8001fc8:	b95c      	cbnz	r4, 8001fe2 <osKernelInitialize+0x26>
 8001fca:	f3ef 8414 	mrs	r4, CONTROL
 8001fce:	07e4      	lsls	r4, r4, #31
 8001fd0:	d403      	bmi.n	8001fda <osKernelInitialize+0x1e>
 8001fd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001fd6:	f7ff bfbb 	b.w	8001f50 <svcKernelInitialize>
 8001fda:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001fe8 <osKernelInitialize+0x2c>
 8001fde:	df00      	svc	0
 8001fe0:	bd10      	pop	{r4, pc}
 8001fe2:	2082      	movs	r0, #130	; 0x82
 8001fe4:	bd10      	pop	{r4, pc}
 8001fe6:	0000      	.short	0x0000
 8001fe8:	08001f51 	.word	0x08001f51

08001fec <svcMessageGet>:
 8001fec:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8001ff0:	460c      	mov	r4, r1
 8001ff2:	4680      	mov	r8, r0
 8001ff4:	b318      	cbz	r0, 800203e <svcMessageGet+0x52>
 8001ff6:	7803      	ldrb	r3, [r0, #0]
 8001ff8:	2b01      	cmp	r3, #1
 8001ffa:	d125      	bne.n	8002048 <svcMessageGet+0x5c>
 8001ffc:	4608      	mov	r0, r1
 8001ffe:	f7ff fd91 	bl	8001b24 <rt_ms2tick>
 8002002:	a902      	add	r1, sp, #8
 8002004:	4602      	mov	r2, r0
 8002006:	4640      	mov	r0, r8
 8002008:	f7ff fc1c 	bl	8001844 <rt_mbx_wait>
 800200c:	2801      	cmp	r0, #1
 800200e:	d111      	bne.n	8002034 <svcMessageGet+0x48>
 8002010:	2000      	movs	r0, #0
 8002012:	2c00      	cmp	r4, #0
 8002014:	4602      	mov	r2, r0
 8002016:	4603      	mov	r3, r0
 8002018:	bf18      	it	ne
 800201a:	2040      	movne	r0, #64	; 0x40
 800201c:	9902      	ldr	r1, [sp, #8]
 800201e:	4604      	mov	r4, r0
 8002020:	460d      	mov	r5, r1
 8002022:	4616      	mov	r6, r2
 8002024:	461f      	mov	r7, r3
 8002026:	4620      	mov	r0, r4
 8002028:	4629      	mov	r1, r5
 800202a:	4632      	mov	r2, r6
 800202c:	463b      	mov	r3, r7
 800202e:	b004      	add	sp, #16
 8002030:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002034:	2000      	movs	r0, #0
 8002036:	4602      	mov	r2, r0
 8002038:	4603      	mov	r3, r0
 800203a:	2010      	movs	r0, #16
 800203c:	e7ee      	b.n	800201c <svcMessageGet+0x30>
 800203e:	2480      	movs	r4, #128	; 0x80
 8002040:	4605      	mov	r5, r0
 8002042:	4606      	mov	r6, r0
 8002044:	4607      	mov	r7, r0
 8002046:	e7ee      	b.n	8002026 <svcMessageGet+0x3a>
 8002048:	2500      	movs	r5, #0
 800204a:	2480      	movs	r4, #128	; 0x80
 800204c:	462e      	mov	r6, r5
 800204e:	462f      	mov	r7, r5
 8002050:	e7e9      	b.n	8002026 <svcMessageGet+0x3a>

08002052 <isrMessagePut>:
 8002052:	b570      	push	{r4, r5, r6, lr}
 8002054:	460e      	mov	r6, r1
 8002056:	4614      	mov	r4, r2
 8002058:	4605      	mov	r5, r0
 800205a:	b160      	cbz	r0, 8002076 <isrMessagePut+0x24>
 800205c:	b95a      	cbnz	r2, 8002076 <isrMessagePut+0x24>
 800205e:	7803      	ldrb	r3, [r0, #0]
 8002060:	2b01      	cmp	r3, #1
 8002062:	d108      	bne.n	8002076 <isrMessagePut+0x24>
 8002064:	f7ff fc44 	bl	80018f0 <rt_mbx_check>
 8002068:	b138      	cbz	r0, 800207a <isrMessagePut+0x28>
 800206a:	4628      	mov	r0, r5
 800206c:	4631      	mov	r1, r6
 800206e:	f7ff fc43 	bl	80018f8 <isr_mbx_send>
 8002072:	4620      	mov	r0, r4
 8002074:	bd70      	pop	{r4, r5, r6, pc}
 8002076:	2080      	movs	r0, #128	; 0x80
 8002078:	bd70      	pop	{r4, r5, r6, pc}
 800207a:	2081      	movs	r0, #129	; 0x81
 800207c:	bd70      	pop	{r4, r5, r6, pc}
	...

08002080 <sysTimerTick>:
 8002080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002082:	4e11      	ldr	r6, [pc, #68]	; (80020c8 <sysTimerTick+0x48>)
 8002084:	6834      	ldr	r4, [r6, #0]
 8002086:	b12c      	cbz	r4, 8002094 <sysTimerTick+0x14>
 8002088:	68a3      	ldr	r3, [r4, #8]
 800208a:	4f10      	ldr	r7, [pc, #64]	; (80020cc <sysTimerTick+0x4c>)
 800208c:	3b01      	subs	r3, #1
 800208e:	60a3      	str	r3, [r4, #8]
 8002090:	68a2      	ldr	r2, [r4, #8]
 8002092:	b102      	cbz	r2, 8002096 <sysTimerTick+0x16>
 8002094:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002096:	6825      	ldr	r5, [r4, #0]
 8002098:	6838      	ldr	r0, [r7, #0]
 800209a:	6035      	str	r5, [r6, #0]
 800209c:	4621      	mov	r1, r4
 800209e:	f7ff ffd8 	bl	8002052 <isrMessagePut>
 80020a2:	b110      	cbz	r0, 80020aa <sysTimerTick+0x2a>
 80020a4:	2004      	movs	r0, #4
 80020a6:	f7ff f93b 	bl	8001320 <os_error>
 80020aa:	7963      	ldrb	r3, [r4, #5]
 80020ac:	2b01      	cmp	r3, #1
 80020ae:	d107      	bne.n	80020c0 <sysTimerTick+0x40>
 80020b0:	68e1      	ldr	r1, [r4, #12]
 80020b2:	4620      	mov	r0, r4
 80020b4:	f7ff fd1c 	bl	8001af0 <rt_timer_insert>
 80020b8:	2d00      	cmp	r5, #0
 80020ba:	d0eb      	beq.n	8002094 <sysTimerTick+0x14>
 80020bc:	462c      	mov	r4, r5
 80020be:	e7e7      	b.n	8002090 <sysTimerTick+0x10>
 80020c0:	2301      	movs	r3, #1
 80020c2:	7123      	strb	r3, [r4, #4]
 80020c4:	e7f8      	b.n	80020b8 <sysTimerTick+0x38>
 80020c6:	bf00      	nop
 80020c8:	200026e8 	.word	0x200026e8
 80020cc:	20001fa8 	.word	0x20001fa8

080020d0 <isrMessageGet>:
 80020d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80020d2:	4604      	mov	r4, r0
 80020d4:	4616      	mov	r6, r2
 80020d6:	4608      	mov	r0, r1
 80020d8:	b101      	cbz	r1, 80020dc <isrMessageGet+0xc>
 80020da:	b122      	cbz	r2, 80020e6 <isrMessageGet+0x16>
 80020dc:	2380      	movs	r3, #128	; 0x80
 80020de:	6023      	str	r3, [r4, #0]
 80020e0:	4620      	mov	r0, r4
 80020e2:	b004      	add	sp, #16
 80020e4:	bd70      	pop	{r4, r5, r6, pc}
 80020e6:	780b      	ldrb	r3, [r1, #0]
 80020e8:	2b01      	cmp	r3, #1
 80020ea:	d1f7      	bne.n	80020dc <isrMessageGet+0xc>
 80020ec:	a902      	add	r1, sp, #8
 80020ee:	f7ff fc0a 	bl	8001906 <isr_mbx_receive>
 80020f2:	2804      	cmp	r0, #4
 80020f4:	bf08      	it	eq
 80020f6:	2310      	moveq	r3, #16
 80020f8:	ad01      	add	r5, sp, #4
 80020fa:	bf14      	ite	ne
 80020fc:	9601      	strne	r6, [sp, #4]
 80020fe:	9301      	streq	r3, [sp, #4]
 8002100:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002104:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002108:	e7ea      	b.n	80020e0 <isrMessageGet+0x10>
	...

0800210c <osMessageGet>:
 800210c:	b538      	push	{r3, r4, r5, lr}
 800210e:	4604      	mov	r4, r0
 8002110:	4615      	mov	r5, r2
 8002112:	f3ef 8010 	mrs	r0, PRIMASK
 8002116:	b910      	cbnz	r0, 800211e <osMessageGet+0x12>
 8002118:	f3ef 8005 	mrs	r0, IPSR
 800211c:	b128      	cbz	r0, 800212a <osMessageGet+0x1e>
 800211e:	462a      	mov	r2, r5
 8002120:	4620      	mov	r0, r4
 8002122:	f7ff ffd5 	bl	80020d0 <isrMessageGet>
 8002126:	4620      	mov	r0, r4
 8002128:	bd38      	pop	{r3, r4, r5, pc}
 800212a:	4608      	mov	r0, r1
 800212c:	4611      	mov	r1, r2
 800212e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800213c <osMessageGet+0x30>
 8002132:	df00      	svc	0
 8002134:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002138:	e7f5      	b.n	8002126 <osMessageGet+0x1a>
 800213a:	0000      	.short	0x0000
 800213c:	08001fed 	.word	0x08001fed

08002140 <osTimerThread>:
 8002140:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002142:	4c0a      	ldr	r4, [pc, #40]	; (800216c <osTimerThread+0x2c>)
 8002144:	6821      	ldr	r1, [r4, #0]
 8002146:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800214a:	a803      	add	r0, sp, #12
 800214c:	f7ff ffde 	bl	800210c <osMessageGet>
 8002150:	9b03      	ldr	r3, [sp, #12]
 8002152:	2b10      	cmp	r3, #16
 8002154:	d1f6      	bne.n	8002144 <osTimerThread+0x4>
 8002156:	9904      	ldr	r1, [sp, #16]
 8002158:	a801      	add	r0, sp, #4
 800215a:	f7ff fe15 	bl	8001d88 <osTimerCall>
 800215e:	9b01      	ldr	r3, [sp, #4]
 8002160:	2b00      	cmp	r3, #0
 8002162:	d0ef      	beq.n	8002144 <osTimerThread+0x4>
 8002164:	9802      	ldr	r0, [sp, #8]
 8002166:	4798      	blx	r3
 8002168:	e7ec      	b.n	8002144 <osTimerThread+0x4>
 800216a:	bf00      	nop
 800216c:	20001fa8 	.word	0x20001fa8

08002170 <rt_switch_req>:
 8002170:	4b05      	ldr	r3, [pc, #20]	; (8002188 <rt_switch_req+0x18>)
 8002172:	6058      	str	r0, [r3, #4]
 8002174:	2302      	movs	r3, #2
 8002176:	7043      	strb	r3, [r0, #1]
 8002178:	4b04      	ldr	r3, [pc, #16]	; (800218c <rt_switch_req+0x1c>)
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	b11b      	cbz	r3, 8002186 <rt_switch_req+0x16>
 800217e:	691b      	ldr	r3, [r3, #16]
 8002180:	b10b      	cbz	r3, 8002186 <rt_switch_req+0x16>
 8002182:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002184:	4718      	bx	r3
 8002186:	4770      	bx	lr
 8002188:	200026ec 	.word	0x200026ec
 800218c:	200026d4 	.word	0x200026d4

08002190 <rt_dispatch.part.0>:
 8002190:	b508      	push	{r3, lr}
 8002192:	4803      	ldr	r0, [pc, #12]	; (80021a0 <rt_dispatch.part.0+0x10>)
 8002194:	f7ff f92a 	bl	80013ec <rt_get_first>
 8002198:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800219c:	f7ff bfe8 	b.w	8002170 <rt_switch_req>
 80021a0:	200026a0 	.word	0x200026a0

080021a4 <rt_dispatch>:
 80021a4:	b570      	push	{r4, r5, r6, lr}
 80021a6:	4604      	mov	r4, r0
 80021a8:	b918      	cbnz	r0, 80021b2 <rt_dispatch+0xe>
 80021aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80021ae:	f7ff bfef 	b.w	8002190 <rt_dispatch.part.0>
 80021b2:	4e0c      	ldr	r6, [pc, #48]	; (80021e4 <rt_dispatch+0x40>)
 80021b4:	78a2      	ldrb	r2, [r4, #2]
 80021b6:	6830      	ldr	r0, [r6, #0]
 80021b8:	7883      	ldrb	r3, [r0, #2]
 80021ba:	429a      	cmp	r2, r3
 80021bc:	f04f 0501 	mov.w	r5, #1
 80021c0:	d908      	bls.n	80021d4 <rt_dispatch+0x30>
 80021c2:	f7ff f925 	bl	8001410 <rt_put_rdy_first>
 80021c6:	6833      	ldr	r3, [r6, #0]
 80021c8:	705d      	strb	r5, [r3, #1]
 80021ca:	4620      	mov	r0, r4
 80021cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80021d0:	f7ff bfce 	b.w	8002170 <rt_switch_req>
 80021d4:	7065      	strb	r5, [r4, #1]
 80021d6:	4621      	mov	r1, r4
 80021d8:	4803      	ldr	r0, [pc, #12]	; (80021e8 <rt_dispatch+0x44>)
 80021da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80021de:	f7ff b8ed 	b.w	80013bc <rt_put_prio>
 80021e2:	bf00      	nop
 80021e4:	200026ec 	.word	0x200026ec
 80021e8:	200026a0 	.word	0x200026a0

080021ec <rt_block>:
 80021ec:	b538      	push	{r3, r4, r5, lr}
 80021ee:	460d      	mov	r5, r1
 80021f0:	4601      	mov	r1, r0
 80021f2:	b180      	cbz	r0, 8002216 <rt_block+0x2a>
 80021f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80021f8:	4298      	cmp	r0, r3
 80021fa:	4c07      	ldr	r4, [pc, #28]	; (8002218 <rt_block+0x2c>)
 80021fc:	d002      	beq.n	8002204 <rt_block+0x18>
 80021fe:	6820      	ldr	r0, [r4, #0]
 8002200:	f7ff f910 	bl	8001424 <rt_put_dly>
 8002204:	6823      	ldr	r3, [r4, #0]
 8002206:	4805      	ldr	r0, [pc, #20]	; (800221c <rt_block+0x30>)
 8002208:	705d      	strb	r5, [r3, #1]
 800220a:	f7ff f8ef 	bl	80013ec <rt_get_first>
 800220e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002212:	f7ff bfad 	b.w	8002170 <rt_switch_req>
 8002216:	bd38      	pop	{r3, r4, r5, pc}
 8002218:	200026ec 	.word	0x200026ec
 800221c:	200026a0 	.word	0x200026a0

08002220 <rt_tsk_self>:
 8002220:	4b02      	ldr	r3, [pc, #8]	; (800222c <rt_tsk_self+0xc>)
 8002222:	6818      	ldr	r0, [r3, #0]
 8002224:	b100      	cbz	r0, 8002228 <rt_tsk_self+0x8>
 8002226:	78c0      	ldrb	r0, [r0, #3]
 8002228:	4770      	bx	lr
 800222a:	bf00      	nop
 800222c:	200026ec 	.word	0x200026ec

08002230 <rt_tsk_prio>:
 8002230:	b510      	push	{r4, lr}
 8002232:	b9a8      	cbnz	r0, 8002260 <rt_tsk_prio+0x30>
 8002234:	4b19      	ldr	r3, [pc, #100]	; (800229c <rt_tsk_prio+0x6c>)
 8002236:	681b      	ldr	r3, [r3, #0]
 8002238:	7099      	strb	r1, [r3, #2]
 800223a:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 800223e:	4818      	ldr	r0, [pc, #96]	; (80022a0 <rt_tsk_prio+0x70>)
 8002240:	6843      	ldr	r3, [r0, #4]
 8002242:	789b      	ldrb	r3, [r3, #2]
 8002244:	428b      	cmp	r3, r1
 8002246:	d801      	bhi.n	800224c <rt_tsk_prio+0x1c>
 8002248:	2000      	movs	r0, #0
 800224a:	bd10      	pop	{r4, pc}
 800224c:	4c13      	ldr	r4, [pc, #76]	; (800229c <rt_tsk_prio+0x6c>)
 800224e:	6821      	ldr	r1, [r4, #0]
 8002250:	f7ff f8b4 	bl	80013bc <rt_put_prio>
 8002254:	6823      	ldr	r3, [r4, #0]
 8002256:	2201      	movs	r2, #1
 8002258:	705a      	strb	r2, [r3, #1]
 800225a:	f7ff ff99 	bl	8002190 <rt_dispatch.part.0>
 800225e:	e7f3      	b.n	8002248 <rt_tsk_prio+0x18>
 8002260:	4b10      	ldr	r3, [pc, #64]	; (80022a4 <rt_tsk_prio+0x74>)
 8002262:	881b      	ldrh	r3, [r3, #0]
 8002264:	4298      	cmp	r0, r3
 8002266:	d817      	bhi.n	8002298 <rt_tsk_prio+0x68>
 8002268:	3801      	subs	r0, #1
 800226a:	4b0f      	ldr	r3, [pc, #60]	; (80022a8 <rt_tsk_prio+0x78>)
 800226c:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002270:	b194      	cbz	r4, 8002298 <rt_tsk_prio+0x68>
 8002272:	4b0a      	ldr	r3, [pc, #40]	; (800229c <rt_tsk_prio+0x6c>)
 8002274:	70a1      	strb	r1, [r4, #2]
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 800227c:	429c      	cmp	r4, r3
 800227e:	d0de      	beq.n	800223e <rt_tsk_prio+0xe>
 8002280:	4620      	mov	r0, r4
 8002282:	f7ff f941 	bl	8001508 <rt_resort_prio>
 8002286:	7863      	ldrb	r3, [r4, #1]
 8002288:	2b01      	cmp	r3, #1
 800228a:	d1dd      	bne.n	8002248 <rt_tsk_prio+0x18>
 800228c:	4804      	ldr	r0, [pc, #16]	; (80022a0 <rt_tsk_prio+0x70>)
 800228e:	f7ff f8ad 	bl	80013ec <rt_get_first>
 8002292:	f7ff ff87 	bl	80021a4 <rt_dispatch>
 8002296:	e7d7      	b.n	8002248 <rt_tsk_prio+0x18>
 8002298:	20ff      	movs	r0, #255	; 0xff
 800229a:	bd10      	pop	{r4, pc}
 800229c:	200026ec 	.word	0x200026ec
 80022a0:	200026a0 	.word	0x200026a0
 80022a4:	080054c0 	.word	0x080054c0
 80022a8:	20001ee8 	.word	0x20001ee8

080022ac <rt_tsk_create>:
 80022ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80022b0:	f011 0fff 	tst.w	r1, #255	; 0xff
 80022b4:	460d      	mov	r5, r1
 80022b6:	4680      	mov	r8, r0
 80022b8:	4823      	ldr	r0, [pc, #140]	; (8002348 <rt_tsk_create+0x9c>)
 80022ba:	4616      	mov	r6, r2
 80022bc:	469a      	mov	r10, r3
 80022be:	bf08      	it	eq
 80022c0:	3501      	addeq	r5, #1
 80022c2:	f7ff fa90 	bl	80017e6 <rt_alloc_box>
 80022c6:	4604      	mov	r4, r0
 80022c8:	b920      	cbnz	r0, 80022d4 <rt_tsk_create+0x28>
 80022ca:	f04f 0900 	mov.w	r9, #0
 80022ce:	4648      	mov	r0, r9
 80022d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80022d4:	4b1d      	ldr	r3, [pc, #116]	; (800234c <rt_tsk_create+0xa0>)
 80022d6:	6306      	str	r6, [r0, #48]	; 0x30
 80022d8:	881b      	ldrh	r3, [r3, #0]
 80022da:	4e1d      	ldr	r6, [pc, #116]	; (8002350 <rt_tsk_create+0xa4>)
 80022dc:	0a28      	lsrs	r0, r5, #8
 80022de:	62a0      	str	r0, [r4, #40]	; 0x28
 80022e0:	2100      	movs	r1, #0
 80022e2:	428b      	cmp	r3, r1
 80022e4:	f101 0901 	add.w	r9, r1, #1
 80022e8:	d0ef      	beq.n	80022ca <rt_tsk_create+0x1e>
 80022ea:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 80022ee:	460f      	mov	r7, r1
 80022f0:	f852 2c04 	ldr.w	r2, [r2, #-4]
 80022f4:	4649      	mov	r1, r9
 80022f6:	2a00      	cmp	r2, #0
 80022f8:	d1f3      	bne.n	80022e2 <rt_tsk_create+0x36>
 80022fa:	b2ed      	uxtb	r5, r5
 80022fc:	2301      	movs	r3, #1
 80022fe:	f884 9003 	strb.w	r9, [r4, #3]
 8002302:	f8c4 a01c 	str.w	r10, [r4, #28]
 8002306:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 800230a:	7022      	strb	r2, [r4, #0]
 800230c:	7063      	strb	r3, [r4, #1]
 800230e:	70a5      	strb	r5, [r4, #2]
 8002310:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002314:	6062      	str	r2, [r4, #4]
 8002316:	60a2      	str	r2, [r4, #8]
 8002318:	60e2      	str	r2, [r4, #12]
 800231a:	6122      	str	r2, [r4, #16]
 800231c:	6222      	str	r2, [r4, #32]
 800231e:	82a2      	strh	r2, [r4, #20]
 8002320:	82e2      	strh	r2, [r4, #22]
 8002322:	8322      	strh	r2, [r4, #24]
 8002324:	8362      	strh	r2, [r4, #26]
 8002326:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800232a:	b918      	cbnz	r0, 8002334 <rt_tsk_create+0x88>
 800232c:	4809      	ldr	r0, [pc, #36]	; (8002354 <rt_tsk_create+0xa8>)
 800232e:	f7ff fa5a 	bl	80017e6 <rt_alloc_box>
 8002332:	6320      	str	r0, [r4, #48]	; 0x30
 8002334:	4620      	mov	r0, r4
 8002336:	4641      	mov	r1, r8
 8002338:	f7ff f9d0 	bl	80016dc <rt_init_stack>
 800233c:	4620      	mov	r0, r4
 800233e:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 8002342:	f7ff ff2f 	bl	80021a4 <rt_dispatch>
 8002346:	e7c2      	b.n	80022ce <rt_tsk_create+0x22>
 8002348:	200022d0 	.word	0x200022d0
 800234c:	080054c0 	.word	0x080054c0
 8002350:	20001ee8 	.word	0x20001ee8
 8002354:	20001cd8 	.word	0x20001cd8

08002358 <rt_tsk_delete>:
 8002358:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800235c:	4d4d      	ldr	r5, [pc, #308]	; (8002494 <rt_tsk_delete+0x13c>)
 800235e:	b118      	cbz	r0, 8002368 <rt_tsk_delete+0x10>
 8002360:	682b      	ldr	r3, [r5, #0]
 8002362:	78db      	ldrb	r3, [r3, #3]
 8002364:	4298      	cmp	r0, r3
 8002366:	d141      	bne.n	80023ec <rt_tsk_delete+0x94>
 8002368:	682c      	ldr	r4, [r5, #0]
 800236a:	f8df 813c 	ldr.w	r8, [pc, #316]	; 80024a8 <rt_tsk_delete+0x150>
 800236e:	2300      	movs	r3, #0
 8002370:	7063      	strb	r3, [r4, #1]
 8002372:	f001 ff3e 	bl	80041f2 <rt_get_PSP>
 8002376:	62e0      	str	r0, [r4, #44]	; 0x2c
 8002378:	f7ff f99e 	bl	80016b8 <rt_stk_check>
 800237c:	682b      	ldr	r3, [r5, #0]
 800237e:	6a1c      	ldr	r4, [r3, #32]
 8002380:	2701      	movs	r7, #1
 8002382:	b9a4      	cbnz	r4, 80023ae <rt_tsk_delete+0x56>
 8002384:	682a      	ldr	r2, [r5, #0]
 8002386:	4944      	ldr	r1, [pc, #272]	; (8002498 <rt_tsk_delete+0x140>)
 8002388:	78d3      	ldrb	r3, [r2, #3]
 800238a:	4844      	ldr	r0, [pc, #272]	; (800249c <rt_tsk_delete+0x144>)
 800238c:	3b01      	subs	r3, #1
 800238e:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 8002392:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8002394:	f7ff fa34 	bl	8001800 <rt_free_box>
 8002398:	6829      	ldr	r1, [r5, #0]
 800239a:	4841      	ldr	r0, [pc, #260]	; (80024a0 <rt_tsk_delete+0x148>)
 800239c:	630c      	str	r4, [r1, #48]	; 0x30
 800239e:	f7ff fa2f 	bl	8001800 <rt_free_box>
 80023a2:	602c      	str	r4, [r5, #0]
 80023a4:	f7ff fef4 	bl	8002190 <rt_dispatch.part.0>
 80023a8:	4620      	mov	r0, r4
 80023aa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80023ae:	6863      	ldr	r3, [r4, #4]
 80023b0:	b1b3      	cbz	r3, 80023e0 <rt_tsk_delete+0x88>
 80023b2:	4620      	mov	r0, r4
 80023b4:	f7ff f81a 	bl	80013ec <rt_get_first>
 80023b8:	2100      	movs	r1, #0
 80023ba:	4606      	mov	r6, r0
 80023bc:	f7ff f9da 	bl	8001774 <rt_ret_val>
 80023c0:	4630      	mov	r0, r6
 80023c2:	f7ff f8b9 	bl	8001538 <rt_rmv_dly>
 80023c6:	7077      	strb	r7, [r6, #1]
 80023c8:	4631      	mov	r1, r6
 80023ca:	4640      	mov	r0, r8
 80023cc:	f7fe fff6 	bl	80013bc <rt_put_prio>
 80023d0:	68e3      	ldr	r3, [r4, #12]
 80023d2:	6a32      	ldr	r2, [r6, #32]
 80023d4:	8067      	strh	r7, [r4, #2]
 80023d6:	60a6      	str	r6, [r4, #8]
 80023d8:	60e2      	str	r2, [r4, #12]
 80023da:	6234      	str	r4, [r6, #32]
 80023dc:	461c      	mov	r4, r3
 80023de:	e7d0      	b.n	8002382 <rt_tsk_delete+0x2a>
 80023e0:	68e2      	ldr	r2, [r4, #12]
 80023e2:	8063      	strh	r3, [r4, #2]
 80023e4:	60a3      	str	r3, [r4, #8]
 80023e6:	60e3      	str	r3, [r4, #12]
 80023e8:	4614      	mov	r4, r2
 80023ea:	e7ca      	b.n	8002382 <rt_tsk_delete+0x2a>
 80023ec:	4b2d      	ldr	r3, [pc, #180]	; (80024a4 <rt_tsk_delete+0x14c>)
 80023ee:	881b      	ldrh	r3, [r3, #0]
 80023f0:	4298      	cmp	r0, r3
 80023f2:	d84d      	bhi.n	8002490 <rt_tsk_delete+0x138>
 80023f4:	4b28      	ldr	r3, [pc, #160]	; (8002498 <rt_tsk_delete+0x140>)
 80023f6:	1e47      	subs	r7, r0, #1
 80023f8:	4699      	mov	r9, r3
 80023fa:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 80023fe:	2e00      	cmp	r6, #0
 8002400:	d046      	beq.n	8002490 <rt_tsk_delete+0x138>
 8002402:	4630      	mov	r0, r6
 8002404:	f7ff f86a 	bl	80014dc <rt_rmv_list>
 8002408:	4630      	mov	r0, r6
 800240a:	f7ff f895 	bl	8001538 <rt_rmv_dly>
 800240e:	f8df b098 	ldr.w	r11, [pc, #152]	; 80024a8 <rt_tsk_delete+0x150>
 8002412:	6a34      	ldr	r4, [r6, #32]
 8002414:	f04f 0a01 	mov.w	r10, #1
 8002418:	b9b4      	cbnz	r4, 8002448 <rt_tsk_delete+0xf0>
 800241a:	6b31      	ldr	r1, [r6, #48]	; 0x30
 800241c:	481f      	ldr	r0, [pc, #124]	; (800249c <rt_tsk_delete+0x144>)
 800241e:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 8002422:	f7ff f9ed 	bl	8001800 <rt_free_box>
 8002426:	4631      	mov	r1, r6
 8002428:	6334      	str	r4, [r6, #48]	; 0x30
 800242a:	481d      	ldr	r0, [pc, #116]	; (80024a0 <rt_tsk_delete+0x148>)
 800242c:	f7ff f9e8 	bl	8001800 <rt_free_box>
 8002430:	481d      	ldr	r0, [pc, #116]	; (80024a8 <rt_tsk_delete+0x150>)
 8002432:	6829      	ldr	r1, [r5, #0]
 8002434:	6843      	ldr	r3, [r0, #4]
 8002436:	789a      	ldrb	r2, [r3, #2]
 8002438:	788b      	ldrb	r3, [r1, #2]
 800243a:	429a      	cmp	r2, r3
 800243c:	d9b4      	bls.n	80023a8 <rt_tsk_delete+0x50>
 800243e:	2301      	movs	r3, #1
 8002440:	704b      	strb	r3, [r1, #1]
 8002442:	f7fe ffbb 	bl	80013bc <rt_put_prio>
 8002446:	e7ad      	b.n	80023a4 <rt_tsk_delete+0x4c>
 8002448:	6863      	ldr	r3, [r4, #4]
 800244a:	b1db      	cbz	r3, 8002484 <rt_tsk_delete+0x12c>
 800244c:	4620      	mov	r0, r4
 800244e:	f7fe ffcd 	bl	80013ec <rt_get_first>
 8002452:	2100      	movs	r1, #0
 8002454:	4680      	mov	r8, r0
 8002456:	f7ff f98d 	bl	8001774 <rt_ret_val>
 800245a:	4640      	mov	r0, r8
 800245c:	f7ff f86c 	bl	8001538 <rt_rmv_dly>
 8002460:	f888 a001 	strb.w	r10, [r8, #1]
 8002464:	4641      	mov	r1, r8
 8002466:	4658      	mov	r0, r11
 8002468:	f7fe ffa8 	bl	80013bc <rt_put_prio>
 800246c:	68e3      	ldr	r3, [r4, #12]
 800246e:	f8d8 2020 	ldr.w	r2, [r8, #32]
 8002472:	f8a4 a002 	strh.w	r10, [r4, #2]
 8002476:	f8c4 8008 	str.w	r8, [r4, #8]
 800247a:	60e2      	str	r2, [r4, #12]
 800247c:	f8c8 4020 	str.w	r4, [r8, #32]
 8002480:	461c      	mov	r4, r3
 8002482:	e7c9      	b.n	8002418 <rt_tsk_delete+0xc0>
 8002484:	68e2      	ldr	r2, [r4, #12]
 8002486:	8063      	strh	r3, [r4, #2]
 8002488:	60a3      	str	r3, [r4, #8]
 800248a:	60e3      	str	r3, [r4, #12]
 800248c:	4614      	mov	r4, r2
 800248e:	e7c3      	b.n	8002418 <rt_tsk_delete+0xc0>
 8002490:	24ff      	movs	r4, #255	; 0xff
 8002492:	e789      	b.n	80023a8 <rt_tsk_delete+0x50>
 8002494:	200026ec 	.word	0x200026ec
 8002498:	20001ee8 	.word	0x20001ee8
 800249c:	20001cd8 	.word	0x20001cd8
 80024a0:	200022d0 	.word	0x200022d0
 80024a4:	080054c0 	.word	0x080054c0
 80024a8:	200026a0 	.word	0x200026a0

080024ac <rt_sys_init>:
 80024ac:	b538      	push	{r3, r4, r5, lr}
 80024ae:	4b2c      	ldr	r3, [pc, #176]	; (8002560 <rt_sys_init+0xb4>)
 80024b0:	492c      	ldr	r1, [pc, #176]	; (8002564 <rt_sys_init+0xb8>)
 80024b2:	881a      	ldrh	r2, [r3, #0]
 80024b4:	2300      	movs	r3, #0
 80024b6:	4618      	mov	r0, r3
 80024b8:	4293      	cmp	r3, r2
 80024ba:	d34d      	bcc.n	8002558 <rt_sys_init+0xac>
 80024bc:	4b2a      	ldr	r3, [pc, #168]	; (8002568 <rt_sys_init+0xbc>)
 80024be:	482b      	ldr	r0, [pc, #172]	; (800256c <rt_sys_init+0xc0>)
 80024c0:	8819      	ldrh	r1, [r3, #0]
 80024c2:	4c2b      	ldr	r4, [pc, #172]	; (8002570 <rt_sys_init+0xc4>)
 80024c4:	2240      	movs	r2, #64	; 0x40
 80024c6:	f7ff f969 	bl	800179c <_init_box>
 80024ca:	4b2a      	ldr	r3, [pc, #168]	; (8002574 <rt_sys_init+0xc8>)
 80024cc:	482a      	ldr	r0, [pc, #168]	; (8002578 <rt_sys_init+0xcc>)
 80024ce:	881a      	ldrh	r2, [r3, #0]
 80024d0:	4b2a      	ldr	r3, [pc, #168]	; (800257c <rt_sys_init+0xd0>)
 80024d2:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 80024d6:	6819      	ldr	r1, [r3, #0]
 80024d8:	f7ff f960 	bl	800179c <_init_box>
 80024dc:	4b28      	ldr	r3, [pc, #160]	; (8002580 <rt_sys_init+0xd4>)
 80024de:	8819      	ldrh	r1, [r3, #0]
 80024e0:	4b28      	ldr	r3, [pc, #160]	; (8002584 <rt_sys_init+0xd8>)
 80024e2:	2208      	movs	r2, #8
 80024e4:	6818      	ldr	r0, [r3, #0]
 80024e6:	f7ff f959 	bl	800179c <_init_box>
 80024ea:	23ff      	movs	r3, #255	; 0xff
 80024ec:	2500      	movs	r5, #0
 80024ee:	70e3      	strb	r3, [r4, #3]
 80024f0:	4821      	ldr	r0, [pc, #132]	; (8002578 <rt_sys_init+0xcc>)
 80024f2:	62a5      	str	r5, [r4, #40]	; 0x28
 80024f4:	2301      	movs	r3, #1
 80024f6:	7063      	strb	r3, [r4, #1]
 80024f8:	7025      	strb	r5, [r4, #0]
 80024fa:	70a5      	strb	r5, [r4, #2]
 80024fc:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002500:	6065      	str	r5, [r4, #4]
 8002502:	60a5      	str	r5, [r4, #8]
 8002504:	60e5      	str	r5, [r4, #12]
 8002506:	6125      	str	r5, [r4, #16]
 8002508:	6225      	str	r5, [r4, #32]
 800250a:	82a5      	strh	r5, [r4, #20]
 800250c:	82e5      	strh	r5, [r4, #22]
 800250e:	8325      	strh	r5, [r4, #24]
 8002510:	8365      	strh	r5, [r4, #26]
 8002512:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8002516:	f7ff f966 	bl	80017e6 <rt_alloc_box>
 800251a:	491b      	ldr	r1, [pc, #108]	; (8002588 <rt_sys_init+0xdc>)
 800251c:	6320      	str	r0, [r4, #48]	; 0x30
 800251e:	4620      	mov	r0, r4
 8002520:	f7ff f8dc 	bl	80016dc <rt_init_stack>
 8002524:	4b19      	ldr	r3, [pc, #100]	; (800258c <rt_sys_init+0xe0>)
 8002526:	2204      	movs	r2, #4
 8002528:	701a      	strb	r2, [r3, #0]
 800252a:	605d      	str	r5, [r3, #4]
 800252c:	4b18      	ldr	r3, [pc, #96]	; (8002590 <rt_sys_init+0xe4>)
 800252e:	701a      	strb	r2, [r3, #0]
 8002530:	60dd      	str	r5, [r3, #12]
 8002532:	611d      	str	r5, [r3, #16]
 8002534:	829d      	strh	r5, [r3, #20]
 8002536:	4b17      	ldr	r3, [pc, #92]	; (8002594 <rt_sys_init+0xe8>)
 8002538:	4620      	mov	r0, r4
 800253a:	601c      	str	r4, [r3, #0]
 800253c:	2302      	movs	r3, #2
 800253e:	7063      	strb	r3, [r4, #1]
 8002540:	f7ff fe16 	bl	8002170 <rt_switch_req>
 8002544:	4a14      	ldr	r2, [pc, #80]	; (8002598 <rt_sys_init+0xec>)
 8002546:	4b15      	ldr	r3, [pc, #84]	; (800259c <rt_sys_init+0xf0>)
 8002548:	7812      	ldrb	r2, [r2, #0]
 800254a:	701d      	strb	r5, [r3, #0]
 800254c:	705d      	strb	r5, [r3, #1]
 800254e:	70da      	strb	r2, [r3, #3]
 8002550:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002554:	f7ff ba9c 	b.w	8001a90 <rt_init_robin>
 8002558:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800255c:	3301      	adds	r3, #1
 800255e:	e7ab      	b.n	80024b8 <rt_sys_init+0xc>
 8002560:	080054c0 	.word	0x080054c0
 8002564:	20001ee8 	.word	0x20001ee8
 8002568:	0800548c 	.word	0x0800548c
 800256c:	200022d0 	.word	0x200022d0
 8002570:	200026f4 	.word	0x200026f4
 8002574:	080054dc 	.word	0x080054dc
 8002578:	20001cd8 	.word	0x20001cd8
 800257c:	08005488 	.word	0x08005488
 8002580:	0800548e 	.word	0x0800548e
 8002584:	200008b8 	.word	0x200008b8
 8002588:	0800131d 	.word	0x0800131d
 800258c:	200026a0 	.word	0x200026a0
 8002590:	200026b8 	.word	0x200026b8
 8002594:	200026ec 	.word	0x200026ec
 8002598:	080054bd 	.word	0x080054bd
 800259c:	20001f24 	.word	0x20001f24

080025a0 <rt_sys_start>:
 80025a0:	b508      	push	{r3, lr}
 80025a2:	4b1e      	ldr	r3, [pc, #120]	; (800261c <rt_sys_start+0x7c>)
 80025a4:	681a      	ldr	r2, [r3, #0]
 80025a6:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 80025aa:	601a      	str	r2, [r3, #0]
 80025ac:	681b      	ldr	r3, [r3, #0]
 80025ae:	021b      	lsls	r3, r3, #8
 80025b0:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80025b4:	43db      	mvns	r3, r3
 80025b6:	fab3 f383 	clz	r3, r3
 80025ba:	4a19      	ldr	r2, [pc, #100]	; (8002620 <rt_sys_start+0x80>)
 80025bc:	4819      	ldr	r0, [pc, #100]	; (8002624 <rt_sys_start+0x84>)
 80025be:	6812      	ldr	r2, [r2, #0]
 80025c0:	6801      	ldr	r1, [r0, #0]
 80025c2:	b2db      	uxtb	r3, r3
 80025c4:	f1c3 0308 	rsb	r3, r3, #8
 80025c8:	f3c2 2202 	ubfx	r2, r2, #8, #3
 80025cc:	4293      	cmp	r3, r2
 80025ce:	bf98      	it	ls
 80025d0:	1c53      	addls	r3, r2, #1
 80025d2:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 80025d6:	fa02 f303 	lsl.w	r3, r2, r3
 80025da:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80025de:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 80025e2:	4313      	orrs	r3, r2
 80025e4:	6003      	str	r3, [r0, #0]
 80025e6:	f7ff f82f 	bl	8001648 <os_tick_init>
 80025ea:	4b0f      	ldr	r3, [pc, #60]	; (8002628 <rt_sys_start+0x88>)
 80025ec:	2800      	cmp	r0, #0
 80025ee:	6018      	str	r0, [r3, #0]
 80025f0:	db12      	blt.n	8002618 <rt_sys_start+0x78>
 80025f2:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 80025f6:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 80025fa:	22ff      	movs	r2, #255	; 0xff
 80025fc:	7002      	strb	r2, [r0, #0]
 80025fe:	681a      	ldr	r2, [r3, #0]
 8002600:	0953      	lsrs	r3, r2, #5
 8002602:	009b      	lsls	r3, r3, #2
 8002604:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8002608:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 800260c:	f002 021f 	and.w	r2, r2, #31
 8002610:	2101      	movs	r1, #1
 8002612:	fa01 f202 	lsl.w	r2, r1, r2
 8002616:	601a      	str	r2, [r3, #0]
 8002618:	bd08      	pop	{r3, pc}
 800261a:	bf00      	nop
 800261c:	e000ed20 	.word	0xe000ed20
 8002620:	e000ed0c 	.word	0xe000ed0c
 8002624:	e000ed1c 	.word	0xe000ed1c
 8002628:	200026d0 	.word	0x200026d0

0800262c <rt_mut_init>:
 800262c:	2303      	movs	r3, #3
 800262e:	7003      	strb	r3, [r0, #0]
 8002630:	2300      	movs	r3, #0
 8002632:	8043      	strh	r3, [r0, #2]
 8002634:	6043      	str	r3, [r0, #4]
 8002636:	6083      	str	r3, [r0, #8]
 8002638:	60c3      	str	r3, [r0, #12]
 800263a:	4770      	bx	lr

0800263c <rt_mut_release>:
 800263c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002640:	8843      	ldrh	r3, [r0, #2]
 8002642:	4605      	mov	r5, r0
 8002644:	2b00      	cmp	r3, #0
 8002646:	d063      	beq.n	8002710 <rt_mut_release+0xd4>
 8002648:	4f32      	ldr	r7, [pc, #200]	; (8002714 <rt_mut_release+0xd8>)
 800264a:	6881      	ldr	r1, [r0, #8]
 800264c:	683a      	ldr	r2, [r7, #0]
 800264e:	4291      	cmp	r1, r2
 8002650:	d15e      	bne.n	8002710 <rt_mut_release+0xd4>
 8002652:	3b01      	subs	r3, #1
 8002654:	b29b      	uxth	r3, r3
 8002656:	8043      	strh	r3, [r0, #2]
 8002658:	b11b      	cbz	r3, 8002662 <rt_mut_release+0x26>
 800265a:	2400      	movs	r4, #0
 800265c:	4620      	mov	r0, r4
 800265e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002662:	6a0b      	ldr	r3, [r1, #32]
 8002664:	4298      	cmp	r0, r3
 8002666:	d129      	bne.n	80026bc <rt_mut_release+0x80>
 8002668:	68c3      	ldr	r3, [r0, #12]
 800266a:	620b      	str	r3, [r1, #32]
 800266c:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8002670:	6a0c      	ldr	r4, [r1, #32]
 8002672:	bb5c      	cbnz	r4, 80026cc <rt_mut_release+0x90>
 8002674:	708b      	strb	r3, [r1, #2]
 8002676:	686a      	ldr	r2, [r5, #4]
 8002678:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8002718 <rt_mut_release+0xdc>
 800267c:	2a00      	cmp	r2, #0
 800267e:	d03b      	beq.n	80026f8 <rt_mut_release+0xbc>
 8002680:	4628      	mov	r0, r5
 8002682:	f7fe feb3 	bl	80013ec <rt_get_first>
 8002686:	4621      	mov	r1, r4
 8002688:	4606      	mov	r6, r0
 800268a:	f7ff f873 	bl	8001774 <rt_ret_val>
 800268e:	4630      	mov	r0, r6
 8002690:	f7fe ff52 	bl	8001538 <rt_rmv_dly>
 8002694:	6a33      	ldr	r3, [r6, #32]
 8002696:	60eb      	str	r3, [r5, #12]
 8002698:	f04f 0901 	mov.w	r9, #1
 800269c:	6839      	ldr	r1, [r7, #0]
 800269e:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80026a2:	f8a5 9002 	strh.w	r9, [r5, #2]
 80026a6:	60ae      	str	r6, [r5, #8]
 80026a8:	6235      	str	r5, [r6, #32]
 80026aa:	788a      	ldrb	r2, [r1, #2]
 80026ac:	789b      	ldrb	r3, [r3, #2]
 80026ae:	429a      	cmp	r2, r3
 80026b0:	d314      	bcc.n	80026dc <rt_mut_release+0xa0>
 80026b2:	4630      	mov	r0, r6
 80026b4:	f7ff fd76 	bl	80021a4 <rt_dispatch>
 80026b8:	e7d0      	b.n	800265c <rt_mut_release+0x20>
 80026ba:	4613      	mov	r3, r2
 80026bc:	2b00      	cmp	r3, #0
 80026be:	d0d5      	beq.n	800266c <rt_mut_release+0x30>
 80026c0:	68da      	ldr	r2, [r3, #12]
 80026c2:	4295      	cmp	r5, r2
 80026c4:	d1f9      	bne.n	80026ba <rt_mut_release+0x7e>
 80026c6:	68ea      	ldr	r2, [r5, #12]
 80026c8:	60da      	str	r2, [r3, #12]
 80026ca:	e7cf      	b.n	800266c <rt_mut_release+0x30>
 80026cc:	6862      	ldr	r2, [r4, #4]
 80026ce:	b11a      	cbz	r2, 80026d8 <rt_mut_release+0x9c>
 80026d0:	7892      	ldrb	r2, [r2, #2]
 80026d2:	4293      	cmp	r3, r2
 80026d4:	bf38      	it	cc
 80026d6:	4613      	movcc	r3, r2
 80026d8:	68e4      	ldr	r4, [r4, #12]
 80026da:	e7ca      	b.n	8002672 <rt_mut_release+0x36>
 80026dc:	4640      	mov	r0, r8
 80026de:	f7fe fe6d 	bl	80013bc <rt_put_prio>
 80026e2:	4631      	mov	r1, r6
 80026e4:	4640      	mov	r0, r8
 80026e6:	f7fe fe69 	bl	80013bc <rt_put_prio>
 80026ea:	683b      	ldr	r3, [r7, #0]
 80026ec:	f883 9001 	strb.w	r9, [r3, #1]
 80026f0:	f886 9001 	strb.w	r9, [r6, #1]
 80026f4:	4620      	mov	r0, r4
 80026f6:	e7dd      	b.n	80026b4 <rt_mut_release+0x78>
 80026f8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80026fc:	7892      	ldrb	r2, [r2, #2]
 80026fe:	429a      	cmp	r2, r3
 8002700:	d9ab      	bls.n	800265a <rt_mut_release+0x1e>
 8002702:	4640      	mov	r0, r8
 8002704:	f7fe fe5a 	bl	80013bc <rt_put_prio>
 8002708:	683b      	ldr	r3, [r7, #0]
 800270a:	2201      	movs	r2, #1
 800270c:	705a      	strb	r2, [r3, #1]
 800270e:	e7f1      	b.n	80026f4 <rt_mut_release+0xb8>
 8002710:	24ff      	movs	r4, #255	; 0xff
 8002712:	e7a3      	b.n	800265c <rt_mut_release+0x20>
 8002714:	200026ec 	.word	0x200026ec
 8002718:	200026a0 	.word	0x200026a0

0800271c <rt_mut_wait>:
 800271c:	8843      	ldrh	r3, [r0, #2]
 800271e:	b570      	push	{r4, r5, r6, lr}
 8002720:	4604      	mov	r4, r0
 8002722:	460e      	mov	r6, r1
 8002724:	4d13      	ldr	r5, [pc, #76]	; (8002774 <rt_mut_wait+0x58>)
 8002726:	b943      	cbnz	r3, 800273a <rt_mut_wait+0x1e>
 8002728:	682a      	ldr	r2, [r5, #0]
 800272a:	6082      	str	r2, [r0, #8]
 800272c:	6a11      	ldr	r1, [r2, #32]
 800272e:	60c1      	str	r1, [r0, #12]
 8002730:	6210      	str	r0, [r2, #32]
 8002732:	3301      	adds	r3, #1
 8002734:	8063      	strh	r3, [r4, #2]
 8002736:	2000      	movs	r0, #0
 8002738:	bd70      	pop	{r4, r5, r6, pc}
 800273a:	6880      	ldr	r0, [r0, #8]
 800273c:	682a      	ldr	r2, [r5, #0]
 800273e:	4290      	cmp	r0, r2
 8002740:	d0f7      	beq.n	8002732 <rt_mut_wait+0x16>
 8002742:	b181      	cbz	r1, 8002766 <rt_mut_wait+0x4a>
 8002744:	7893      	ldrb	r3, [r2, #2]
 8002746:	7882      	ldrb	r2, [r0, #2]
 8002748:	429a      	cmp	r2, r3
 800274a:	d202      	bcs.n	8002752 <rt_mut_wait+0x36>
 800274c:	7083      	strb	r3, [r0, #2]
 800274e:	f7fe fedb 	bl	8001508 <rt_resort_prio>
 8002752:	6862      	ldr	r2, [r4, #4]
 8002754:	b14a      	cbz	r2, 800276a <rt_mut_wait+0x4e>
 8002756:	6829      	ldr	r1, [r5, #0]
 8002758:	4620      	mov	r0, r4
 800275a:	f7fe fe2f 	bl	80013bc <rt_put_prio>
 800275e:	2109      	movs	r1, #9
 8002760:	4630      	mov	r0, r6
 8002762:	f7ff fd43 	bl	80021ec <rt_block>
 8002766:	2001      	movs	r0, #1
 8002768:	bd70      	pop	{r4, r5, r6, pc}
 800276a:	682b      	ldr	r3, [r5, #0]
 800276c:	6063      	str	r3, [r4, #4]
 800276e:	605a      	str	r2, [r3, #4]
 8002770:	609c      	str	r4, [r3, #8]
 8002772:	e7f4      	b.n	800275e <rt_mut_wait+0x42>
 8002774:	200026ec 	.word	0x200026ec

08002778 <rt_dly_wait>:
 8002778:	2103      	movs	r1, #3
 800277a:	f7ff bd37 	b.w	80021ec <rt_block>
	...

08002780 <rt_sem_psh>:
 8002780:	6842      	ldr	r2, [r0, #4]
 8002782:	b510      	push	{r4, lr}
 8002784:	b17a      	cbz	r2, 80027a6 <rt_sem_psh+0x26>
 8002786:	f7fe fe31 	bl	80013ec <rt_get_first>
 800278a:	4604      	mov	r4, r0
 800278c:	f7fe fed4 	bl	8001538 <rt_rmv_dly>
 8002790:	2101      	movs	r1, #1
 8002792:	7061      	strb	r1, [r4, #1]
 8002794:	4620      	mov	r0, r4
 8002796:	f7fe ffed 	bl	8001774 <rt_ret_val>
 800279a:	4621      	mov	r1, r4
 800279c:	4804      	ldr	r0, [pc, #16]	; (80027b0 <rt_sem_psh+0x30>)
 800279e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80027a2:	f7fe be0b 	b.w	80013bc <rt_put_prio>
 80027a6:	8842      	ldrh	r2, [r0, #2]
 80027a8:	3201      	adds	r2, #1
 80027aa:	8042      	strh	r2, [r0, #2]
 80027ac:	bd10      	pop	{r4, pc}
 80027ae:	bf00      	nop
 80027b0:	200026a0 	.word	0x200026a0

080027b4 <timer_irq_handler>:
 80027b4:	b570      	push	{r4, r5, r6, lr}
 80027b6:	4c13      	ldr	r4, [pc, #76]	; (8002804 <timer_irq_handler+0x50>)
 80027b8:	6823      	ldr	r3, [r4, #0]
 80027ba:	691a      	ldr	r2, [r3, #16]
 80027bc:	0795      	lsls	r5, r2, #30
 80027be:	d507      	bpl.n	80027d0 <timer_irq_handler+0x1c>
 80027c0:	68da      	ldr	r2, [r3, #12]
 80027c2:	0790      	lsls	r0, r2, #30
 80027c4:	d504      	bpl.n	80027d0 <timer_irq_handler+0x1c>
 80027c6:	f06f 0202 	mvn.w	r2, #2
 80027ca:	611a      	str	r2, [r3, #16]
 80027cc:	f7fe fcb4 	bl	8001138 <us_ticker_irq_handler>
 80027d0:	6823      	ldr	r3, [r4, #0]
 80027d2:	691a      	ldr	r2, [r3, #16]
 80027d4:	0751      	lsls	r1, r2, #29
 80027d6:	d513      	bpl.n	8002800 <timer_irq_handler+0x4c>
 80027d8:	68da      	ldr	r2, [r3, #12]
 80027da:	0752      	lsls	r2, r2, #29
 80027dc:	d510      	bpl.n	8002800 <timer_irq_handler+0x4c>
 80027de:	f06f 0204 	mvn.w	r2, #4
 80027e2:	4e09      	ldr	r6, [pc, #36]	; (8002808 <timer_irq_handler+0x54>)
 80027e4:	611a      	str	r2, [r3, #16]
 80027e6:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80027e8:	6833      	ldr	r3, [r6, #0]
 80027ea:	1aeb      	subs	r3, r5, r3
 80027ec:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80027f0:	d306      	bcc.n	8002800 <timer_irq_handler+0x4c>
 80027f2:	f000 fe0b 	bl	800340c <HAL_IncTick>
 80027f6:	6823      	ldr	r3, [r4, #0]
 80027f8:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 80027fc:	639a      	str	r2, [r3, #56]	; 0x38
 80027fe:	6035      	str	r5, [r6, #0]
 8002800:	bd70      	pop	{r4, r5, r6, pc}
 8002802:	bf00      	nop
 8002804:	20002738 	.word	0x20002738
 8002808:	2000192c 	.word	0x2000192c

0800280c <HAL_InitTick>:
 800280c:	b530      	push	{r4, r5, lr}
 800280e:	b089      	sub	sp, #36	; 0x24
 8002810:	a901      	add	r1, sp, #4
 8002812:	a803      	add	r0, sp, #12
 8002814:	f001 f9f2 	bl	8003bfc <HAL_RCC_GetClockConfig>
 8002818:	f001 f9c0 	bl	8003b9c <HAL_RCC_GetPCLK1Freq>
 800281c:	2300      	movs	r3, #0
 800281e:	9302      	str	r3, [sp, #8]
 8002820:	4b24      	ldr	r3, [pc, #144]	; (80028b4 <HAL_InitTick+0xa8>)
 8002822:	9001      	str	r0, [sp, #4]
 8002824:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002826:	4c24      	ldr	r4, [pc, #144]	; (80028b8 <HAL_InitTick+0xac>)
 8002828:	f042 0208 	orr.w	r2, r2, #8
 800282c:	641a      	str	r2, [r3, #64]	; 0x40
 800282e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002830:	f002 0208 	and.w	r2, r2, #8
 8002834:	9202      	str	r2, [sp, #8]
 8002836:	9a02      	ldr	r2, [sp, #8]
 8002838:	6a1a      	ldr	r2, [r3, #32]
 800283a:	f042 0208 	orr.w	r2, r2, #8
 800283e:	621a      	str	r2, [r3, #32]
 8002840:	6a1a      	ldr	r2, [r3, #32]
 8002842:	f022 0208 	bic.w	r2, r2, #8
 8002846:	621a      	str	r2, [r3, #32]
 8002848:	9a06      	ldr	r2, [sp, #24]
 800284a:	f5a3 330b 	sub.w	r3, r3, #142336	; 0x22c00
 800284e:	6023      	str	r3, [r4, #0]
 8002850:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002854:	60e3      	str	r3, [r4, #12]
 8002856:	4b19      	ldr	r3, [pc, #100]	; (80028bc <HAL_InitTick+0xb0>)
 8002858:	bb4a      	cbnz	r2, 80028ae <HAL_InitTick+0xa2>
 800285a:	fbb0 f0f3 	udiv	r0, r0, r3
 800285e:	3801      	subs	r0, #1
 8002860:	2500      	movs	r5, #0
 8002862:	6060      	str	r0, [r4, #4]
 8002864:	4814      	ldr	r0, [pc, #80]	; (80028b8 <HAL_InitTick+0xac>)
 8002866:	6125      	str	r5, [r4, #16]
 8002868:	60a5      	str	r5, [r4, #8]
 800286a:	6165      	str	r5, [r4, #20]
 800286c:	f000 fd78 	bl	8003360 <HAL_TIM_OC_Init>
 8002870:	4913      	ldr	r1, [pc, #76]	; (80028c0 <HAL_InitTick+0xb4>)
 8002872:	2032      	movs	r0, #50	; 0x32
 8002874:	f000 fd06 	bl	8003284 <__NVIC_SetVector>
 8002878:	4b12      	ldr	r3, [pc, #72]	; (80028c4 <HAL_InitTick+0xb8>)
 800287a:	480f      	ldr	r0, [pc, #60]	; (80028b8 <HAL_InitTick+0xac>)
 800287c:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8002880:	605a      	str	r2, [r3, #4]
 8002882:	4629      	mov	r1, r5
 8002884:	f000 fda8 	bl	80033d8 <HAL_TIM_OC_Start>
 8002888:	2104      	movs	r1, #4
 800288a:	480b      	ldr	r0, [pc, #44]	; (80028b8 <HAL_InitTick+0xac>)
 800288c:	f000 fda4 	bl	80033d8 <HAL_TIM_OC_Start>
 8002890:	6823      	ldr	r3, [r4, #0]
 8002892:	4a0d      	ldr	r2, [pc, #52]	; (80028c8 <HAL_InitTick+0xbc>)
 8002894:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002896:	6011      	str	r1, [r2, #0]
 8002898:	6812      	ldr	r2, [r2, #0]
 800289a:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 800289e:	639a      	str	r2, [r3, #56]	; 0x38
 80028a0:	68da      	ldr	r2, [r3, #12]
 80028a2:	4628      	mov	r0, r5
 80028a4:	f042 0204 	orr.w	r2, r2, #4
 80028a8:	60da      	str	r2, [r3, #12]
 80028aa:	b009      	add	sp, #36	; 0x24
 80028ac:	bd30      	pop	{r4, r5, pc}
 80028ae:	0040      	lsls	r0, r0, #1
 80028b0:	e7d3      	b.n	800285a <HAL_InitTick+0x4e>
 80028b2:	bf00      	nop
 80028b4:	40023800 	.word	0x40023800
 80028b8:	20002738 	.word	0x20002738
 80028bc:	000f4240 	.word	0x000f4240
 80028c0:	080027b5 	.word	0x080027b5
 80028c4:	e000e100 	.word	0xe000e100
 80028c8:	2000192c 	.word	0x2000192c

080028cc <HAL_SuspendTick>:
 80028cc:	4b03      	ldr	r3, [pc, #12]	; (80028dc <HAL_SuspendTick+0x10>)
 80028ce:	4a04      	ldr	r2, [pc, #16]	; (80028e0 <HAL_SuspendTick+0x14>)
 80028d0:	6013      	str	r3, [r2, #0]
 80028d2:	68da      	ldr	r2, [r3, #12]
 80028d4:	f022 0204 	bic.w	r2, r2, #4
 80028d8:	60da      	str	r2, [r3, #12]
 80028da:	4770      	bx	lr
 80028dc:	40000c00 	.word	0x40000c00
 80028e0:	20002738 	.word	0x20002738

080028e4 <HAL_ResumeTick>:
 80028e4:	4b03      	ldr	r3, [pc, #12]	; (80028f4 <HAL_ResumeTick+0x10>)
 80028e6:	4a04      	ldr	r2, [pc, #16]	; (80028f8 <HAL_ResumeTick+0x14>)
 80028e8:	6013      	str	r3, [r2, #0]
 80028ea:	68da      	ldr	r2, [r3, #12]
 80028ec:	f042 0204 	orr.w	r2, r2, #4
 80028f0:	60da      	str	r2, [r3, #12]
 80028f2:	4770      	bx	lr
 80028f4:	40000c00 	.word	0x40000c00
 80028f8:	20002738 	.word	0x20002738

080028fc <Set_GPIO_Clock>:
 80028fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80028fe:	2300      	movs	r3, #0
 8002900:	2807      	cmp	r0, #7
 8002902:	d855      	bhi.n	80029b0 <Set_GPIO_Clock+0xb4>
 8002904:	e8df f000 	tbb	[pc, r0]
 8002908:	2d201304 	.word	0x2d201304
 800290c:	4754543a 	.word	0x4754543a
 8002910:	9300      	str	r3, [sp, #0]
 8002912:	4b2a      	ldr	r3, [pc, #168]	; (80029bc <Set_GPIO_Clock+0xc0>)
 8002914:	482a      	ldr	r0, [pc, #168]	; (80029c0 <Set_GPIO_Clock+0xc4>)
 8002916:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002918:	f042 0201 	orr.w	r2, r2, #1
 800291c:	631a      	str	r2, [r3, #48]	; 0x30
 800291e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002920:	f003 0301 	and.w	r3, r3, #1
 8002924:	9300      	str	r3, [sp, #0]
 8002926:	9b00      	ldr	r3, [sp, #0]
 8002928:	b007      	add	sp, #28
 800292a:	f85d fb04 	ldr.w	pc, [sp], #4
 800292e:	9301      	str	r3, [sp, #4]
 8002930:	4b22      	ldr	r3, [pc, #136]	; (80029bc <Set_GPIO_Clock+0xc0>)
 8002932:	4824      	ldr	r0, [pc, #144]	; (80029c4 <Set_GPIO_Clock+0xc8>)
 8002934:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002936:	f042 0202 	orr.w	r2, r2, #2
 800293a:	631a      	str	r2, [r3, #48]	; 0x30
 800293c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800293e:	f003 0302 	and.w	r3, r3, #2
 8002942:	9301      	str	r3, [sp, #4]
 8002944:	9b01      	ldr	r3, [sp, #4]
 8002946:	e7ef      	b.n	8002928 <Set_GPIO_Clock+0x2c>
 8002948:	9302      	str	r3, [sp, #8]
 800294a:	4b1c      	ldr	r3, [pc, #112]	; (80029bc <Set_GPIO_Clock+0xc0>)
 800294c:	481e      	ldr	r0, [pc, #120]	; (80029c8 <Set_GPIO_Clock+0xcc>)
 800294e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002950:	f042 0204 	orr.w	r2, r2, #4
 8002954:	631a      	str	r2, [r3, #48]	; 0x30
 8002956:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002958:	f003 0304 	and.w	r3, r3, #4
 800295c:	9302      	str	r3, [sp, #8]
 800295e:	9b02      	ldr	r3, [sp, #8]
 8002960:	e7e2      	b.n	8002928 <Set_GPIO_Clock+0x2c>
 8002962:	9303      	str	r3, [sp, #12]
 8002964:	4b15      	ldr	r3, [pc, #84]	; (80029bc <Set_GPIO_Clock+0xc0>)
 8002966:	4819      	ldr	r0, [pc, #100]	; (80029cc <Set_GPIO_Clock+0xd0>)
 8002968:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800296a:	f042 0208 	orr.w	r2, r2, #8
 800296e:	631a      	str	r2, [r3, #48]	; 0x30
 8002970:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002972:	f003 0308 	and.w	r3, r3, #8
 8002976:	9303      	str	r3, [sp, #12]
 8002978:	9b03      	ldr	r3, [sp, #12]
 800297a:	e7d5      	b.n	8002928 <Set_GPIO_Clock+0x2c>
 800297c:	9304      	str	r3, [sp, #16]
 800297e:	4b0f      	ldr	r3, [pc, #60]	; (80029bc <Set_GPIO_Clock+0xc0>)
 8002980:	4813      	ldr	r0, [pc, #76]	; (80029d0 <Set_GPIO_Clock+0xd4>)
 8002982:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002984:	f042 0210 	orr.w	r2, r2, #16
 8002988:	631a      	str	r2, [r3, #48]	; 0x30
 800298a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800298c:	f003 0310 	and.w	r3, r3, #16
 8002990:	9304      	str	r3, [sp, #16]
 8002992:	9b04      	ldr	r3, [sp, #16]
 8002994:	e7c8      	b.n	8002928 <Set_GPIO_Clock+0x2c>
 8002996:	9305      	str	r3, [sp, #20]
 8002998:	4b08      	ldr	r3, [pc, #32]	; (80029bc <Set_GPIO_Clock+0xc0>)
 800299a:	480e      	ldr	r0, [pc, #56]	; (80029d4 <Set_GPIO_Clock+0xd8>)
 800299c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800299e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80029a2:	631a      	str	r2, [r3, #48]	; 0x30
 80029a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029a6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80029aa:	9305      	str	r3, [sp, #20]
 80029ac:	9b05      	ldr	r3, [sp, #20]
 80029ae:	e7bb      	b.n	8002928 <Set_GPIO_Clock+0x2c>
 80029b0:	4809      	ldr	r0, [pc, #36]	; (80029d8 <Set_GPIO_Clock+0xdc>)
 80029b2:	f7fe fc7f 	bl	80012b4 <error>
 80029b6:	2000      	movs	r0, #0
 80029b8:	e7b6      	b.n	8002928 <Set_GPIO_Clock+0x2c>
 80029ba:	bf00      	nop
 80029bc:	40023800 	.word	0x40023800
 80029c0:	40020000 	.word	0x40020000
 80029c4:	40020400 	.word	0x40020400
 80029c8:	40020800 	.word	0x40020800
 80029cc:	40020c00 	.word	0x40020c00
 80029d0:	40021000 	.word	0x40021000
 80029d4:	40021c00 	.word	0x40021c00
 80029d8:	080054fc 	.word	0x080054fc

080029dc <gpio_set>:
 80029dc:	b510      	push	{r4, lr}
 80029de:	2100      	movs	r1, #0
 80029e0:	4604      	mov	r4, r0
 80029e2:	f004 040f 	and.w	r4, r4, #15
 80029e6:	f000 f8bf 	bl	8002b68 <pin_function>
 80029ea:	2001      	movs	r0, #1
 80029ec:	40a0      	lsls	r0, r4
 80029ee:	bd10      	pop	{r4, pc}

080029f0 <gpio_init>:
 80029f0:	b570      	push	{r4, r5, r6, lr}
 80029f2:	4604      	mov	r4, r0
 80029f4:	1c4b      	adds	r3, r1, #1
 80029f6:	460e      	mov	r6, r1
 80029f8:	8221      	strh	r1, [r4, #16]
 80029fa:	d016      	beq.n	8002a2a <gpio_init+0x3a>
 80029fc:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8002a00:	f7ff ff7c 	bl	80028fc <Set_GPIO_Clock>
 8002a04:	4605      	mov	r5, r0
 8002a06:	4630      	mov	r0, r6
 8002a08:	f7ff ffe8 	bl	80029dc <gpio_set>
 8002a0c:	8a23      	ldrh	r3, [r4, #16]
 8002a0e:	4a07      	ldr	r2, [pc, #28]	; (8002a2c <gpio_init+0x3c>)
 8002a10:	6165      	str	r5, [r4, #20]
 8002a12:	f003 030f 	and.w	r3, r3, #15
 8002a16:	6020      	str	r0, [r4, #0]
 8002a18:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002a1c:	61a3      	str	r3, [r4, #24]
 8002a1e:	f105 0310 	add.w	r3, r5, #16
 8002a22:	3518      	adds	r5, #24
 8002a24:	6063      	str	r3, [r4, #4]
 8002a26:	60a5      	str	r5, [r4, #8]
 8002a28:	60e5      	str	r5, [r4, #12]
 8002a2a:	bd70      	pop	{r4, r5, r6, pc}
 8002a2c:	08005520 	.word	0x08005520

08002a30 <gpio_mode>:
 8002a30:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8002a34:	f000 b91c 	b.w	8002c70 <pin_mode>

08002a38 <gpio_dir>:
 8002a38:	b510      	push	{r4, lr}
 8002a3a:	6983      	ldr	r3, [r0, #24]
 8002a3c:	6944      	ldr	r4, [r0, #20]
 8002a3e:	b971      	cbnz	r1, 8002a5e <gpio_dir+0x26>
 8002a40:	6821      	ldr	r1, [r4, #0]
 8002a42:	fa93 f2a3 	rbit	r2, r3
 8002a46:	fab2 f282 	clz	r2, r2
 8002a4a:	2003      	movs	r0, #3
 8002a4c:	0052      	lsls	r2, r2, #1
 8002a4e:	fa00 f202 	lsl.w	r2, r0, r2
 8002a52:	ea21 0202 	bic.w	r2, r1, r2
 8002a56:	fa93 f3a3 	rbit	r3, r3
 8002a5a:	6022      	str	r2, [r4, #0]
 8002a5c:	bd10      	pop	{r4, pc}
 8002a5e:	6822      	ldr	r2, [r4, #0]
 8002a60:	fa93 f1a3 	rbit	r1, r3
 8002a64:	fab1 f181 	clz	r1, r1
 8002a68:	fa93 f3a3 	rbit	r3, r3
 8002a6c:	2003      	movs	r0, #3
 8002a6e:	0049      	lsls	r1, r1, #1
 8002a70:	fa00 f101 	lsl.w	r1, r0, r1
 8002a74:	fab3 f383 	clz	r3, r3
 8002a78:	ea22 0201 	bic.w	r2, r2, r1
 8002a7c:	005b      	lsls	r3, r3, #1
 8002a7e:	2101      	movs	r1, #1
 8002a80:	fa01 f303 	lsl.w	r3, r1, r3
 8002a84:	4313      	orrs	r3, r2
 8002a86:	6023      	str	r3, [r4, #0]
 8002a88:	bd10      	pop	{r4, pc}

08002a8a <hal_sleep>:
 8002a8a:	b508      	push	{r3, lr}
 8002a8c:	f7ff ff1e 	bl	80028cc <HAL_SuspendTick>
 8002a90:	2101      	movs	r1, #1
 8002a92:	2000      	movs	r0, #0
 8002a94:	f000 fe12 	bl	80036bc <HAL_PWR_EnterSLEEPMode>
 8002a98:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002a9c:	f7ff bf22 	b.w	80028e4 <HAL_ResumeTick>

08002aa0 <us_ticker_init>:
 8002aa0:	4b05      	ldr	r3, [pc, #20]	; (8002ab8 <us_ticker_init+0x18>)
 8002aa2:	6818      	ldr	r0, [r3, #0]
 8002aa4:	b930      	cbnz	r0, 8002ab4 <us_ticker_init+0x14>
 8002aa6:	2201      	movs	r2, #1
 8002aa8:	601a      	str	r2, [r3, #0]
 8002aaa:	4b04      	ldr	r3, [pc, #16]	; (8002abc <us_ticker_init+0x1c>)
 8002aac:	4a04      	ldr	r2, [pc, #16]	; (8002ac0 <us_ticker_init+0x20>)
 8002aae:	601a      	str	r2, [r3, #0]
 8002ab0:	f7ff beac 	b.w	800280c <HAL_InitTick>
 8002ab4:	4770      	bx	lr
 8002ab6:	bf00      	nop
 8002ab8:	20001930 	.word	0x20001930
 8002abc:	20002738 	.word	0x20002738
 8002ac0:	40000c00 	.word	0x40000c00

08002ac4 <us_ticker_read>:
 8002ac4:	b508      	push	{r3, lr}
 8002ac6:	4b04      	ldr	r3, [pc, #16]	; (8002ad8 <us_ticker_read+0x14>)
 8002ac8:	681b      	ldr	r3, [r3, #0]
 8002aca:	b90b      	cbnz	r3, 8002ad0 <us_ticker_read+0xc>
 8002acc:	f7ff ffe8 	bl	8002aa0 <us_ticker_init>
 8002ad0:	4b02      	ldr	r3, [pc, #8]	; (8002adc <us_ticker_read+0x18>)
 8002ad2:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8002ad4:	bd08      	pop	{r3, pc}
 8002ad6:	bf00      	nop
 8002ad8:	20001930 	.word	0x20001930
 8002adc:	40000c00 	.word	0x40000c00

08002ae0 <us_ticker_set_interrupt>:
 8002ae0:	4b04      	ldr	r3, [pc, #16]	; (8002af4 <us_ticker_set_interrupt+0x14>)
 8002ae2:	4a05      	ldr	r2, [pc, #20]	; (8002af8 <us_ticker_set_interrupt+0x18>)
 8002ae4:	6013      	str	r3, [r2, #0]
 8002ae6:	6358      	str	r0, [r3, #52]	; 0x34
 8002ae8:	68da      	ldr	r2, [r3, #12]
 8002aea:	f042 0202 	orr.w	r2, r2, #2
 8002aee:	60da      	str	r2, [r3, #12]
 8002af0:	4770      	bx	lr
 8002af2:	bf00      	nop
 8002af4:	40000c00 	.word	0x40000c00
 8002af8:	20002738 	.word	0x20002738

08002afc <us_ticker_disable_interrupt>:
 8002afc:	4b03      	ldr	r3, [pc, #12]	; (8002b0c <us_ticker_disable_interrupt+0x10>)
 8002afe:	4a04      	ldr	r2, [pc, #16]	; (8002b10 <us_ticker_disable_interrupt+0x14>)
 8002b00:	6013      	str	r3, [r2, #0]
 8002b02:	68da      	ldr	r2, [r3, #12]
 8002b04:	f022 0202 	bic.w	r2, r2, #2
 8002b08:	60da      	str	r2, [r3, #12]
 8002b0a:	4770      	bx	lr
 8002b0c:	40000c00 	.word	0x40000c00
 8002b10:	20002738 	.word	0x20002738

08002b14 <us_ticker_clear_interrupt>:
 8002b14:	4a03      	ldr	r2, [pc, #12]	; (8002b24 <us_ticker_clear_interrupt+0x10>)
 8002b16:	4b04      	ldr	r3, [pc, #16]	; (8002b28 <us_ticker_clear_interrupt+0x14>)
 8002b18:	6013      	str	r3, [r2, #0]
 8002b1a:	f06f 0202 	mvn.w	r2, #2
 8002b1e:	611a      	str	r2, [r3, #16]
 8002b20:	4770      	bx	lr
 8002b22:	bf00      	nop
 8002b24:	20002738 	.word	0x20002738
 8002b28:	40000c00 	.word	0x40000c00

08002b2c <LL_GPIO_SetPinPull>:
 8002b2c:	b530      	push	{r4, r5, lr}
 8002b2e:	68c3      	ldr	r3, [r0, #12]
 8002b30:	fa91 f4a1 	rbit	r4, r1
 8002b34:	fab4 f484 	clz	r4, r4
 8002b38:	fa91 f1a1 	rbit	r1, r1
 8002b3c:	2503      	movs	r5, #3
 8002b3e:	fab1 f181 	clz	r1, r1
 8002b42:	0064      	lsls	r4, r4, #1
 8002b44:	fa05 f404 	lsl.w	r4, r5, r4
 8002b48:	0049      	lsls	r1, r1, #1
 8002b4a:	ea23 0304 	bic.w	r3, r3, r4
 8002b4e:	fa02 f101 	lsl.w	r1, r2, r1
 8002b52:	4319      	orrs	r1, r3
 8002b54:	60c1      	str	r1, [r0, #12]
 8002b56:	bd30      	pop	{r4, r5, pc}

08002b58 <stm_pin_PullConfig>:
 8002b58:	2a01      	cmp	r2, #1
 8002b5a:	d002      	beq.n	8002b62 <stm_pin_PullConfig+0xa>
 8002b5c:	2a02      	cmp	r2, #2
 8002b5e:	bf18      	it	ne
 8002b60:	2200      	movne	r2, #0
 8002b62:	f7ff bfe3 	b.w	8002b2c <LL_GPIO_SetPinPull>
	...

08002b68 <pin_function>:
 8002b68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002b6c:	4b3f      	ldr	r3, [pc, #252]	; (8002c6c <pin_function+0x104>)
 8002b6e:	f000 080f 	and.w	r8, r0, #15
 8002b72:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8002b76:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 8002b7a:	460e      	mov	r6, r1
 8002b7c:	f001 0507 	and.w	r5, r1, #7
 8002b80:	f7ff febc 	bl	80028fc <Set_GPIO_Clock>
 8002b84:	6883      	ldr	r3, [r0, #8]
 8002b86:	fa94 f1a4 	rbit	r1, r4
 8002b8a:	fab1 f181 	clz	r1, r1
 8002b8e:	fa94 f2a4 	rbit	r2, r4
 8002b92:	2703      	movs	r7, #3
 8002b94:	0049      	lsls	r1, r1, #1
 8002b96:	fa07 f101 	lsl.w	r1, r7, r1
 8002b9a:	fab2 f282 	clz	r2, r2
 8002b9e:	ea23 0301 	bic.w	r3, r3, r1
 8002ba2:	0052      	lsls	r2, r2, #1
 8002ba4:	2102      	movs	r1, #2
 8002ba6:	fa01 f202 	lsl.w	r2, r1, r2
 8002baa:	4313      	orrs	r3, r2
 8002bac:	428d      	cmp	r5, r1
 8002bae:	6083      	str	r3, [r0, #8]
 8002bb0:	d028      	beq.n	8002c04 <pin_function+0x9c>
 8002bb2:	42bd      	cmp	r5, r7
 8002bb4:	d041      	beq.n	8002c3a <pin_function+0xd2>
 8002bb6:	2d01      	cmp	r5, #1
 8002bb8:	d03f      	beq.n	8002c3a <pin_function+0xd2>
 8002bba:	2300      	movs	r3, #0
 8002bbc:	6802      	ldr	r2, [r0, #0]
 8002bbe:	fa94 f7a4 	rbit	r7, r4
 8002bc2:	fab7 f787 	clz	r7, r7
 8002bc6:	fa94 f1a4 	rbit	r1, r4
 8002bca:	f04f 0e03 	mov.w	lr, #3
 8002bce:	fab1 f181 	clz	r1, r1
 8002bd2:	007f      	lsls	r7, r7, #1
 8002bd4:	fa0e f707 	lsl.w	r7, lr, r7
 8002bd8:	0049      	lsls	r1, r1, #1
 8002bda:	ea22 0207 	bic.w	r2, r2, r7
 8002bde:	408b      	lsls	r3, r1
 8002be0:	3d01      	subs	r5, #1
 8002be2:	4313      	orrs	r3, r2
 8002be4:	2d01      	cmp	r5, #1
 8002be6:	6003      	str	r3, [r0, #0]
 8002be8:	d805      	bhi.n	8002bf6 <pin_function+0x8e>
 8002bea:	6843      	ldr	r3, [r0, #4]
 8002bec:	0732      	lsls	r2, r6, #28
 8002bee:	bf4c      	ite	mi
 8002bf0:	4323      	orrmi	r3, r4
 8002bf2:	43a3      	bicpl	r3, r4
 8002bf4:	6043      	str	r3, [r0, #4]
 8002bf6:	f3c6 1201 	ubfx	r2, r6, #4, #2
 8002bfa:	4621      	mov	r1, r4
 8002bfc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002c00:	f7ff bfaa 	b.w	8002b58 <stm_pin_PullConfig>
 8002c04:	f1b8 0f07 	cmp.w	r8, #7
 8002c08:	f3c6 2703 	ubfx	r7, r6, #8, #4
 8002c0c:	d917      	bls.n	8002c3e <pin_function+0xd6>
 8002c0e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8002c10:	0a23      	lsrs	r3, r4, #8
 8002c12:	fa93 f1a3 	rbit	r1, r3
 8002c16:	fab1 f181 	clz	r1, r1
 8002c1a:	fa93 f3a3 	rbit	r3, r3
 8002c1e:	f04f 0e0f 	mov.w	lr, #15
 8002c22:	fab3 f383 	clz	r3, r3
 8002c26:	0089      	lsls	r1, r1, #2
 8002c28:	fa0e f101 	lsl.w	r1, lr, r1
 8002c2c:	009b      	lsls	r3, r3, #2
 8002c2e:	ea22 0201 	bic.w	r2, r2, r1
 8002c32:	fa07 f303 	lsl.w	r3, r7, r3
 8002c36:	4313      	orrs	r3, r2
 8002c38:	6243      	str	r3, [r0, #36]	; 0x24
 8002c3a:	462b      	mov	r3, r5
 8002c3c:	e7be      	b.n	8002bbc <pin_function+0x54>
 8002c3e:	6a02      	ldr	r2, [r0, #32]
 8002c40:	fa94 f3a4 	rbit	r3, r4
 8002c44:	fab3 f383 	clz	r3, r3
 8002c48:	fa94 f1a4 	rbit	r1, r4
 8002c4c:	f04f 0e0f 	mov.w	lr, #15
 8002c50:	fab1 f181 	clz	r1, r1
 8002c54:	009b      	lsls	r3, r3, #2
 8002c56:	fa0e f303 	lsl.w	r3, lr, r3
 8002c5a:	0089      	lsls	r1, r1, #2
 8002c5c:	ea22 0203 	bic.w	r2, r2, r3
 8002c60:	fa07 f301 	lsl.w	r3, r7, r1
 8002c64:	4313      	orrs	r3, r2
 8002c66:	6203      	str	r3, [r0, #32]
 8002c68:	e7e7      	b.n	8002c3a <pin_function+0xd2>
 8002c6a:	bf00      	nop
 8002c6c:	08005520 	.word	0x08005520

08002c70 <pin_mode>:
 8002c70:	b538      	push	{r3, r4, r5, lr}
 8002c72:	f000 020f 	and.w	r2, r0, #15
 8002c76:	4b19      	ldr	r3, [pc, #100]	; (8002cdc <pin_mode+0x6c>)
 8002c78:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8002c7c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8002c80:	460d      	mov	r5, r1
 8002c82:	f7ff fe3b 	bl	80028fc <Set_GPIO_Clock>
 8002c86:	fb04 f204 	mul.w	r2, r4, r4
 8002c8a:	6801      	ldr	r1, [r0, #0]
 8002c8c:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8002c90:	400b      	ands	r3, r1
 8002c92:	fbb3 f3f2 	udiv	r3, r3, r2
 8002c96:	3b01      	subs	r3, #1
 8002c98:	2b01      	cmp	r3, #1
 8002c9a:	d805      	bhi.n	8002ca8 <pin_mode+0x38>
 8002c9c:	1eeb      	subs	r3, r5, #3
 8002c9e:	2b02      	cmp	r3, #2
 8002ca0:	6843      	ldr	r3, [r0, #4]
 8002ca2:	d809      	bhi.n	8002cb8 <pin_mode+0x48>
 8002ca4:	4323      	orrs	r3, r4
 8002ca6:	6043      	str	r3, [r0, #4]
 8002ca8:	2d03      	cmp	r5, #3
 8002caa:	d108      	bne.n	8002cbe <pin_mode+0x4e>
 8002cac:	2201      	movs	r2, #1
 8002cae:	4621      	mov	r1, r4
 8002cb0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002cb4:	f7ff bf50 	b.w	8002b58 <stm_pin_PullConfig>
 8002cb8:	ea23 0304 	bic.w	r3, r3, r4
 8002cbc:	6043      	str	r3, [r0, #4]
 8002cbe:	2d01      	cmp	r5, #1
 8002cc0:	d0f4      	beq.n	8002cac <pin_mode+0x3c>
 8002cc2:	2d05      	cmp	r5, #5
 8002cc4:	d001      	beq.n	8002cca <pin_mode+0x5a>
 8002cc6:	2d02      	cmp	r5, #2
 8002cc8:	d101      	bne.n	8002cce <pin_mode+0x5e>
 8002cca:	2202      	movs	r2, #2
 8002ccc:	e7ef      	b.n	8002cae <pin_mode+0x3e>
 8002cce:	4621      	mov	r1, r4
 8002cd0:	2200      	movs	r2, #0
 8002cd2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002cd6:	f7ff bf29 	b.w	8002b2c <LL_GPIO_SetPinPull>
 8002cda:	bf00      	nop
 8002cdc:	08005520 	.word	0x08005520

08002ce0 <__NVIC_DisableIRQ>:
 8002ce0:	0943      	lsrs	r3, r0, #5
 8002ce2:	2201      	movs	r2, #1
 8002ce4:	f000 001f 	and.w	r0, r0, #31
 8002ce8:	fa02 f000 	lsl.w	r0, r2, r0
 8002cec:	3320      	adds	r3, #32
 8002cee:	4a04      	ldr	r2, [pc, #16]	; (8002d00 <__NVIC_DisableIRQ+0x20>)
 8002cf0:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8002cf4:	f3bf 8f4f 	dsb	sy
 8002cf8:	f3bf 8f6f 	isb	sy
 8002cfc:	4770      	bx	lr
 8002cfe:	bf00      	nop
 8002d00:	e000e100 	.word	0xe000e100

08002d04 <init_uart>:
 8002d04:	6842      	ldr	r2, [r0, #4]
 8002d06:	4916      	ldr	r1, [pc, #88]	; (8002d60 <init_uart+0x5c>)
 8002d08:	0192      	lsls	r2, r2, #6
 8002d0a:	b510      	push	{r4, lr}
 8002d0c:	188b      	adds	r3, r1, r2
 8002d0e:	6804      	ldr	r4, [r0, #0]
 8002d10:	508c      	str	r4, [r1, r2]
 8002d12:	6882      	ldr	r2, [r0, #8]
 8002d14:	605a      	str	r2, [r3, #4]
 8002d16:	68c2      	ldr	r2, [r0, #12]
 8002d18:	609a      	str	r2, [r3, #8]
 8002d1a:	6902      	ldr	r2, [r0, #16]
 8002d1c:	60da      	str	r2, [r3, #12]
 8002d1e:	6942      	ldr	r2, [r0, #20]
 8002d20:	611a      	str	r2, [r3, #16]
 8002d22:	6a02      	ldr	r2, [r0, #32]
 8002d24:	619a      	str	r2, [r3, #24]
 8002d26:	2200      	movs	r2, #0
 8002d28:	61da      	str	r2, [r3, #28]
 8002d2a:	84da      	strh	r2, [r3, #38]	; 0x26
 8002d2c:	849a      	strh	r2, [r3, #36]	; 0x24
 8002d2e:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002d30:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002d32:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8002d36:	3201      	adds	r2, #1
 8002d38:	d10a      	bne.n	8002d50 <init_uart+0x4c>
 8002d3a:	2208      	movs	r2, #8
 8002d3c:	615a      	str	r2, [r3, #20]
 8002d3e:	4618      	mov	r0, r3
 8002d40:	f000 fc8d 	bl	800365e <HAL_UART_Init>
 8002d44:	b158      	cbz	r0, 8002d5e <init_uart+0x5a>
 8002d46:	4807      	ldr	r0, [pc, #28]	; (8002d64 <init_uart+0x60>)
 8002d48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002d4c:	f7fe bab2 	b.w	80012b4 <error>
 8002d50:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8002d54:	3201      	adds	r2, #1
 8002d56:	bf0c      	ite	eq
 8002d58:	2204      	moveq	r2, #4
 8002d5a:	220c      	movne	r2, #12
 8002d5c:	e7ee      	b.n	8002d3c <init_uart+0x38>
 8002d5e:	bd10      	pop	{r4, pc}
 8002d60:	2000195c 	.word	0x2000195c
 8002d64:	08005560 	.word	0x08005560

08002d68 <uart_irq>:
 8002d68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002d6a:	4e19      	ldr	r6, [pc, #100]	; (8002dd0 <uart_irq+0x68>)
 8002d6c:	4607      	mov	r7, r0
 8002d6e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8002d72:	2800      	cmp	r0, #0
 8002d74:	d02a      	beq.n	8002dcc <uart_irq+0x64>
 8002d76:	4c17      	ldr	r4, [pc, #92]	; (8002dd4 <uart_irq+0x6c>)
 8002d78:	01bd      	lsls	r5, r7, #6
 8002d7a:	5963      	ldr	r3, [r4, r5]
 8002d7c:	681a      	ldr	r2, [r3, #0]
 8002d7e:	0652      	lsls	r2, r2, #25
 8002d80:	d50a      	bpl.n	8002d98 <uart_irq+0x30>
 8002d82:	68db      	ldr	r3, [r3, #12]
 8002d84:	0659      	lsls	r1, r3, #25
 8002d86:	d507      	bpl.n	8002d98 <uart_irq+0x30>
 8002d88:	4b13      	ldr	r3, [pc, #76]	; (8002dd8 <uart_irq+0x70>)
 8002d8a:	2101      	movs	r1, #1
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	4798      	blx	r3
 8002d90:	5963      	ldr	r3, [r4, r5]
 8002d92:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002d96:	601a      	str	r2, [r3, #0]
 8002d98:	5963      	ldr	r3, [r4, r5]
 8002d9a:	681a      	ldr	r2, [r3, #0]
 8002d9c:	0692      	lsls	r2, r2, #26
 8002d9e:	d50c      	bpl.n	8002dba <uart_irq+0x52>
 8002da0:	68db      	ldr	r3, [r3, #12]
 8002da2:	0698      	lsls	r0, r3, #26
 8002da4:	d509      	bpl.n	8002dba <uart_irq+0x52>
 8002da6:	4b0c      	ldr	r3, [pc, #48]	; (8002dd8 <uart_irq+0x70>)
 8002da8:	f856 0027 	ldr.w	r0, [r6, r7, lsl #2]
 8002dac:	681b      	ldr	r3, [r3, #0]
 8002dae:	2100      	movs	r1, #0
 8002db0:	4798      	blx	r3
 8002db2:	5963      	ldr	r3, [r4, r5]
 8002db4:	f06f 0220 	mvn.w	r2, #32
 8002db8:	601a      	str	r2, [r3, #0]
 8002dba:	5963      	ldr	r3, [r4, r5]
 8002dbc:	681a      	ldr	r2, [r3, #0]
 8002dbe:	0711      	lsls	r1, r2, #28
 8002dc0:	d504      	bpl.n	8002dcc <uart_irq+0x64>
 8002dc2:	695a      	ldr	r2, [r3, #20]
 8002dc4:	07d2      	lsls	r2, r2, #31
 8002dc6:	bf44      	itt	mi
 8002dc8:	685b      	ldrmi	r3, [r3, #4]
 8002dca:	9301      	strmi	r3, [sp, #4]
 8002dcc:	b003      	add	sp, #12
 8002dce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002dd0:	20001938 	.word	0x20001938
 8002dd4:	2000195c 	.word	0x2000195c
 8002dd8:	20001934 	.word	0x20001934

08002ddc <uart1_irq>:
 8002ddc:	2000      	movs	r0, #0
 8002dde:	f7ff bfc3 	b.w	8002d68 <uart_irq>

08002de2 <uart2_irq>:
 8002de2:	2001      	movs	r0, #1
 8002de4:	f7ff bfc0 	b.w	8002d68 <uart_irq>

08002de8 <uart6_irq>:
 8002de8:	2005      	movs	r0, #5
 8002dea:	f7ff bfbd 	b.w	8002d68 <uart_irq>
	...

08002df0 <serial_init>:
 8002df0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002df2:	460e      	mov	r6, r1
 8002df4:	b085      	sub	sp, #20
 8002df6:	4604      	mov	r4, r0
 8002df8:	4945      	ldr	r1, [pc, #276]	; (8002f10 <serial_init+0x120>)
 8002dfa:	4630      	mov	r0, r6
 8002dfc:	4615      	mov	r5, r2
 8002dfe:	f7fe fa03 	bl	8001208 <pinmap_peripheral>
 8002e02:	4944      	ldr	r1, [pc, #272]	; (8002f14 <serial_init+0x124>)
 8002e04:	4607      	mov	r7, r0
 8002e06:	4628      	mov	r0, r5
 8002e08:	f7fe f9fe 	bl	8001208 <pinmap_peripheral>
 8002e0c:	4601      	mov	r1, r0
 8002e0e:	4638      	mov	r0, r7
 8002e10:	f7fe f9dc 	bl	80011cc <pinmap_merge>
 8002e14:	4b40      	ldr	r3, [pc, #256]	; (8002f18 <serial_init+0x128>)
 8002e16:	6020      	str	r0, [r4, #0]
 8002e18:	4298      	cmp	r0, r3
 8002e1a:	d01e      	beq.n	8002e5a <serial_init+0x6a>
 8002e1c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8002e20:	4298      	cmp	r0, r3
 8002e22:	d05e      	beq.n	8002ee2 <serial_init+0xf2>
 8002e24:	f5a3 4350 	sub.w	r3, r3, #53248	; 0xd000
 8002e28:	4298      	cmp	r0, r3
 8002e2a:	d12b      	bne.n	8002e84 <serial_init+0x94>
 8002e2c:	4b3b      	ldr	r3, [pc, #236]	; (8002f1c <serial_init+0x12c>)
 8002e2e:	6a1a      	ldr	r2, [r3, #32]
 8002e30:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8002e34:	621a      	str	r2, [r3, #32]
 8002e36:	6a1a      	ldr	r2, [r3, #32]
 8002e38:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8002e3c:	621a      	str	r2, [r3, #32]
 8002e3e:	2200      	movs	r2, #0
 8002e40:	9202      	str	r2, [sp, #8]
 8002e42:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002e44:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8002e48:	641a      	str	r2, [r3, #64]	; 0x40
 8002e4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e4c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e50:	9302      	str	r3, [sp, #8]
 8002e52:	9b02      	ldr	r3, [sp, #8]
 8002e54:	2301      	movs	r3, #1
 8002e56:	6063      	str	r3, [r4, #4]
 8002e58:	e014      	b.n	8002e84 <serial_init+0x94>
 8002e5a:	4b30      	ldr	r3, [pc, #192]	; (8002f1c <serial_init+0x12c>)
 8002e5c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002e5e:	f042 0210 	orr.w	r2, r2, #16
 8002e62:	625a      	str	r2, [r3, #36]	; 0x24
 8002e64:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002e66:	2100      	movs	r1, #0
 8002e68:	f022 0210 	bic.w	r2, r2, #16
 8002e6c:	625a      	str	r2, [r3, #36]	; 0x24
 8002e6e:	9101      	str	r1, [sp, #4]
 8002e70:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002e72:	f042 0210 	orr.w	r2, r2, #16
 8002e76:	645a      	str	r2, [r3, #68]	; 0x44
 8002e78:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002e7a:	6061      	str	r1, [r4, #4]
 8002e7c:	f003 0310 	and.w	r3, r3, #16
 8002e80:	9301      	str	r3, [sp, #4]
 8002e82:	9b01      	ldr	r3, [sp, #4]
 8002e84:	4922      	ldr	r1, [pc, #136]	; (8002f10 <serial_init+0x120>)
 8002e86:	4630      	mov	r0, r6
 8002e88:	f7fe f982 	bl	8001190 <pinmap_pinout>
 8002e8c:	4921      	ldr	r1, [pc, #132]	; (8002f14 <serial_init+0x124>)
 8002e8e:	4628      	mov	r0, r5
 8002e90:	f7fe f97e 	bl	8001190 <pinmap_pinout>
 8002e94:	1c72      	adds	r2, r6, #1
 8002e96:	d003      	beq.n	8002ea0 <serial_init+0xb0>
 8002e98:	2101      	movs	r1, #1
 8002e9a:	4630      	mov	r0, r6
 8002e9c:	f7ff fee8 	bl	8002c70 <pin_mode>
 8002ea0:	1c6b      	adds	r3, r5, #1
 8002ea2:	d003      	beq.n	8002eac <serial_init+0xbc>
 8002ea4:	2101      	movs	r1, #1
 8002ea6:	4628      	mov	r0, r5
 8002ea8:	f7ff fee2 	bl	8002c70 <pin_mode>
 8002eac:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8002eb0:	60a3      	str	r3, [r4, #8]
 8002eb2:	2300      	movs	r3, #0
 8002eb4:	60e3      	str	r3, [r4, #12]
 8002eb6:	6123      	str	r3, [r4, #16]
 8002eb8:	6163      	str	r3, [r4, #20]
 8002eba:	6223      	str	r3, [r4, #32]
 8002ebc:	8326      	strh	r6, [r4, #24]
 8002ebe:	8365      	strh	r5, [r4, #26]
 8002ec0:	4620      	mov	r0, r4
 8002ec2:	f7ff ff1f 	bl	8002d04 <init_uart>
 8002ec6:	6822      	ldr	r2, [r4, #0]
 8002ec8:	4b15      	ldr	r3, [pc, #84]	; (8002f20 <serial_init+0x130>)
 8002eca:	429a      	cmp	r2, r3
 8002ecc:	d107      	bne.n	8002ede <serial_init+0xee>
 8002ece:	4b15      	ldr	r3, [pc, #84]	; (8002f24 <serial_init+0x134>)
 8002ed0:	4815      	ldr	r0, [pc, #84]	; (8002f28 <serial_init+0x138>)
 8002ed2:	2201      	movs	r2, #1
 8002ed4:	601a      	str	r2, [r3, #0]
 8002ed6:	4621      	mov	r1, r4
 8002ed8:	224c      	movs	r2, #76	; 0x4c
 8002eda:	f001 fc89 	bl	80047f0 <memcpy>
 8002ede:	b005      	add	sp, #20
 8002ee0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002ee2:	4b0e      	ldr	r3, [pc, #56]	; (8002f1c <serial_init+0x12c>)
 8002ee4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002ee6:	f042 0220 	orr.w	r2, r2, #32
 8002eea:	625a      	str	r2, [r3, #36]	; 0x24
 8002eec:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002eee:	f022 0220 	bic.w	r2, r2, #32
 8002ef2:	625a      	str	r2, [r3, #36]	; 0x24
 8002ef4:	2200      	movs	r2, #0
 8002ef6:	9203      	str	r2, [sp, #12]
 8002ef8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002efa:	f042 0220 	orr.w	r2, r2, #32
 8002efe:	645a      	str	r2, [r3, #68]	; 0x44
 8002f00:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002f02:	f003 0320 	and.w	r3, r3, #32
 8002f06:	9303      	str	r3, [sp, #12]
 8002f08:	9b03      	ldr	r3, [sp, #12]
 8002f0a:	2305      	movs	r3, #5
 8002f0c:	e7a3      	b.n	8002e56 <serial_init+0x66>
 8002f0e:	bf00      	nop
 8002f10:	080055c0 	.word	0x080055c0
 8002f14:	08005578 	.word	0x08005578
 8002f18:	40011000 	.word	0x40011000
 8002f1c:	40023800 	.word	0x40023800
 8002f20:	40004400 	.word	0x40004400
 8002f24:	20001958 	.word	0x20001958
 8002f28:	20002774 	.word	0x20002774

08002f2c <serial_baud>:
 8002f2c:	6081      	str	r1, [r0, #8]
 8002f2e:	f7ff bee9 	b.w	8002d04 <init_uart>
	...

08002f34 <serial_irq_handler>:
 8002f34:	4b03      	ldr	r3, [pc, #12]	; (8002f44 <serial_irq_handler+0x10>)
 8002f36:	6019      	str	r1, [r3, #0]
 8002f38:	6841      	ldr	r1, [r0, #4]
 8002f3a:	4b03      	ldr	r3, [pc, #12]	; (8002f48 <serial_irq_handler+0x14>)
 8002f3c:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8002f40:	4770      	bx	lr
 8002f42:	bf00      	nop
 8002f44:	20001934 	.word	0x20001934
 8002f48:	20001938 	.word	0x20001938

08002f4c <serial_irq_set>:
 8002f4c:	b538      	push	{r3, r4, r5, lr}
 8002f4e:	6843      	ldr	r3, [r0, #4]
 8002f50:	2b01      	cmp	r3, #1
 8002f52:	460d      	mov	r5, r1
 8002f54:	d01a      	beq.n	8002f8c <serial_irq_set+0x40>
 8002f56:	2b05      	cmp	r3, #5
 8002f58:	d01b      	beq.n	8002f92 <serial_irq_set+0x46>
 8002f5a:	b9eb      	cbnz	r3, 8002f98 <serial_irq_set+0x4c>
 8002f5c:	491c      	ldr	r1, [pc, #112]	; (8002fd0 <serial_irq_set+0x84>)
 8002f5e:	2425      	movs	r4, #37	; 0x25
 8002f60:	481c      	ldr	r0, [pc, #112]	; (8002fd4 <serial_irq_set+0x88>)
 8002f62:	019b      	lsls	r3, r3, #6
 8002f64:	b1f2      	cbz	r2, 8002fa4 <serial_irq_set+0x58>
 8002f66:	58c2      	ldr	r2, [r0, r3]
 8002f68:	68d3      	ldr	r3, [r2, #12]
 8002f6a:	b9c5      	cbnz	r5, 8002f9e <serial_irq_set+0x52>
 8002f6c:	f043 0320 	orr.w	r3, r3, #32
 8002f70:	60d3      	str	r3, [r2, #12]
 8002f72:	4620      	mov	r0, r4
 8002f74:	f000 f986 	bl	8003284 <__NVIC_SetVector>
 8002f78:	0962      	lsrs	r2, r4, #5
 8002f7a:	2301      	movs	r3, #1
 8002f7c:	f004 0407 	and.w	r4, r4, #7
 8002f80:	fa03 f404 	lsl.w	r4, r3, r4
 8002f84:	4b14      	ldr	r3, [pc, #80]	; (8002fd8 <serial_irq_set+0x8c>)
 8002f86:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8002f8a:	bd38      	pop	{r3, r4, r5, pc}
 8002f8c:	4913      	ldr	r1, [pc, #76]	; (8002fdc <serial_irq_set+0x90>)
 8002f8e:	2426      	movs	r4, #38	; 0x26
 8002f90:	e7e6      	b.n	8002f60 <serial_irq_set+0x14>
 8002f92:	4913      	ldr	r1, [pc, #76]	; (8002fe0 <serial_irq_set+0x94>)
 8002f94:	2447      	movs	r4, #71	; 0x47
 8002f96:	e7e3      	b.n	8002f60 <serial_irq_set+0x14>
 8002f98:	2100      	movs	r1, #0
 8002f9a:	460c      	mov	r4, r1
 8002f9c:	e7e0      	b.n	8002f60 <serial_irq_set+0x14>
 8002f9e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002fa2:	e7e5      	b.n	8002f70 <serial_irq_set+0x24>
 8002fa4:	58c3      	ldr	r3, [r0, r3]
 8002fa6:	68da      	ldr	r2, [r3, #12]
 8002fa8:	b935      	cbnz	r5, 8002fb8 <serial_irq_set+0x6c>
 8002faa:	f022 0220 	bic.w	r2, r2, #32
 8002fae:	60da      	str	r2, [r3, #12]
 8002fb0:	68db      	ldr	r3, [r3, #12]
 8002fb2:	061a      	lsls	r2, r3, #24
 8002fb4:	d506      	bpl.n	8002fc4 <serial_irq_set+0x78>
 8002fb6:	bd38      	pop	{r3, r4, r5, pc}
 8002fb8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002fbc:	60da      	str	r2, [r3, #12]
 8002fbe:	68db      	ldr	r3, [r3, #12]
 8002fc0:	069b      	lsls	r3, r3, #26
 8002fc2:	d404      	bmi.n	8002fce <serial_irq_set+0x82>
 8002fc4:	4620      	mov	r0, r4
 8002fc6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002fca:	f7ff be89 	b.w	8002ce0 <__NVIC_DisableIRQ>
 8002fce:	bd38      	pop	{r3, r4, r5, pc}
 8002fd0:	08002ddd 	.word	0x08002ddd
 8002fd4:	2000195c 	.word	0x2000195c
 8002fd8:	e000e100 	.word	0xe000e100
 8002fdc:	08002de3 	.word	0x08002de3
 8002fe0:	08002de9 	.word	0x08002de9

08002fe4 <serial_readable>:
 8002fe4:	6843      	ldr	r3, [r0, #4]
 8002fe6:	4a03      	ldr	r2, [pc, #12]	; (8002ff4 <serial_readable+0x10>)
 8002fe8:	019b      	lsls	r3, r3, #6
 8002fea:	58d3      	ldr	r3, [r2, r3]
 8002fec:	6818      	ldr	r0, [r3, #0]
 8002fee:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8002ff2:	4770      	bx	lr
 8002ff4:	2000195c 	.word	0x2000195c

08002ff8 <serial_getc>:
 8002ff8:	6841      	ldr	r1, [r0, #4]
 8002ffa:	b510      	push	{r4, lr}
 8002ffc:	4604      	mov	r4, r0
 8002ffe:	4620      	mov	r0, r4
 8003000:	f7ff fff0 	bl	8002fe4 <serial_readable>
 8003004:	2800      	cmp	r0, #0
 8003006:	d0fa      	beq.n	8002ffe <serial_getc+0x6>
 8003008:	0189      	lsls	r1, r1, #6
 800300a:	4b03      	ldr	r3, [pc, #12]	; (8003018 <serial_getc+0x20>)
 800300c:	585b      	ldr	r3, [r3, r1]
 800300e:	6858      	ldr	r0, [r3, #4]
 8003010:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8003014:	bd10      	pop	{r4, pc}
 8003016:	bf00      	nop
 8003018:	2000195c 	.word	0x2000195c

0800301c <serial_writable>:
 800301c:	6843      	ldr	r3, [r0, #4]
 800301e:	4a03      	ldr	r2, [pc, #12]	; (800302c <serial_writable+0x10>)
 8003020:	019b      	lsls	r3, r3, #6
 8003022:	58d3      	ldr	r3, [r2, r3]
 8003024:	6818      	ldr	r0, [r3, #0]
 8003026:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 800302a:	4770      	bx	lr
 800302c:	2000195c 	.word	0x2000195c

08003030 <serial_putc>:
 8003030:	b538      	push	{r3, r4, r5, lr}
 8003032:	6844      	ldr	r4, [r0, #4]
 8003034:	4605      	mov	r5, r0
 8003036:	4628      	mov	r0, r5
 8003038:	f7ff fff0 	bl	800301c <serial_writable>
 800303c:	2800      	cmp	r0, #0
 800303e:	d0fa      	beq.n	8003036 <serial_putc+0x6>
 8003040:	01a4      	lsls	r4, r4, #6
 8003042:	4b03      	ldr	r3, [pc, #12]	; (8003050 <serial_putc+0x20>)
 8003044:	591b      	ldr	r3, [r3, r4]
 8003046:	f3c1 0108 	ubfx	r1, r1, #0, #9
 800304a:	6059      	str	r1, [r3, #4]
 800304c:	bd38      	pop	{r3, r4, r5, pc}
 800304e:	bf00      	nop
 8003050:	2000195c 	.word	0x2000195c

08003054 <mbed_sdk_init>:
 8003054:	b508      	push	{r3, lr}
 8003056:	f000 f819 	bl	800308c <SystemCoreClockUpdate>
 800305a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800305e:	f000 b9bd 	b.w	80033dc <HAL_Init>

08003062 <SetSysClock_PLL_HSE.part.0>:
 8003062:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003064:	230f      	movs	r3, #15
 8003066:	9301      	str	r3, [sp, #4]
 8003068:	2102      	movs	r1, #2
 800306a:	2300      	movs	r3, #0
 800306c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003070:	a801      	add	r0, sp, #4
 8003072:	9102      	str	r1, [sp, #8]
 8003074:	9303      	str	r3, [sp, #12]
 8003076:	9204      	str	r2, [sp, #16]
 8003078:	9305      	str	r3, [sp, #20]
 800307a:	f000 fcd9 	bl	8003a30 <HAL_RCC_ClockConfig>
 800307e:	fab0 f080 	clz	r0, r0
 8003082:	0940      	lsrs	r0, r0, #5
 8003084:	b007      	add	sp, #28
 8003086:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800308c <SystemCoreClockUpdate>:
 800308c:	4a17      	ldr	r2, [pc, #92]	; (80030ec <SystemCoreClockUpdate+0x60>)
 800308e:	4918      	ldr	r1, [pc, #96]	; (80030f0 <SystemCoreClockUpdate+0x64>)
 8003090:	6893      	ldr	r3, [r2, #8]
 8003092:	f003 030c 	and.w	r3, r3, #12
 8003096:	2b04      	cmp	r3, #4
 8003098:	b510      	push	{r4, lr}
 800309a:	d00d      	beq.n	80030b8 <SystemCoreClockUpdate+0x2c>
 800309c:	2b08      	cmp	r3, #8
 800309e:	d00d      	beq.n	80030bc <SystemCoreClockUpdate+0x30>
 80030a0:	4b14      	ldr	r3, [pc, #80]	; (80030f4 <SystemCoreClockUpdate+0x68>)
 80030a2:	600b      	str	r3, [r1, #0]
 80030a4:	4b11      	ldr	r3, [pc, #68]	; (80030ec <SystemCoreClockUpdate+0x60>)
 80030a6:	4a14      	ldr	r2, [pc, #80]	; (80030f8 <SystemCoreClockUpdate+0x6c>)
 80030a8:	689b      	ldr	r3, [r3, #8]
 80030aa:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80030ae:	5cd2      	ldrb	r2, [r2, r3]
 80030b0:	680b      	ldr	r3, [r1, #0]
 80030b2:	40d3      	lsrs	r3, r2
 80030b4:	600b      	str	r3, [r1, #0]
 80030b6:	bd10      	pop	{r4, pc}
 80030b8:	4b10      	ldr	r3, [pc, #64]	; (80030fc <SystemCoreClockUpdate+0x70>)
 80030ba:	e7f2      	b.n	80030a2 <SystemCoreClockUpdate+0x16>
 80030bc:	6854      	ldr	r4, [r2, #4]
 80030be:	6850      	ldr	r0, [r2, #4]
 80030c0:	6852      	ldr	r2, [r2, #4]
 80030c2:	0263      	lsls	r3, r4, #9
 80030c4:	f3c2 1288 	ubfx	r2, r2, #6, #9
 80030c8:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80030cc:	bf4c      	ite	mi
 80030ce:	4b0b      	ldrmi	r3, [pc, #44]	; (80030fc <SystemCoreClockUpdate+0x70>)
 80030d0:	4b08      	ldrpl	r3, [pc, #32]	; (80030f4 <SystemCoreClockUpdate+0x68>)
 80030d2:	fbb3 f3f0 	udiv	r3, r3, r0
 80030d6:	4353      	muls	r3, r2
 80030d8:	4a04      	ldr	r2, [pc, #16]	; (80030ec <SystemCoreClockUpdate+0x60>)
 80030da:	6852      	ldr	r2, [r2, #4]
 80030dc:	f3c2 4201 	ubfx	r2, r2, #16, #2
 80030e0:	3201      	adds	r2, #1
 80030e2:	0052      	lsls	r2, r2, #1
 80030e4:	fbb3 f3f2 	udiv	r3, r3, r2
 80030e8:	e7db      	b.n	80030a2 <SystemCoreClockUpdate+0x16>
 80030ea:	bf00      	nop
 80030ec:	40023800 	.word	0x40023800
 80030f0:	200001b0 	.word	0x200001b0
 80030f4:	00f42400 	.word	0x00f42400
 80030f8:	08005608 	.word	0x08005608
 80030fc:	007a1200 	.word	0x007a1200

08003100 <SetSysClock_PLL_HSE>:
 8003100:	b500      	push	{lr}
 8003102:	b08f      	sub	sp, #60	; 0x3c
 8003104:	4b1b      	ldr	r3, [pc, #108]	; (8003174 <SetSysClock_PLL_HSE+0x74>)
 8003106:	2100      	movs	r1, #0
 8003108:	9100      	str	r1, [sp, #0]
 800310a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800310c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003110:	641a      	str	r2, [r3, #64]	; 0x40
 8003112:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003114:	4a18      	ldr	r2, [pc, #96]	; (8003178 <SetSysClock_PLL_HSE+0x78>)
 8003116:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800311a:	9300      	str	r3, [sp, #0]
 800311c:	9b00      	ldr	r3, [sp, #0]
 800311e:	9101      	str	r1, [sp, #4]
 8003120:	6813      	ldr	r3, [r2, #0]
 8003122:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8003126:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800312a:	6013      	str	r3, [r2, #0]
 800312c:	6813      	ldr	r3, [r2, #0]
 800312e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8003132:	9301      	str	r3, [sp, #4]
 8003134:	9b01      	ldr	r3, [sp, #4]
 8003136:	2301      	movs	r3, #1
 8003138:	9302      	str	r3, [sp, #8]
 800313a:	b9b8      	cbnz	r0, 800316c <SetSysClock_PLL_HSE+0x6c>
 800313c:	9303      	str	r3, [sp, #12]
 800313e:	2302      	movs	r3, #2
 8003140:	9308      	str	r3, [sp, #32]
 8003142:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8003146:	9309      	str	r3, [sp, #36]	; 0x24
 8003148:	2308      	movs	r3, #8
 800314a:	930a      	str	r3, [sp, #40]	; 0x28
 800314c:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8003150:	930b      	str	r3, [sp, #44]	; 0x2c
 8003152:	2304      	movs	r3, #4
 8003154:	930c      	str	r3, [sp, #48]	; 0x30
 8003156:	a802      	add	r0, sp, #8
 8003158:	2307      	movs	r3, #7
 800315a:	930d      	str	r3, [sp, #52]	; 0x34
 800315c:	f000 fabe 	bl	80036dc <HAL_RCC_OscConfig>
 8003160:	b930      	cbnz	r0, 8003170 <SetSysClock_PLL_HSE+0x70>
 8003162:	f7ff ff7e 	bl	8003062 <SetSysClock_PLL_HSE.part.0>
 8003166:	b00f      	add	sp, #60	; 0x3c
 8003168:	f85d fb04 	ldr.w	pc, [sp], #4
 800316c:	2305      	movs	r3, #5
 800316e:	e7e5      	b.n	800313c <SetSysClock_PLL_HSE+0x3c>
 8003170:	2000      	movs	r0, #0
 8003172:	e7f8      	b.n	8003166 <SetSysClock_PLL_HSE+0x66>
 8003174:	40023800 	.word	0x40023800
 8003178:	40007000 	.word	0x40007000

0800317c <SetSysClock_PLL_HSI>:
 800317c:	b510      	push	{r4, lr}
 800317e:	b08e      	sub	sp, #56	; 0x38
 8003180:	2400      	movs	r4, #0
 8003182:	4b1a      	ldr	r3, [pc, #104]	; (80031ec <SetSysClock_PLL_HSI+0x70>)
 8003184:	9400      	str	r4, [sp, #0]
 8003186:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003188:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800318c:	641a      	str	r2, [r3, #64]	; 0x40
 800318e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003190:	4a17      	ldr	r2, [pc, #92]	; (80031f0 <SetSysClock_PLL_HSI+0x74>)
 8003192:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003196:	9300      	str	r3, [sp, #0]
 8003198:	9b00      	ldr	r3, [sp, #0]
 800319a:	9401      	str	r4, [sp, #4]
 800319c:	6813      	ldr	r3, [r2, #0]
 800319e:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80031a2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80031a6:	6013      	str	r3, [r2, #0]
 80031a8:	6813      	ldr	r3, [r2, #0]
 80031aa:	9403      	str	r4, [sp, #12]
 80031ac:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80031b0:	9301      	str	r3, [sp, #4]
 80031b2:	9b01      	ldr	r3, [sp, #4]
 80031b4:	9409      	str	r4, [sp, #36]	; 0x24
 80031b6:	2303      	movs	r3, #3
 80031b8:	9302      	str	r3, [sp, #8]
 80031ba:	2301      	movs	r3, #1
 80031bc:	9305      	str	r3, [sp, #20]
 80031be:	2310      	movs	r3, #16
 80031c0:	9306      	str	r3, [sp, #24]
 80031c2:	930a      	str	r3, [sp, #40]	; 0x28
 80031c4:	f44f 73a8 	mov.w	r3, #336	; 0x150
 80031c8:	930b      	str	r3, [sp, #44]	; 0x2c
 80031ca:	2304      	movs	r3, #4
 80031cc:	2202      	movs	r2, #2
 80031ce:	930c      	str	r3, [sp, #48]	; 0x30
 80031d0:	a802      	add	r0, sp, #8
 80031d2:	2307      	movs	r3, #7
 80031d4:	9208      	str	r2, [sp, #32]
 80031d6:	930d      	str	r3, [sp, #52]	; 0x34
 80031d8:	f000 fa80 	bl	80036dc <HAL_RCC_OscConfig>
 80031dc:	b918      	cbnz	r0, 80031e6 <SetSysClock_PLL_HSI+0x6a>
 80031de:	f7ff ff40 	bl	8003062 <SetSysClock_PLL_HSE.part.0>
 80031e2:	b00e      	add	sp, #56	; 0x38
 80031e4:	bd10      	pop	{r4, pc}
 80031e6:	4620      	mov	r0, r4
 80031e8:	e7fb      	b.n	80031e2 <SetSysClock_PLL_HSI+0x66>
 80031ea:	bf00      	nop
 80031ec:	40023800 	.word	0x40023800
 80031f0:	40007000 	.word	0x40007000

080031f4 <SetSysClock>:
 80031f4:	b508      	push	{r3, lr}
 80031f6:	2001      	movs	r0, #1
 80031f8:	f7ff ff82 	bl	8003100 <SetSysClock_PLL_HSE>
 80031fc:	b930      	cbnz	r0, 800320c <SetSysClock+0x18>
 80031fe:	f7ff ff7f 	bl	8003100 <SetSysClock_PLL_HSE>
 8003202:	b918      	cbnz	r0, 800320c <SetSysClock+0x18>
 8003204:	f7ff ffba 	bl	800317c <SetSysClock_PLL_HSI>
 8003208:	b900      	cbnz	r0, 800320c <SetSysClock+0x18>
 800320a:	e7fe      	b.n	800320a <SetSysClock+0x16>
 800320c:	bd08      	pop	{r3, pc}
	...

08003210 <SystemInit>:
 8003210:	4a17      	ldr	r2, [pc, #92]	; (8003270 <SystemInit+0x60>)
 8003212:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8003216:	b510      	push	{r4, lr}
 8003218:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800321c:	4c15      	ldr	r4, [pc, #84]	; (8003274 <SystemInit+0x64>)
 800321e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003222:	6823      	ldr	r3, [r4, #0]
 8003224:	2100      	movs	r1, #0
 8003226:	f043 0301 	orr.w	r3, r3, #1
 800322a:	6023      	str	r3, [r4, #0]
 800322c:	60a1      	str	r1, [r4, #8]
 800322e:	6823      	ldr	r3, [r4, #0]
 8003230:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8003234:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003238:	6023      	str	r3, [r4, #0]
 800323a:	4b0f      	ldr	r3, [pc, #60]	; (8003278 <SystemInit+0x68>)
 800323c:	6063      	str	r3, [r4, #4]
 800323e:	6823      	ldr	r3, [r4, #0]
 8003240:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003244:	6023      	str	r3, [r4, #0]
 8003246:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800324a:	60e1      	str	r1, [r4, #12]
 800324c:	6093      	str	r3, [r2, #8]
 800324e:	4b0b      	ldr	r3, [pc, #44]	; (800327c <SystemInit+0x6c>)
 8003250:	4a0b      	ldr	r2, [pc, #44]	; (8003280 <SystemInit+0x70>)
 8003252:	601a      	str	r2, [r3, #0]
 8003254:	f000 f8c2 	bl	80033dc <HAL_Init>
 8003258:	f7ff ffcc 	bl	80031f4 <SetSysClock>
 800325c:	6a23      	ldr	r3, [r4, #32]
 800325e:	f043 0308 	orr.w	r3, r3, #8
 8003262:	6223      	str	r3, [r4, #32]
 8003264:	6a23      	ldr	r3, [r4, #32]
 8003266:	f023 0308 	bic.w	r3, r3, #8
 800326a:	6223      	str	r3, [r4, #32]
 800326c:	bd10      	pop	{r4, pc}
 800326e:	bf00      	nop
 8003270:	e000ed00 	.word	0xe000ed00
 8003274:	40023800 	.word	0x40023800
 8003278:	24003010 	.word	0x24003010
 800327c:	200001b0 	.word	0x200001b0
 8003280:	00f42400 	.word	0x00f42400

08003284 <__NVIC_SetVector>:
 8003284:	b530      	push	{r4, r5, lr}
 8003286:	4c0c      	ldr	r4, [pc, #48]	; (80032b8 <__NVIC_SetVector+0x34>)
 8003288:	68a2      	ldr	r2, [r4, #8]
 800328a:	68a4      	ldr	r4, [r4, #8]
 800328c:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8003290:	4613      	mov	r3, r2
 8003292:	d10c      	bne.n	80032ae <__NVIC_SetVector+0x2a>
 8003294:	1f13      	subs	r3, r2, #4
 8003296:	4c09      	ldr	r4, [pc, #36]	; (80032bc <__NVIC_SetVector+0x38>)
 8003298:	4a09      	ldr	r2, [pc, #36]	; (80032c0 <__NVIC_SetVector+0x3c>)
 800329a:	f853 5f04 	ldr.w	r5, [r3, #4]!
 800329e:	f842 5f04 	str.w	r5, [r2, #4]!
 80032a2:	42a2      	cmp	r2, r4
 80032a4:	d1f9      	bne.n	800329a <__NVIC_SetVector+0x16>
 80032a6:	4a04      	ldr	r2, [pc, #16]	; (80032b8 <__NVIC_SetVector+0x34>)
 80032a8:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 80032ac:	6093      	str	r3, [r2, #8]
 80032ae:	3010      	adds	r0, #16
 80032b0:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 80032b4:	bd30      	pop	{r4, r5, pc}
 80032b6:	bf00      	nop
 80032b8:	e000ed00 	.word	0xe000ed00
 80032bc:	20000190 	.word	0x20000190
 80032c0:	1ffffffc 	.word	0x1ffffffc

080032c4 <HAL_TIM_OC_MspInit>:
 80032c4:	4770      	bx	lr
	...

080032c8 <TIM_Base_SetConfig>:
 80032c8:	4a22      	ldr	r2, [pc, #136]	; (8003354 <TIM_Base_SetConfig+0x8c>)
 80032ca:	6803      	ldr	r3, [r0, #0]
 80032cc:	4290      	cmp	r0, r2
 80032ce:	d00e      	beq.n	80032ee <TIM_Base_SetConfig+0x26>
 80032d0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80032d4:	d00b      	beq.n	80032ee <TIM_Base_SetConfig+0x26>
 80032d6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80032da:	4290      	cmp	r0, r2
 80032dc:	d007      	beq.n	80032ee <TIM_Base_SetConfig+0x26>
 80032de:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80032e2:	4290      	cmp	r0, r2
 80032e4:	d003      	beq.n	80032ee <TIM_Base_SetConfig+0x26>
 80032e6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80032ea:	4290      	cmp	r0, r2
 80032ec:	d119      	bne.n	8003322 <TIM_Base_SetConfig+0x5a>
 80032ee:	684a      	ldr	r2, [r1, #4]
 80032f0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80032f4:	4313      	orrs	r3, r2
 80032f6:	4a17      	ldr	r2, [pc, #92]	; (8003354 <TIM_Base_SetConfig+0x8c>)
 80032f8:	4290      	cmp	r0, r2
 80032fa:	d104      	bne.n	8003306 <TIM_Base_SetConfig+0x3e>
 80032fc:	68ca      	ldr	r2, [r1, #12]
 80032fe:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003302:	4313      	orrs	r3, r2
 8003304:	e018      	b.n	8003338 <TIM_Base_SetConfig+0x70>
 8003306:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800330a:	d0f7      	beq.n	80032fc <TIM_Base_SetConfig+0x34>
 800330c:	4a12      	ldr	r2, [pc, #72]	; (8003358 <TIM_Base_SetConfig+0x90>)
 800330e:	4290      	cmp	r0, r2
 8003310:	d0f4      	beq.n	80032fc <TIM_Base_SetConfig+0x34>
 8003312:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003316:	4290      	cmp	r0, r2
 8003318:	d0f0      	beq.n	80032fc <TIM_Base_SetConfig+0x34>
 800331a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800331e:	4290      	cmp	r0, r2
 8003320:	d0ec      	beq.n	80032fc <TIM_Base_SetConfig+0x34>
 8003322:	4a0e      	ldr	r2, [pc, #56]	; (800335c <TIM_Base_SetConfig+0x94>)
 8003324:	4290      	cmp	r0, r2
 8003326:	d0e9      	beq.n	80032fc <TIM_Base_SetConfig+0x34>
 8003328:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800332c:	4290      	cmp	r0, r2
 800332e:	d0e5      	beq.n	80032fc <TIM_Base_SetConfig+0x34>
 8003330:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003334:	4290      	cmp	r0, r2
 8003336:	d0e1      	beq.n	80032fc <TIM_Base_SetConfig+0x34>
 8003338:	6003      	str	r3, [r0, #0]
 800333a:	688b      	ldr	r3, [r1, #8]
 800333c:	62c3      	str	r3, [r0, #44]	; 0x2c
 800333e:	680b      	ldr	r3, [r1, #0]
 8003340:	6283      	str	r3, [r0, #40]	; 0x28
 8003342:	4b04      	ldr	r3, [pc, #16]	; (8003354 <TIM_Base_SetConfig+0x8c>)
 8003344:	4298      	cmp	r0, r3
 8003346:	bf04      	itt	eq
 8003348:	690b      	ldreq	r3, [r1, #16]
 800334a:	6303      	streq	r3, [r0, #48]	; 0x30
 800334c:	2301      	movs	r3, #1
 800334e:	6143      	str	r3, [r0, #20]
 8003350:	4770      	bx	lr
 8003352:	bf00      	nop
 8003354:	40010000 	.word	0x40010000
 8003358:	40000400 	.word	0x40000400
 800335c:	40014000 	.word	0x40014000

08003360 <HAL_TIM_OC_Init>:
 8003360:	b510      	push	{r4, lr}
 8003362:	4604      	mov	r4, r0
 8003364:	b1a0      	cbz	r0, 8003390 <HAL_TIM_OC_Init+0x30>
 8003366:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800336a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800336e:	b91b      	cbnz	r3, 8003378 <HAL_TIM_OC_Init+0x18>
 8003370:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8003374:	f7ff ffa6 	bl	80032c4 <HAL_TIM_OC_MspInit>
 8003378:	2302      	movs	r3, #2
 800337a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800337e:	6820      	ldr	r0, [r4, #0]
 8003380:	1d21      	adds	r1, r4, #4
 8003382:	f7ff ffa1 	bl	80032c8 <TIM_Base_SetConfig>
 8003386:	2301      	movs	r3, #1
 8003388:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800338c:	2000      	movs	r0, #0
 800338e:	bd10      	pop	{r4, pc}
 8003390:	2001      	movs	r0, #1
 8003392:	bd10      	pop	{r4, pc}

08003394 <TIM_CCxChannelCmd>:
 8003394:	6a03      	ldr	r3, [r0, #32]
 8003396:	b510      	push	{r4, lr}
 8003398:	2401      	movs	r4, #1
 800339a:	408c      	lsls	r4, r1
 800339c:	ea23 0304 	bic.w	r3, r3, r4
 80033a0:	6203      	str	r3, [r0, #32]
 80033a2:	6a03      	ldr	r3, [r0, #32]
 80033a4:	408a      	lsls	r2, r1
 80033a6:	431a      	orrs	r2, r3
 80033a8:	6202      	str	r2, [r0, #32]
 80033aa:	bd10      	pop	{r4, pc}

080033ac <HAL_TIM_PWM_Start>:
 80033ac:	b510      	push	{r4, lr}
 80033ae:	4604      	mov	r4, r0
 80033b0:	2201      	movs	r2, #1
 80033b2:	6800      	ldr	r0, [r0, #0]
 80033b4:	f7ff ffee 	bl	8003394 <TIM_CCxChannelCmd>
 80033b8:	6823      	ldr	r3, [r4, #0]
 80033ba:	4a06      	ldr	r2, [pc, #24]	; (80033d4 <HAL_TIM_PWM_Start+0x28>)
 80033bc:	4293      	cmp	r3, r2
 80033be:	bf02      	ittt	eq
 80033c0:	6c5a      	ldreq	r2, [r3, #68]	; 0x44
 80033c2:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 80033c6:	645a      	streq	r2, [r3, #68]	; 0x44
 80033c8:	681a      	ldr	r2, [r3, #0]
 80033ca:	f042 0201 	orr.w	r2, r2, #1
 80033ce:	601a      	str	r2, [r3, #0]
 80033d0:	2000      	movs	r0, #0
 80033d2:	bd10      	pop	{r4, pc}
 80033d4:	40010000 	.word	0x40010000

080033d8 <HAL_TIM_OC_Start>:
 80033d8:	f7ff bfe8 	b.w	80033ac <HAL_TIM_PWM_Start>

080033dc <HAL_Init>:
 80033dc:	b508      	push	{r3, lr}
 80033de:	4b0a      	ldr	r3, [pc, #40]	; (8003408 <HAL_Init+0x2c>)
 80033e0:	681a      	ldr	r2, [r3, #0]
 80033e2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80033e6:	601a      	str	r2, [r3, #0]
 80033e8:	681a      	ldr	r2, [r3, #0]
 80033ea:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80033ee:	601a      	str	r2, [r3, #0]
 80033f0:	681a      	ldr	r2, [r3, #0]
 80033f2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80033f6:	601a      	str	r2, [r3, #0]
 80033f8:	200f      	movs	r0, #15
 80033fa:	f7ff fa07 	bl	800280c <HAL_InitTick>
 80033fe:	f000 fc1b 	bl	8003c38 <HAL_MspInit>
 8003402:	2000      	movs	r0, #0
 8003404:	bd08      	pop	{r3, pc}
 8003406:	bf00      	nop
 8003408:	40023c00 	.word	0x40023c00

0800340c <HAL_IncTick>:
 800340c:	4a02      	ldr	r2, [pc, #8]	; (8003418 <HAL_IncTick+0xc>)
 800340e:	6813      	ldr	r3, [r2, #0]
 8003410:	3301      	adds	r3, #1
 8003412:	6013      	str	r3, [r2, #0]
 8003414:	4770      	bx	lr
 8003416:	bf00      	nop
 8003418:	200027c0 	.word	0x200027c0

0800341c <HAL_GetTick>:
 800341c:	4b01      	ldr	r3, [pc, #4]	; (8003424 <HAL_GetTick+0x8>)
 800341e:	6818      	ldr	r0, [r3, #0]
 8003420:	4770      	bx	lr
 8003422:	bf00      	nop
 8003424:	200027c0 	.word	0x200027c0

08003428 <UART_SetConfig>:
 8003428:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 800342c:	6806      	ldr	r6, [r0, #0]
 800342e:	68c2      	ldr	r2, [r0, #12]
 8003430:	6933      	ldr	r3, [r6, #16]
 8003432:	69c1      	ldr	r1, [r0, #28]
 8003434:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8003438:	4313      	orrs	r3, r2
 800343a:	6133      	str	r3, [r6, #16]
 800343c:	4604      	mov	r4, r0
 800343e:	6883      	ldr	r3, [r0, #8]
 8003440:	6900      	ldr	r0, [r0, #16]
 8003442:	68f2      	ldr	r2, [r6, #12]
 8003444:	4303      	orrs	r3, r0
 8003446:	6960      	ldr	r0, [r4, #20]
 8003448:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 800344c:	4303      	orrs	r3, r0
 800344e:	f022 020c 	bic.w	r2, r2, #12
 8003452:	430b      	orrs	r3, r1
 8003454:	4313      	orrs	r3, r2
 8003456:	60f3      	str	r3, [r6, #12]
 8003458:	6973      	ldr	r3, [r6, #20]
 800345a:	69a2      	ldr	r2, [r4, #24]
 800345c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003460:	4313      	orrs	r3, r2
 8003462:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 8003466:	6173      	str	r3, [r6, #20]
 8003468:	4b7a      	ldr	r3, [pc, #488]	; (8003654 <UART_SetConfig+0x22c>)
 800346a:	d17c      	bne.n	8003566 <UART_SetConfig+0x13e>
 800346c:	429e      	cmp	r6, r3
 800346e:	d003      	beq.n	8003478 <UART_SetConfig+0x50>
 8003470:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003474:	429e      	cmp	r6, r3
 8003476:	d144      	bne.n	8003502 <UART_SetConfig+0xda>
 8003478:	f000 fba8 	bl	8003bcc <HAL_RCC_GetPCLK2Freq>
 800347c:	2519      	movs	r5, #25
 800347e:	fb05 f300 	mul.w	r3, r5, r0
 8003482:	6860      	ldr	r0, [r4, #4]
 8003484:	f04f 0964 	mov.w	r9, #100	; 0x64
 8003488:	0040      	lsls	r0, r0, #1
 800348a:	fbb3 f3f0 	udiv	r3, r3, r0
 800348e:	fbb3 f3f9 	udiv	r3, r3, r9
 8003492:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8003496:	f000 fb99 	bl	8003bcc <HAL_RCC_GetPCLK2Freq>
 800349a:	6863      	ldr	r3, [r4, #4]
 800349c:	4368      	muls	r0, r5
 800349e:	005b      	lsls	r3, r3, #1
 80034a0:	fbb0 f7f3 	udiv	r7, r0, r3
 80034a4:	f000 fb92 	bl	8003bcc <HAL_RCC_GetPCLK2Freq>
 80034a8:	6863      	ldr	r3, [r4, #4]
 80034aa:	4368      	muls	r0, r5
 80034ac:	005b      	lsls	r3, r3, #1
 80034ae:	fbb0 f3f3 	udiv	r3, r0, r3
 80034b2:	fbb3 f3f9 	udiv	r3, r3, r9
 80034b6:	fb09 7313 	mls	r3, r9, r3, r7
 80034ba:	00db      	lsls	r3, r3, #3
 80034bc:	3332      	adds	r3, #50	; 0x32
 80034be:	fbb3 f3f9 	udiv	r3, r3, r9
 80034c2:	005b      	lsls	r3, r3, #1
 80034c4:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 80034c8:	f000 fb80 	bl	8003bcc <HAL_RCC_GetPCLK2Freq>
 80034cc:	6862      	ldr	r2, [r4, #4]
 80034ce:	4368      	muls	r0, r5
 80034d0:	0052      	lsls	r2, r2, #1
 80034d2:	fbb0 faf2 	udiv	r10, r0, r2
 80034d6:	f000 fb79 	bl	8003bcc <HAL_RCC_GetPCLK2Freq>
 80034da:	6863      	ldr	r3, [r4, #4]
 80034dc:	4368      	muls	r0, r5
 80034de:	005b      	lsls	r3, r3, #1
 80034e0:	fbb0 f3f3 	udiv	r3, r0, r3
 80034e4:	fbb3 f3f9 	udiv	r3, r3, r9
 80034e8:	fb09 a313 	mls	r3, r9, r3, r10
 80034ec:	00db      	lsls	r3, r3, #3
 80034ee:	3332      	adds	r3, #50	; 0x32
 80034f0:	fbb3 f3f9 	udiv	r3, r3, r9
 80034f4:	f003 0307 	and.w	r3, r3, #7
 80034f8:	4443      	add	r3, r8
 80034fa:	443b      	add	r3, r7
 80034fc:	60b3      	str	r3, [r6, #8]
 80034fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8003502:	f000 fb4b 	bl	8003b9c <HAL_RCC_GetPCLK1Freq>
 8003506:	2519      	movs	r5, #25
 8003508:	fb05 f300 	mul.w	r3, r5, r0
 800350c:	6860      	ldr	r0, [r4, #4]
 800350e:	f04f 0964 	mov.w	r9, #100	; 0x64
 8003512:	0040      	lsls	r0, r0, #1
 8003514:	fbb3 f3f0 	udiv	r3, r3, r0
 8003518:	fbb3 f3f9 	udiv	r3, r3, r9
 800351c:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8003520:	f000 fb3c 	bl	8003b9c <HAL_RCC_GetPCLK1Freq>
 8003524:	6863      	ldr	r3, [r4, #4]
 8003526:	4368      	muls	r0, r5
 8003528:	005b      	lsls	r3, r3, #1
 800352a:	fbb0 f7f3 	udiv	r7, r0, r3
 800352e:	f000 fb35 	bl	8003b9c <HAL_RCC_GetPCLK1Freq>
 8003532:	6863      	ldr	r3, [r4, #4]
 8003534:	4368      	muls	r0, r5
 8003536:	005b      	lsls	r3, r3, #1
 8003538:	fbb0 f3f3 	udiv	r3, r0, r3
 800353c:	fbb3 f3f9 	udiv	r3, r3, r9
 8003540:	fb09 7313 	mls	r3, r9, r3, r7
 8003544:	00db      	lsls	r3, r3, #3
 8003546:	3332      	adds	r3, #50	; 0x32
 8003548:	fbb3 f3f9 	udiv	r3, r3, r9
 800354c:	005b      	lsls	r3, r3, #1
 800354e:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 8003552:	f000 fb23 	bl	8003b9c <HAL_RCC_GetPCLK1Freq>
 8003556:	6862      	ldr	r2, [r4, #4]
 8003558:	4368      	muls	r0, r5
 800355a:	0052      	lsls	r2, r2, #1
 800355c:	fbb0 faf2 	udiv	r10, r0, r2
 8003560:	f000 fb1c 	bl	8003b9c <HAL_RCC_GetPCLK1Freq>
 8003564:	e7b9      	b.n	80034da <UART_SetConfig+0xb2>
 8003566:	429e      	cmp	r6, r3
 8003568:	d002      	beq.n	8003570 <UART_SetConfig+0x148>
 800356a:	4b3b      	ldr	r3, [pc, #236]	; (8003658 <UART_SetConfig+0x230>)
 800356c:	429e      	cmp	r6, r3
 800356e:	d140      	bne.n	80035f2 <UART_SetConfig+0x1ca>
 8003570:	f000 fb2c 	bl	8003bcc <HAL_RCC_GetPCLK2Freq>
 8003574:	6867      	ldr	r7, [r4, #4]
 8003576:	2519      	movs	r5, #25
 8003578:	f04f 0964 	mov.w	r9, #100	; 0x64
 800357c:	fb05 f300 	mul.w	r3, r5, r0
 8003580:	00bf      	lsls	r7, r7, #2
 8003582:	fbb3 f3f7 	udiv	r3, r3, r7
 8003586:	fbb3 f3f9 	udiv	r3, r3, r9
 800358a:	011f      	lsls	r7, r3, #4
 800358c:	f000 fb1e 	bl	8003bcc <HAL_RCC_GetPCLK2Freq>
 8003590:	6863      	ldr	r3, [r4, #4]
 8003592:	4368      	muls	r0, r5
 8003594:	009b      	lsls	r3, r3, #2
 8003596:	fbb0 f8f3 	udiv	r8, r0, r3
 800359a:	f000 fb17 	bl	8003bcc <HAL_RCC_GetPCLK2Freq>
 800359e:	6863      	ldr	r3, [r4, #4]
 80035a0:	4368      	muls	r0, r5
 80035a2:	009b      	lsls	r3, r3, #2
 80035a4:	fbb0 f3f3 	udiv	r3, r0, r3
 80035a8:	fbb3 f3f9 	udiv	r3, r3, r9
 80035ac:	fb09 8313 	mls	r3, r9, r3, r8
 80035b0:	011b      	lsls	r3, r3, #4
 80035b2:	3332      	adds	r3, #50	; 0x32
 80035b4:	fbb3 f3f9 	udiv	r3, r3, r9
 80035b8:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 80035bc:	f000 fb06 	bl	8003bcc <HAL_RCC_GetPCLK2Freq>
 80035c0:	6862      	ldr	r2, [r4, #4]
 80035c2:	4368      	muls	r0, r5
 80035c4:	0092      	lsls	r2, r2, #2
 80035c6:	fbb0 faf2 	udiv	r10, r0, r2
 80035ca:	f000 faff 	bl	8003bcc <HAL_RCC_GetPCLK2Freq>
 80035ce:	6863      	ldr	r3, [r4, #4]
 80035d0:	4368      	muls	r0, r5
 80035d2:	009b      	lsls	r3, r3, #2
 80035d4:	fbb0 f3f3 	udiv	r3, r0, r3
 80035d8:	fbb3 f3f9 	udiv	r3, r3, r9
 80035dc:	fb09 a313 	mls	r3, r9, r3, r10
 80035e0:	011b      	lsls	r3, r3, #4
 80035e2:	3332      	adds	r3, #50	; 0x32
 80035e4:	fbb3 f3f9 	udiv	r3, r3, r9
 80035e8:	f003 030f 	and.w	r3, r3, #15
 80035ec:	ea43 0308 	orr.w	r3, r3, r8
 80035f0:	e783      	b.n	80034fa <UART_SetConfig+0xd2>
 80035f2:	f000 fad3 	bl	8003b9c <HAL_RCC_GetPCLK1Freq>
 80035f6:	6867      	ldr	r7, [r4, #4]
 80035f8:	2519      	movs	r5, #25
 80035fa:	f04f 0964 	mov.w	r9, #100	; 0x64
 80035fe:	fb05 f300 	mul.w	r3, r5, r0
 8003602:	00bf      	lsls	r7, r7, #2
 8003604:	fbb3 f3f7 	udiv	r3, r3, r7
 8003608:	fbb3 f3f9 	udiv	r3, r3, r9
 800360c:	011f      	lsls	r7, r3, #4
 800360e:	f000 fac5 	bl	8003b9c <HAL_RCC_GetPCLK1Freq>
 8003612:	6863      	ldr	r3, [r4, #4]
 8003614:	4368      	muls	r0, r5
 8003616:	009b      	lsls	r3, r3, #2
 8003618:	fbb0 f8f3 	udiv	r8, r0, r3
 800361c:	f000 fabe 	bl	8003b9c <HAL_RCC_GetPCLK1Freq>
 8003620:	6863      	ldr	r3, [r4, #4]
 8003622:	4368      	muls	r0, r5
 8003624:	009b      	lsls	r3, r3, #2
 8003626:	fbb0 f3f3 	udiv	r3, r0, r3
 800362a:	fbb3 f3f9 	udiv	r3, r3, r9
 800362e:	fb09 8313 	mls	r3, r9, r3, r8
 8003632:	011b      	lsls	r3, r3, #4
 8003634:	3332      	adds	r3, #50	; 0x32
 8003636:	fbb3 f3f9 	udiv	r3, r3, r9
 800363a:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 800363e:	f000 faad 	bl	8003b9c <HAL_RCC_GetPCLK1Freq>
 8003642:	6862      	ldr	r2, [r4, #4]
 8003644:	4368      	muls	r0, r5
 8003646:	0092      	lsls	r2, r2, #2
 8003648:	fbb0 faf2 	udiv	r10, r0, r2
 800364c:	f000 faa6 	bl	8003b9c <HAL_RCC_GetPCLK1Freq>
 8003650:	e7bd      	b.n	80035ce <UART_SetConfig+0x1a6>
 8003652:	bf00      	nop
 8003654:	40011000 	.word	0x40011000
 8003658:	40011400 	.word	0x40011400

0800365c <HAL_UART_MspInit>:
 800365c:	4770      	bx	lr

0800365e <HAL_UART_Init>:
 800365e:	b510      	push	{r4, lr}
 8003660:	4604      	mov	r4, r0
 8003662:	b340      	cbz	r0, 80036b6 <HAL_UART_Init+0x58>
 8003664:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003668:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800366c:	b91b      	cbnz	r3, 8003676 <HAL_UART_Init+0x18>
 800366e:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8003672:	f7ff fff3 	bl	800365c <HAL_UART_MspInit>
 8003676:	6822      	ldr	r2, [r4, #0]
 8003678:	2324      	movs	r3, #36	; 0x24
 800367a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800367e:	68d3      	ldr	r3, [r2, #12]
 8003680:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003684:	60d3      	str	r3, [r2, #12]
 8003686:	4620      	mov	r0, r4
 8003688:	f7ff fece 	bl	8003428 <UART_SetConfig>
 800368c:	6823      	ldr	r3, [r4, #0]
 800368e:	691a      	ldr	r2, [r3, #16]
 8003690:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003694:	611a      	str	r2, [r3, #16]
 8003696:	695a      	ldr	r2, [r3, #20]
 8003698:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800369c:	615a      	str	r2, [r3, #20]
 800369e:	68da      	ldr	r2, [r3, #12]
 80036a0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80036a4:	60da      	str	r2, [r3, #12]
 80036a6:	2000      	movs	r0, #0
 80036a8:	2320      	movs	r3, #32
 80036aa:	63e0      	str	r0, [r4, #60]	; 0x3c
 80036ac:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80036b0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 80036b4:	bd10      	pop	{r4, pc}
 80036b6:	2001      	movs	r0, #1
 80036b8:	bd10      	pop	{r4, pc}
	...

080036bc <HAL_PWR_EnterSLEEPMode>:
 80036bc:	4a06      	ldr	r2, [pc, #24]	; (80036d8 <HAL_PWR_EnterSLEEPMode+0x1c>)
 80036be:	6913      	ldr	r3, [r2, #16]
 80036c0:	2901      	cmp	r1, #1
 80036c2:	f023 0304 	bic.w	r3, r3, #4
 80036c6:	6113      	str	r3, [r2, #16]
 80036c8:	d101      	bne.n	80036ce <HAL_PWR_EnterSLEEPMode+0x12>
 80036ca:	bf30      	wfi
 80036cc:	4770      	bx	lr
 80036ce:	bf40      	sev
 80036d0:	bf20      	wfe
 80036d2:	bf20      	wfe
 80036d4:	4770      	bx	lr
 80036d6:	bf00      	nop
 80036d8:	e000ed00 	.word	0xe000ed00

080036dc <HAL_RCC_OscConfig>:
 80036dc:	6803      	ldr	r3, [r0, #0]
 80036de:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80036e0:	07dd      	lsls	r5, r3, #31
 80036e2:	4604      	mov	r4, r0
 80036e4:	d438      	bmi.n	8003758 <HAL_RCC_OscConfig+0x7c>
 80036e6:	6823      	ldr	r3, [r4, #0]
 80036e8:	0798      	lsls	r0, r3, #30
 80036ea:	d471      	bmi.n	80037d0 <HAL_RCC_OscConfig+0xf4>
 80036ec:	6823      	ldr	r3, [r4, #0]
 80036ee:	071e      	lsls	r6, r3, #28
 80036f0:	f100 80bd 	bmi.w	800386e <HAL_RCC_OscConfig+0x192>
 80036f4:	6823      	ldr	r3, [r4, #0]
 80036f6:	075d      	lsls	r5, r3, #29
 80036f8:	d528      	bpl.n	800374c <HAL_RCC_OscConfig+0x70>
 80036fa:	2300      	movs	r3, #0
 80036fc:	9301      	str	r3, [sp, #4]
 80036fe:	4ba8      	ldr	r3, [pc, #672]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 8003700:	4da8      	ldr	r5, [pc, #672]	; (80039a4 <HAL_RCC_OscConfig+0x2c8>)
 8003702:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003704:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003708:	641a      	str	r2, [r3, #64]	; 0x40
 800370a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800370c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003710:	9301      	str	r3, [sp, #4]
 8003712:	9b01      	ldr	r3, [sp, #4]
 8003714:	682b      	ldr	r3, [r5, #0]
 8003716:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800371a:	602b      	str	r3, [r5, #0]
 800371c:	f7ff fe7e 	bl	800341c <HAL_GetTick>
 8003720:	4606      	mov	r6, r0
 8003722:	682b      	ldr	r3, [r5, #0]
 8003724:	05da      	lsls	r2, r3, #23
 8003726:	f140 80c4 	bpl.w	80038b2 <HAL_RCC_OscConfig+0x1d6>
 800372a:	4b9f      	ldr	r3, [pc, #636]	; (80039a8 <HAL_RCC_OscConfig+0x2cc>)
 800372c:	7a22      	ldrb	r2, [r4, #8]
 800372e:	701a      	strb	r2, [r3, #0]
 8003730:	68a3      	ldr	r3, [r4, #8]
 8003732:	2b00      	cmp	r3, #0
 8003734:	f000 80cb 	beq.w	80038ce <HAL_RCC_OscConfig+0x1f2>
 8003738:	f7ff fe70 	bl	800341c <HAL_GetTick>
 800373c:	4d98      	ldr	r5, [pc, #608]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 800373e:	4606      	mov	r6, r0
 8003740:	f241 3788 	movw	r7, #5000	; 0x1388
 8003744:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8003746:	079b      	lsls	r3, r3, #30
 8003748:	f140 80ba 	bpl.w	80038c0 <HAL_RCC_OscConfig+0x1e4>
 800374c:	69a2      	ldr	r2, [r4, #24]
 800374e:	2a00      	cmp	r2, #0
 8003750:	f040 80cd 	bne.w	80038ee <HAL_RCC_OscConfig+0x212>
 8003754:	2000      	movs	r0, #0
 8003756:	e015      	b.n	8003784 <HAL_RCC_OscConfig+0xa8>
 8003758:	4b91      	ldr	r3, [pc, #580]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 800375a:	689a      	ldr	r2, [r3, #8]
 800375c:	f002 020c 	and.w	r2, r2, #12
 8003760:	2a04      	cmp	r2, #4
 8003762:	d007      	beq.n	8003774 <HAL_RCC_OscConfig+0x98>
 8003764:	689a      	ldr	r2, [r3, #8]
 8003766:	f002 020c 	and.w	r2, r2, #12
 800376a:	2a08      	cmp	r2, #8
 800376c:	d10c      	bne.n	8003788 <HAL_RCC_OscConfig+0xac>
 800376e:	685b      	ldr	r3, [r3, #4]
 8003770:	0259      	lsls	r1, r3, #9
 8003772:	d509      	bpl.n	8003788 <HAL_RCC_OscConfig+0xac>
 8003774:	4b8a      	ldr	r3, [pc, #552]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	039a      	lsls	r2, r3, #14
 800377a:	d5b4      	bpl.n	80036e6 <HAL_RCC_OscConfig+0xa>
 800377c:	6863      	ldr	r3, [r4, #4]
 800377e:	2b00      	cmp	r3, #0
 8003780:	d1b1      	bne.n	80036e6 <HAL_RCC_OscConfig+0xa>
 8003782:	2001      	movs	r0, #1
 8003784:	b003      	add	sp, #12
 8003786:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003788:	4b88      	ldr	r3, [pc, #544]	; (80039ac <HAL_RCC_OscConfig+0x2d0>)
 800378a:	7922      	ldrb	r2, [r4, #4]
 800378c:	701a      	strb	r2, [r3, #0]
 800378e:	6863      	ldr	r3, [r4, #4]
 8003790:	b17b      	cbz	r3, 80037b2 <HAL_RCC_OscConfig+0xd6>
 8003792:	f7ff fe43 	bl	800341c <HAL_GetTick>
 8003796:	4d82      	ldr	r5, [pc, #520]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 8003798:	4606      	mov	r6, r0
 800379a:	f241 3788 	movw	r7, #5000	; 0x1388
 800379e:	682b      	ldr	r3, [r5, #0]
 80037a0:	039b      	lsls	r3, r3, #14
 80037a2:	d4a0      	bmi.n	80036e6 <HAL_RCC_OscConfig+0xa>
 80037a4:	f7ff fe3a 	bl	800341c <HAL_GetTick>
 80037a8:	1b80      	subs	r0, r0, r6
 80037aa:	42b8      	cmp	r0, r7
 80037ac:	d9f7      	bls.n	800379e <HAL_RCC_OscConfig+0xc2>
 80037ae:	2003      	movs	r0, #3
 80037b0:	e7e8      	b.n	8003784 <HAL_RCC_OscConfig+0xa8>
 80037b2:	f7ff fe33 	bl	800341c <HAL_GetTick>
 80037b6:	4d7a      	ldr	r5, [pc, #488]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 80037b8:	4606      	mov	r6, r0
 80037ba:	f241 3788 	movw	r7, #5000	; 0x1388
 80037be:	682b      	ldr	r3, [r5, #0]
 80037c0:	0398      	lsls	r0, r3, #14
 80037c2:	d590      	bpl.n	80036e6 <HAL_RCC_OscConfig+0xa>
 80037c4:	f7ff fe2a 	bl	800341c <HAL_GetTick>
 80037c8:	1b80      	subs	r0, r0, r6
 80037ca:	42b8      	cmp	r0, r7
 80037cc:	d9f7      	bls.n	80037be <HAL_RCC_OscConfig+0xe2>
 80037ce:	e7ee      	b.n	80037ae <HAL_RCC_OscConfig+0xd2>
 80037d0:	4b73      	ldr	r3, [pc, #460]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 80037d2:	689a      	ldr	r2, [r3, #8]
 80037d4:	f012 0f0c 	tst.w	r2, #12
 80037d8:	d007      	beq.n	80037ea <HAL_RCC_OscConfig+0x10e>
 80037da:	689a      	ldr	r2, [r3, #8]
 80037dc:	f002 020c 	and.w	r2, r2, #12
 80037e0:	2a08      	cmp	r2, #8
 80037e2:	d116      	bne.n	8003812 <HAL_RCC_OscConfig+0x136>
 80037e4:	685b      	ldr	r3, [r3, #4]
 80037e6:	0259      	lsls	r1, r3, #9
 80037e8:	d413      	bmi.n	8003812 <HAL_RCC_OscConfig+0x136>
 80037ea:	4b6d      	ldr	r3, [pc, #436]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 80037ec:	681a      	ldr	r2, [r3, #0]
 80037ee:	0792      	lsls	r2, r2, #30
 80037f0:	d502      	bpl.n	80037f8 <HAL_RCC_OscConfig+0x11c>
 80037f2:	68e2      	ldr	r2, [r4, #12]
 80037f4:	2a01      	cmp	r2, #1
 80037f6:	d1c4      	bne.n	8003782 <HAL_RCC_OscConfig+0xa6>
 80037f8:	6818      	ldr	r0, [r3, #0]
 80037fa:	22f8      	movs	r2, #248	; 0xf8
 80037fc:	fa92 f2a2 	rbit	r2, r2
 8003800:	fab2 f182 	clz	r1, r2
 8003804:	6922      	ldr	r2, [r4, #16]
 8003806:	408a      	lsls	r2, r1
 8003808:	f020 01f8 	bic.w	r1, r0, #248	; 0xf8
 800380c:	430a      	orrs	r2, r1
 800380e:	601a      	str	r2, [r3, #0]
 8003810:	e76c      	b.n	80036ec <HAL_RCC_OscConfig+0x10>
 8003812:	68e2      	ldr	r2, [r4, #12]
 8003814:	4b66      	ldr	r3, [pc, #408]	; (80039b0 <HAL_RCC_OscConfig+0x2d4>)
 8003816:	b1da      	cbz	r2, 8003850 <HAL_RCC_OscConfig+0x174>
 8003818:	2201      	movs	r2, #1
 800381a:	601a      	str	r2, [r3, #0]
 800381c:	f7ff fdfe 	bl	800341c <HAL_GetTick>
 8003820:	4d5f      	ldr	r5, [pc, #380]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 8003822:	4606      	mov	r6, r0
 8003824:	682b      	ldr	r3, [r5, #0]
 8003826:	079b      	lsls	r3, r3, #30
 8003828:	d50c      	bpl.n	8003844 <HAL_RCC_OscConfig+0x168>
 800382a:	6829      	ldr	r1, [r5, #0]
 800382c:	23f8      	movs	r3, #248	; 0xf8
 800382e:	fa93 f3a3 	rbit	r3, r3
 8003832:	fab3 f283 	clz	r2, r3
 8003836:	6923      	ldr	r3, [r4, #16]
 8003838:	4093      	lsls	r3, r2
 800383a:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 800383e:	4313      	orrs	r3, r2
 8003840:	602b      	str	r3, [r5, #0]
 8003842:	e753      	b.n	80036ec <HAL_RCC_OscConfig+0x10>
 8003844:	f7ff fdea 	bl	800341c <HAL_GetTick>
 8003848:	1b80      	subs	r0, r0, r6
 800384a:	2802      	cmp	r0, #2
 800384c:	d9ea      	bls.n	8003824 <HAL_RCC_OscConfig+0x148>
 800384e:	e7ae      	b.n	80037ae <HAL_RCC_OscConfig+0xd2>
 8003850:	601a      	str	r2, [r3, #0]
 8003852:	f7ff fde3 	bl	800341c <HAL_GetTick>
 8003856:	4d52      	ldr	r5, [pc, #328]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 8003858:	4606      	mov	r6, r0
 800385a:	682b      	ldr	r3, [r5, #0]
 800385c:	079f      	lsls	r7, r3, #30
 800385e:	f57f af45 	bpl.w	80036ec <HAL_RCC_OscConfig+0x10>
 8003862:	f7ff fddb 	bl	800341c <HAL_GetTick>
 8003866:	1b80      	subs	r0, r0, r6
 8003868:	2802      	cmp	r0, #2
 800386a:	d9f6      	bls.n	800385a <HAL_RCC_OscConfig+0x17e>
 800386c:	e79f      	b.n	80037ae <HAL_RCC_OscConfig+0xd2>
 800386e:	6962      	ldr	r2, [r4, #20]
 8003870:	4b50      	ldr	r3, [pc, #320]	; (80039b4 <HAL_RCC_OscConfig+0x2d8>)
 8003872:	b17a      	cbz	r2, 8003894 <HAL_RCC_OscConfig+0x1b8>
 8003874:	2201      	movs	r2, #1
 8003876:	601a      	str	r2, [r3, #0]
 8003878:	f7ff fdd0 	bl	800341c <HAL_GetTick>
 800387c:	4d48      	ldr	r5, [pc, #288]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 800387e:	4606      	mov	r6, r0
 8003880:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8003882:	0798      	lsls	r0, r3, #30
 8003884:	f53f af36 	bmi.w	80036f4 <HAL_RCC_OscConfig+0x18>
 8003888:	f7ff fdc8 	bl	800341c <HAL_GetTick>
 800388c:	1b80      	subs	r0, r0, r6
 800388e:	2802      	cmp	r0, #2
 8003890:	d9f6      	bls.n	8003880 <HAL_RCC_OscConfig+0x1a4>
 8003892:	e78c      	b.n	80037ae <HAL_RCC_OscConfig+0xd2>
 8003894:	601a      	str	r2, [r3, #0]
 8003896:	f7ff fdc1 	bl	800341c <HAL_GetTick>
 800389a:	4d41      	ldr	r5, [pc, #260]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 800389c:	4606      	mov	r6, r0
 800389e:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80038a0:	0799      	lsls	r1, r3, #30
 80038a2:	f57f af27 	bpl.w	80036f4 <HAL_RCC_OscConfig+0x18>
 80038a6:	f7ff fdb9 	bl	800341c <HAL_GetTick>
 80038aa:	1b80      	subs	r0, r0, r6
 80038ac:	2802      	cmp	r0, #2
 80038ae:	d9f6      	bls.n	800389e <HAL_RCC_OscConfig+0x1c2>
 80038b0:	e77d      	b.n	80037ae <HAL_RCC_OscConfig+0xd2>
 80038b2:	f7ff fdb3 	bl	800341c <HAL_GetTick>
 80038b6:	1b80      	subs	r0, r0, r6
 80038b8:	2802      	cmp	r0, #2
 80038ba:	f67f af32 	bls.w	8003722 <HAL_RCC_OscConfig+0x46>
 80038be:	e776      	b.n	80037ae <HAL_RCC_OscConfig+0xd2>
 80038c0:	f7ff fdac 	bl	800341c <HAL_GetTick>
 80038c4:	1b80      	subs	r0, r0, r6
 80038c6:	42b8      	cmp	r0, r7
 80038c8:	f67f af3c 	bls.w	8003744 <HAL_RCC_OscConfig+0x68>
 80038cc:	e76f      	b.n	80037ae <HAL_RCC_OscConfig+0xd2>
 80038ce:	f7ff fda5 	bl	800341c <HAL_GetTick>
 80038d2:	4d33      	ldr	r5, [pc, #204]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 80038d4:	4606      	mov	r6, r0
 80038d6:	f241 3788 	movw	r7, #5000	; 0x1388
 80038da:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80038dc:	0798      	lsls	r0, r3, #30
 80038de:	f57f af35 	bpl.w	800374c <HAL_RCC_OscConfig+0x70>
 80038e2:	f7ff fd9b 	bl	800341c <HAL_GetTick>
 80038e6:	1b80      	subs	r0, r0, r6
 80038e8:	42b8      	cmp	r0, r7
 80038ea:	d9f6      	bls.n	80038da <HAL_RCC_OscConfig+0x1fe>
 80038ec:	e75f      	b.n	80037ae <HAL_RCC_OscConfig+0xd2>
 80038ee:	4d2c      	ldr	r5, [pc, #176]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 80038f0:	68ab      	ldr	r3, [r5, #8]
 80038f2:	f003 030c 	and.w	r3, r3, #12
 80038f6:	2b08      	cmp	r3, #8
 80038f8:	f43f af43 	beq.w	8003782 <HAL_RCC_OscConfig+0xa6>
 80038fc:	4e2e      	ldr	r6, [pc, #184]	; (80039b8 <HAL_RCC_OscConfig+0x2dc>)
 80038fe:	2300      	movs	r3, #0
 8003900:	2a02      	cmp	r2, #2
 8003902:	6033      	str	r3, [r6, #0]
 8003904:	d13e      	bne.n	8003984 <HAL_RCC_OscConfig+0x2a8>
 8003906:	f7ff fd89 	bl	800341c <HAL_GetTick>
 800390a:	4607      	mov	r7, r0
 800390c:	682b      	ldr	r3, [r5, #0]
 800390e:	0199      	lsls	r1, r3, #6
 8003910:	d432      	bmi.n	8003978 <HAL_RCC_OscConfig+0x29c>
 8003912:	f647 77c0 	movw	r7, #32704	; 0x7fc0
 8003916:	fa97 f7a7 	rbit	r7, r7
 800391a:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 800391e:	fab7 f787 	clz	r7, r7
 8003922:	fa92 f2a2 	rbit	r2, r2
 8003926:	f04f 6170 	mov.w	r1, #251658240	; 0xf000000
 800392a:	fab2 f082 	clz	r0, r2
 800392e:	fa91 f1a1 	rbit	r1, r1
 8003932:	6a22      	ldr	r2, [r4, #32]
 8003934:	69e3      	ldr	r3, [r4, #28]
 8003936:	4313      	orrs	r3, r2
 8003938:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800393a:	fa02 f707 	lsl.w	r7, r2, r7
 800393e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8003940:	0852      	lsrs	r2, r2, #1
 8003942:	3a01      	subs	r2, #1
 8003944:	4082      	lsls	r2, r0
 8003946:	433b      	orrs	r3, r7
 8003948:	4313      	orrs	r3, r2
 800394a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800394c:	4c14      	ldr	r4, [pc, #80]	; (80039a0 <HAL_RCC_OscConfig+0x2c4>)
 800394e:	fab1 f181 	clz	r1, r1
 8003952:	fa02 f101 	lsl.w	r1, r2, r1
 8003956:	430b      	orrs	r3, r1
 8003958:	606b      	str	r3, [r5, #4]
 800395a:	2301      	movs	r3, #1
 800395c:	6033      	str	r3, [r6, #0]
 800395e:	f7ff fd5d 	bl	800341c <HAL_GetTick>
 8003962:	4605      	mov	r5, r0
 8003964:	6823      	ldr	r3, [r4, #0]
 8003966:	019a      	lsls	r2, r3, #6
 8003968:	f53f aef4 	bmi.w	8003754 <HAL_RCC_OscConfig+0x78>
 800396c:	f7ff fd56 	bl	800341c <HAL_GetTick>
 8003970:	1b40      	subs	r0, r0, r5
 8003972:	2802      	cmp	r0, #2
 8003974:	d9f6      	bls.n	8003964 <HAL_RCC_OscConfig+0x288>
 8003976:	e71a      	b.n	80037ae <HAL_RCC_OscConfig+0xd2>
 8003978:	f7ff fd50 	bl	800341c <HAL_GetTick>
 800397c:	1bc0      	subs	r0, r0, r7
 800397e:	2802      	cmp	r0, #2
 8003980:	d9c4      	bls.n	800390c <HAL_RCC_OscConfig+0x230>
 8003982:	e714      	b.n	80037ae <HAL_RCC_OscConfig+0xd2>
 8003984:	f7ff fd4a 	bl	800341c <HAL_GetTick>
 8003988:	4604      	mov	r4, r0
 800398a:	682b      	ldr	r3, [r5, #0]
 800398c:	019b      	lsls	r3, r3, #6
 800398e:	f57f aee1 	bpl.w	8003754 <HAL_RCC_OscConfig+0x78>
 8003992:	f7ff fd43 	bl	800341c <HAL_GetTick>
 8003996:	1b00      	subs	r0, r0, r4
 8003998:	2802      	cmp	r0, #2
 800399a:	d9f6      	bls.n	800398a <HAL_RCC_OscConfig+0x2ae>
 800399c:	e707      	b.n	80037ae <HAL_RCC_OscConfig+0xd2>
 800399e:	bf00      	nop
 80039a0:	40023800 	.word	0x40023800
 80039a4:	40007000 	.word	0x40007000
 80039a8:	40023870 	.word	0x40023870
 80039ac:	40023802 	.word	0x40023802
 80039b0:	42470000 	.word	0x42470000
 80039b4:	42470e80 	.word	0x42470e80
 80039b8:	42470060 	.word	0x42470060

080039bc <HAL_RCC_GetSysClockFreq>:
 80039bc:	4a19      	ldr	r2, [pc, #100]	; (8003a24 <HAL_RCC_GetSysClockFreq+0x68>)
 80039be:	6893      	ldr	r3, [r2, #8]
 80039c0:	f003 030c 	and.w	r3, r3, #12
 80039c4:	2b04      	cmp	r3, #4
 80039c6:	b510      	push	{r4, lr}
 80039c8:	d003      	beq.n	80039d2 <HAL_RCC_GetSysClockFreq+0x16>
 80039ca:	2b08      	cmp	r3, #8
 80039cc:	d003      	beq.n	80039d6 <HAL_RCC_GetSysClockFreq+0x1a>
 80039ce:	4816      	ldr	r0, [pc, #88]	; (8003a28 <HAL_RCC_GetSysClockFreq+0x6c>)
 80039d0:	bd10      	pop	{r4, pc}
 80039d2:	4816      	ldr	r0, [pc, #88]	; (8003a2c <HAL_RCC_GetSysClockFreq+0x70>)
 80039d4:	bd10      	pop	{r4, pc}
 80039d6:	6851      	ldr	r1, [r2, #4]
 80039d8:	6853      	ldr	r3, [r2, #4]
 80039da:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 80039de:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 80039e2:	f647 74c0 	movw	r4, #32704	; 0x7fc0
 80039e6:	6853      	ldr	r3, [r2, #4]
 80039e8:	fa94 f0a4 	rbit	r0, r4
 80039ec:	fab0 f080 	clz	r0, r0
 80039f0:	ea03 0304 	and.w	r3, r3, r4
 80039f4:	fa23 f300 	lsr.w	r3, r3, r0
 80039f8:	bf14      	ite	ne
 80039fa:	480c      	ldrne	r0, [pc, #48]	; (8003a2c <HAL_RCC_GetSysClockFreq+0x70>)
 80039fc:	480a      	ldreq	r0, [pc, #40]	; (8003a28 <HAL_RCC_GetSysClockFreq+0x6c>)
 80039fe:	fbb0 f0f1 	udiv	r0, r0, r1
 8003a02:	4358      	muls	r0, r3
 8003a04:	4b07      	ldr	r3, [pc, #28]	; (8003a24 <HAL_RCC_GetSysClockFreq+0x68>)
 8003a06:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8003a0a:	685b      	ldr	r3, [r3, #4]
 8003a0c:	fa92 f2a2 	rbit	r2, r2
 8003a10:	fab2 f282 	clz	r2, r2
 8003a14:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003a18:	40d3      	lsrs	r3, r2
 8003a1a:	3301      	adds	r3, #1
 8003a1c:	005b      	lsls	r3, r3, #1
 8003a1e:	fbb0 f0f3 	udiv	r0, r0, r3
 8003a22:	bd10      	pop	{r4, pc}
 8003a24:	40023800 	.word	0x40023800
 8003a28:	00f42400 	.word	0x00f42400
 8003a2c:	007a1200 	.word	0x007a1200

08003a30 <HAL_RCC_ClockConfig>:
 8003a30:	4b56      	ldr	r3, [pc, #344]	; (8003b8c <HAL_RCC_ClockConfig+0x15c>)
 8003a32:	681a      	ldr	r2, [r3, #0]
 8003a34:	f002 020f 	and.w	r2, r2, #15
 8003a38:	428a      	cmp	r2, r1
 8003a3a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003a3e:	4605      	mov	r5, r0
 8003a40:	460e      	mov	r6, r1
 8003a42:	d330      	bcc.n	8003aa6 <HAL_RCC_ClockConfig+0x76>
 8003a44:	682a      	ldr	r2, [r5, #0]
 8003a46:	0794      	lsls	r4, r2, #30
 8003a48:	d437      	bmi.n	8003aba <HAL_RCC_ClockConfig+0x8a>
 8003a4a:	07d0      	lsls	r0, r2, #31
 8003a4c:	d43d      	bmi.n	8003aca <HAL_RCC_ClockConfig+0x9a>
 8003a4e:	4b4f      	ldr	r3, [pc, #316]	; (8003b8c <HAL_RCC_ClockConfig+0x15c>)
 8003a50:	681a      	ldr	r2, [r3, #0]
 8003a52:	f002 020f 	and.w	r2, r2, #15
 8003a56:	4296      	cmp	r6, r2
 8003a58:	f0c0 8088 	bcc.w	8003b6c <HAL_RCC_ClockConfig+0x13c>
 8003a5c:	682a      	ldr	r2, [r5, #0]
 8003a5e:	0751      	lsls	r1, r2, #29
 8003a60:	f100 808c 	bmi.w	8003b7c <HAL_RCC_ClockConfig+0x14c>
 8003a64:	0713      	lsls	r3, r2, #28
 8003a66:	d507      	bpl.n	8003a78 <HAL_RCC_ClockConfig+0x48>
 8003a68:	4a49      	ldr	r2, [pc, #292]	; (8003b90 <HAL_RCC_ClockConfig+0x160>)
 8003a6a:	6929      	ldr	r1, [r5, #16]
 8003a6c:	6893      	ldr	r3, [r2, #8]
 8003a6e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8003a72:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8003a76:	6093      	str	r3, [r2, #8]
 8003a78:	f7ff ffa0 	bl	80039bc <HAL_RCC_GetSysClockFreq>
 8003a7c:	4b44      	ldr	r3, [pc, #272]	; (8003b90 <HAL_RCC_ClockConfig+0x160>)
 8003a7e:	22f0      	movs	r2, #240	; 0xf0
 8003a80:	689b      	ldr	r3, [r3, #8]
 8003a82:	fa92 f2a2 	rbit	r2, r2
 8003a86:	fab2 f282 	clz	r2, r2
 8003a8a:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003a8e:	40d3      	lsrs	r3, r2
 8003a90:	4a40      	ldr	r2, [pc, #256]	; (8003b94 <HAL_RCC_ClockConfig+0x164>)
 8003a92:	5cd3      	ldrb	r3, [r2, r3]
 8003a94:	40d8      	lsrs	r0, r3
 8003a96:	4b40      	ldr	r3, [pc, #256]	; (8003b98 <HAL_RCC_ClockConfig+0x168>)
 8003a98:	6018      	str	r0, [r3, #0]
 8003a9a:	200f      	movs	r0, #15
 8003a9c:	f7fe feb6 	bl	800280c <HAL_InitTick>
 8003aa0:	2000      	movs	r0, #0
 8003aa2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003aa6:	b2ca      	uxtb	r2, r1
 8003aa8:	701a      	strb	r2, [r3, #0]
 8003aaa:	681b      	ldr	r3, [r3, #0]
 8003aac:	f003 030f 	and.w	r3, r3, #15
 8003ab0:	4299      	cmp	r1, r3
 8003ab2:	d0c7      	beq.n	8003a44 <HAL_RCC_ClockConfig+0x14>
 8003ab4:	2001      	movs	r0, #1
 8003ab6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003aba:	4935      	ldr	r1, [pc, #212]	; (8003b90 <HAL_RCC_ClockConfig+0x160>)
 8003abc:	68a8      	ldr	r0, [r5, #8]
 8003abe:	688b      	ldr	r3, [r1, #8]
 8003ac0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003ac4:	4303      	orrs	r3, r0
 8003ac6:	608b      	str	r3, [r1, #8]
 8003ac8:	e7bf      	b.n	8003a4a <HAL_RCC_ClockConfig+0x1a>
 8003aca:	686a      	ldr	r2, [r5, #4]
 8003acc:	4b30      	ldr	r3, [pc, #192]	; (8003b90 <HAL_RCC_ClockConfig+0x160>)
 8003ace:	2a01      	cmp	r2, #1
 8003ad0:	d11e      	bne.n	8003b10 <HAL_RCC_ClockConfig+0xe0>
 8003ad2:	681b      	ldr	r3, [r3, #0]
 8003ad4:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8003ad8:	d0ec      	beq.n	8003ab4 <HAL_RCC_ClockConfig+0x84>
 8003ada:	4c2d      	ldr	r4, [pc, #180]	; (8003b90 <HAL_RCC_ClockConfig+0x160>)
 8003adc:	68a3      	ldr	r3, [r4, #8]
 8003ade:	f023 0303 	bic.w	r3, r3, #3
 8003ae2:	4313      	orrs	r3, r2
 8003ae4:	60a3      	str	r3, [r4, #8]
 8003ae6:	f7ff fc99 	bl	800341c <HAL_GetTick>
 8003aea:	686b      	ldr	r3, [r5, #4]
 8003aec:	2b01      	cmp	r3, #1
 8003aee:	4607      	mov	r7, r0
 8003af0:	f241 3888 	movw	r8, #5000	; 0x1388
 8003af4:	d116      	bne.n	8003b24 <HAL_RCC_ClockConfig+0xf4>
 8003af6:	68a3      	ldr	r3, [r4, #8]
 8003af8:	f003 030c 	and.w	r3, r3, #12
 8003afc:	2b04      	cmp	r3, #4
 8003afe:	d0a6      	beq.n	8003a4e <HAL_RCC_ClockConfig+0x1e>
 8003b00:	f7ff fc8c 	bl	800341c <HAL_GetTick>
 8003b04:	1bc0      	subs	r0, r0, r7
 8003b06:	4540      	cmp	r0, r8
 8003b08:	d9f5      	bls.n	8003af6 <HAL_RCC_ClockConfig+0xc6>
 8003b0a:	2003      	movs	r0, #3
 8003b0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003b10:	1e91      	subs	r1, r2, #2
 8003b12:	2901      	cmp	r1, #1
 8003b14:	681b      	ldr	r3, [r3, #0]
 8003b16:	d802      	bhi.n	8003b1e <HAL_RCC_ClockConfig+0xee>
 8003b18:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8003b1c:	e7dc      	b.n	8003ad8 <HAL_RCC_ClockConfig+0xa8>
 8003b1e:	f013 0f02 	tst.w	r3, #2
 8003b22:	e7d9      	b.n	8003ad8 <HAL_RCC_ClockConfig+0xa8>
 8003b24:	2b02      	cmp	r3, #2
 8003b26:	d10a      	bne.n	8003b3e <HAL_RCC_ClockConfig+0x10e>
 8003b28:	68a3      	ldr	r3, [r4, #8]
 8003b2a:	f003 030c 	and.w	r3, r3, #12
 8003b2e:	2b08      	cmp	r3, #8
 8003b30:	d08d      	beq.n	8003a4e <HAL_RCC_ClockConfig+0x1e>
 8003b32:	f7ff fc73 	bl	800341c <HAL_GetTick>
 8003b36:	1bc0      	subs	r0, r0, r7
 8003b38:	4540      	cmp	r0, r8
 8003b3a:	d9f5      	bls.n	8003b28 <HAL_RCC_ClockConfig+0xf8>
 8003b3c:	e7e5      	b.n	8003b0a <HAL_RCC_ClockConfig+0xda>
 8003b3e:	2b03      	cmp	r3, #3
 8003b40:	d10f      	bne.n	8003b62 <HAL_RCC_ClockConfig+0x132>
 8003b42:	68a3      	ldr	r3, [r4, #8]
 8003b44:	f003 030c 	and.w	r3, r3, #12
 8003b48:	2b0c      	cmp	r3, #12
 8003b4a:	d080      	beq.n	8003a4e <HAL_RCC_ClockConfig+0x1e>
 8003b4c:	f7ff fc66 	bl	800341c <HAL_GetTick>
 8003b50:	1bc0      	subs	r0, r0, r7
 8003b52:	4540      	cmp	r0, r8
 8003b54:	d9f5      	bls.n	8003b42 <HAL_RCC_ClockConfig+0x112>
 8003b56:	e7d8      	b.n	8003b0a <HAL_RCC_ClockConfig+0xda>
 8003b58:	f7ff fc60 	bl	800341c <HAL_GetTick>
 8003b5c:	1bc0      	subs	r0, r0, r7
 8003b5e:	4540      	cmp	r0, r8
 8003b60:	d8d3      	bhi.n	8003b0a <HAL_RCC_ClockConfig+0xda>
 8003b62:	68a3      	ldr	r3, [r4, #8]
 8003b64:	f013 0f0c 	tst.w	r3, #12
 8003b68:	d1f6      	bne.n	8003b58 <HAL_RCC_ClockConfig+0x128>
 8003b6a:	e770      	b.n	8003a4e <HAL_RCC_ClockConfig+0x1e>
 8003b6c:	b2f2      	uxtb	r2, r6
 8003b6e:	701a      	strb	r2, [r3, #0]
 8003b70:	681b      	ldr	r3, [r3, #0]
 8003b72:	f003 030f 	and.w	r3, r3, #15
 8003b76:	429e      	cmp	r6, r3
 8003b78:	d19c      	bne.n	8003ab4 <HAL_RCC_ClockConfig+0x84>
 8003b7a:	e76f      	b.n	8003a5c <HAL_RCC_ClockConfig+0x2c>
 8003b7c:	4904      	ldr	r1, [pc, #16]	; (8003b90 <HAL_RCC_ClockConfig+0x160>)
 8003b7e:	68e8      	ldr	r0, [r5, #12]
 8003b80:	688b      	ldr	r3, [r1, #8]
 8003b82:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8003b86:	4303      	orrs	r3, r0
 8003b88:	608b      	str	r3, [r1, #8]
 8003b8a:	e76b      	b.n	8003a64 <HAL_RCC_ClockConfig+0x34>
 8003b8c:	40023c00 	.word	0x40023c00
 8003b90:	40023800 	.word	0x40023800
 8003b94:	08005618 	.word	0x08005618
 8003b98:	200001b0 	.word	0x200001b0

08003b9c <HAL_RCC_GetPCLK1Freq>:
 8003b9c:	4b08      	ldr	r3, [pc, #32]	; (8003bc0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003b9e:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 8003ba2:	689b      	ldr	r3, [r3, #8]
 8003ba4:	fa92 f2a2 	rbit	r2, r2
 8003ba8:	fab2 f282 	clz	r2, r2
 8003bac:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8003bb0:	40d3      	lsrs	r3, r2
 8003bb2:	4a04      	ldr	r2, [pc, #16]	; (8003bc4 <HAL_RCC_GetPCLK1Freq+0x28>)
 8003bb4:	5cd3      	ldrb	r3, [r2, r3]
 8003bb6:	4a04      	ldr	r2, [pc, #16]	; (8003bc8 <HAL_RCC_GetPCLK1Freq+0x2c>)
 8003bb8:	6810      	ldr	r0, [r2, #0]
 8003bba:	40d8      	lsrs	r0, r3
 8003bbc:	4770      	bx	lr
 8003bbe:	bf00      	nop
 8003bc0:	40023800 	.word	0x40023800
 8003bc4:	08005618 	.word	0x08005618
 8003bc8:	200001b0 	.word	0x200001b0

08003bcc <HAL_RCC_GetPCLK2Freq>:
 8003bcc:	4b08      	ldr	r3, [pc, #32]	; (8003bf0 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003bce:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 8003bd2:	689b      	ldr	r3, [r3, #8]
 8003bd4:	fa92 f2a2 	rbit	r2, r2
 8003bd8:	fab2 f282 	clz	r2, r2
 8003bdc:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8003be0:	40d3      	lsrs	r3, r2
 8003be2:	4a04      	ldr	r2, [pc, #16]	; (8003bf4 <HAL_RCC_GetPCLK2Freq+0x28>)
 8003be4:	5cd3      	ldrb	r3, [r2, r3]
 8003be6:	4a04      	ldr	r2, [pc, #16]	; (8003bf8 <HAL_RCC_GetPCLK2Freq+0x2c>)
 8003be8:	6810      	ldr	r0, [r2, #0]
 8003bea:	40d8      	lsrs	r0, r3
 8003bec:	4770      	bx	lr
 8003bee:	bf00      	nop
 8003bf0:	40023800 	.word	0x40023800
 8003bf4:	08005618 	.word	0x08005618
 8003bf8:	200001b0 	.word	0x200001b0

08003bfc <HAL_RCC_GetClockConfig>:
 8003bfc:	230f      	movs	r3, #15
 8003bfe:	6003      	str	r3, [r0, #0]
 8003c00:	4b0b      	ldr	r3, [pc, #44]	; (8003c30 <HAL_RCC_GetClockConfig+0x34>)
 8003c02:	689a      	ldr	r2, [r3, #8]
 8003c04:	f002 0203 	and.w	r2, r2, #3
 8003c08:	6042      	str	r2, [r0, #4]
 8003c0a:	689a      	ldr	r2, [r3, #8]
 8003c0c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8003c10:	6082      	str	r2, [r0, #8]
 8003c12:	689a      	ldr	r2, [r3, #8]
 8003c14:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8003c18:	60c2      	str	r2, [r0, #12]
 8003c1a:	689b      	ldr	r3, [r3, #8]
 8003c1c:	08db      	lsrs	r3, r3, #3
 8003c1e:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8003c22:	6103      	str	r3, [r0, #16]
 8003c24:	4b03      	ldr	r3, [pc, #12]	; (8003c34 <HAL_RCC_GetClockConfig+0x38>)
 8003c26:	681b      	ldr	r3, [r3, #0]
 8003c28:	f003 030f 	and.w	r3, r3, #15
 8003c2c:	600b      	str	r3, [r1, #0]
 8003c2e:	4770      	bx	lr
 8003c30:	40023800 	.word	0x40023800
 8003c34:	40023c00 	.word	0x40023c00

08003c38 <HAL_MspInit>:
 8003c38:	4770      	bx	lr

08003c3a <mbed::RawSerial::lock()>:
 8003c3a:	4770      	bx	lr

08003c3c <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8003c3c:	b510      	push	{r4, lr}
 8003c3e:	4604      	mov	r4, r0
 8003c40:	f000 f8b8 	bl	8003db4 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8003c44:	4b01      	ldr	r3, [pc, #4]	; (8003c4c <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8003c46:	6023      	str	r3, [r4, #0]
 8003c48:	4620      	mov	r0, r4
 8003c4a:	bd10      	pop	{r4, pc}
 8003c4c:	08005630 	.word	0x08005630

08003c50 <mbed::RawSerial::~RawSerial()>:
 8003c50:	b510      	push	{r4, lr}
 8003c52:	4b03      	ldr	r3, [pc, #12]	; (8003c60 <mbed::RawSerial::~RawSerial()+0x10>)
 8003c54:	6003      	str	r3, [r0, #0]
 8003c56:	4604      	mov	r4, r0
 8003c58:	f7fd f8c2 	bl	8000de0 <mbed::SerialBase::~SerialBase()>
 8003c5c:	4620      	mov	r0, r4
 8003c5e:	bd10      	pop	{r4, pc}
 8003c60:	08005630 	.word	0x08005630

08003c64 <mbed::RawSerial::~RawSerial()>:
 8003c64:	b510      	push	{r4, lr}
 8003c66:	4604      	mov	r4, r0
 8003c68:	f7ff fff2 	bl	8003c50 <mbed::RawSerial::~RawSerial()>
 8003c6c:	4620      	mov	r0, r4
 8003c6e:	f000 fab1 	bl	80041d4 <operator delete(void*)>
 8003c72:	4620      	mov	r0, r4
 8003c74:	bd10      	pop	{r4, pc}

08003c76 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 8003c76:	6803      	ldr	r3, [r0, #0]
 8003c78:	4718      	bx	r3

08003c7a <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 8003c7a:	b108      	cbz	r0, 8003c80 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 8003c7c:	680b      	ldr	r3, [r1, #0]
 8003c7e:	6003      	str	r3, [r0, #0]
 8003c80:	4770      	bx	lr

08003c82 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 8003c82:	4770      	bx	lr

08003c84 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 8003c84:	4288      	cmp	r0, r1
 8003c86:	b538      	push	{r3, r4, r5, lr}
 8003c88:	4604      	mov	r4, r0
 8003c8a:	460d      	mov	r5, r1
 8003c8c:	d00a      	beq.n	8003ca4 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8003c8e:	f7fd f864 	bl	8000d5a <mbed::Callback<void ()>::~Callback()>
 8003c92:	b13c      	cbz	r4, 8003ca4 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8003c94:	68eb      	ldr	r3, [r5, #12]
 8003c96:	b11b      	cbz	r3, 8003ca0 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8003c98:	685b      	ldr	r3, [r3, #4]
 8003c9a:	4629      	mov	r1, r5
 8003c9c:	4620      	mov	r0, r4
 8003c9e:	4798      	blx	r3
 8003ca0:	68eb      	ldr	r3, [r5, #12]
 8003ca2:	60e3      	str	r3, [r4, #12]
 8003ca4:	4620      	mov	r0, r4
 8003ca6:	bd38      	pop	{r3, r4, r5, pc}

08003ca8 <mbed::Timer::start()>:
 8003ca8:	b510      	push	{r4, lr}
 8003caa:	4604      	mov	r4, r0
 8003cac:	f7fd fac2 	bl	8001234 <core_util_critical_section_enter>
 8003cb0:	6823      	ldr	r3, [r4, #0]
 8003cb2:	b92b      	cbnz	r3, 8003cc0 <mbed::Timer::start()+0x18>
 8003cb4:	68e0      	ldr	r0, [r4, #12]
 8003cb6:	f7fd fa68 	bl	800118a <ticker_read>
 8003cba:	2301      	movs	r3, #1
 8003cbc:	6060      	str	r0, [r4, #4]
 8003cbe:	6023      	str	r3, [r4, #0]
 8003cc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003cc4:	f7fd bacc 	b.w	8001260 <core_util_critical_section_exit>

08003cc8 <mbed::Timer::slicetime()>:
 8003cc8:	b538      	push	{r3, r4, r5, lr}
 8003cca:	4605      	mov	r5, r0
 8003ccc:	f7fd fab2 	bl	8001234 <core_util_critical_section_enter>
 8003cd0:	682c      	ldr	r4, [r5, #0]
 8003cd2:	b124      	cbz	r4, 8003cde <mbed::Timer::slicetime()+0x16>
 8003cd4:	68e8      	ldr	r0, [r5, #12]
 8003cd6:	f7fd fa58 	bl	800118a <ticker_read>
 8003cda:	686c      	ldr	r4, [r5, #4]
 8003cdc:	1b04      	subs	r4, r0, r4
 8003cde:	f7fd fabf 	bl	8001260 <core_util_critical_section_exit>
 8003ce2:	4620      	mov	r0, r4
 8003ce4:	bd38      	pop	{r3, r4, r5, pc}

08003ce6 <mbed::Timer::read_us()>:
 8003ce6:	b538      	push	{r3, r4, r5, lr}
 8003ce8:	4605      	mov	r5, r0
 8003cea:	f7fd faa3 	bl	8001234 <core_util_critical_section_enter>
 8003cee:	4628      	mov	r0, r5
 8003cf0:	68ac      	ldr	r4, [r5, #8]
 8003cf2:	f7ff ffe9 	bl	8003cc8 <mbed::Timer::slicetime()>
 8003cf6:	4404      	add	r4, r0
 8003cf8:	f7fd fab2 	bl	8001260 <core_util_critical_section_exit>
 8003cfc:	4620      	mov	r0, r4
 8003cfe:	bd38      	pop	{r3, r4, r5, pc}

08003d00 <mbed::Timer::read_ms()>:
 8003d00:	b508      	push	{r3, lr}
 8003d02:	f7ff fff0 	bl	8003ce6 <mbed::Timer::read_us()>
 8003d06:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003d0a:	fb90 f0f3 	sdiv	r0, r0, r3
 8003d0e:	bd08      	pop	{r3, pc}

08003d10 <mbed::Timer::reset()>:
 8003d10:	b510      	push	{r4, lr}
 8003d12:	4604      	mov	r4, r0
 8003d14:	f7fd fa8e 	bl	8001234 <core_util_critical_section_enter>
 8003d18:	68e0      	ldr	r0, [r4, #12]
 8003d1a:	f7fd fa36 	bl	800118a <ticker_read>
 8003d1e:	2300      	movs	r3, #0
 8003d20:	6060      	str	r0, [r4, #4]
 8003d22:	60a3      	str	r3, [r4, #8]
 8003d24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003d28:	f7fd ba9a 	b.w	8001260 <core_util_critical_section_exit>

08003d2c <mbed::Timer::Timer()>:
 8003d2c:	2300      	movs	r3, #0
 8003d2e:	b510      	push	{r4, lr}
 8003d30:	6003      	str	r3, [r0, #0]
 8003d32:	6043      	str	r3, [r0, #4]
 8003d34:	6083      	str	r3, [r0, #8]
 8003d36:	4604      	mov	r4, r0
 8003d38:	f7fd f9fa 	bl	8001130 <get_us_ticker_data>
 8003d3c:	60e0      	str	r0, [r4, #12]
 8003d3e:	4620      	mov	r0, r4
 8003d40:	f7ff ffe6 	bl	8003d10 <mbed::Timer::reset()>
 8003d44:	4620      	mov	r0, r4
 8003d46:	bd10      	pop	{r4, pc}

08003d48 <mbed::donothing()>:
 8003d48:	4770      	bx	lr

08003d4a <mbed::SerialBase::lock()>:
 8003d4a:	4770      	bx	lr

08003d4c <mbed::SerialBase::unlock()>:
 8003d4c:	4770      	bx	lr

08003d4e <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 8003d4e:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8003d52:	f102 0098 	add.w	r0, r2, #152	; 0x98
 8003d56:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	4718      	bx	r3

08003d5e <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 8003d5e:	b410      	push	{r4}
 8003d60:	b180      	cbz	r0, 8003d84 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8003d62:	6814      	ldr	r4, [r2, #0]
 8003d64:	6853      	ldr	r3, [r2, #4]
 8003d66:	b90c      	cbnz	r4, 8003d6c <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 8003d68:	07da      	lsls	r2, r3, #31
 8003d6a:	d50b      	bpl.n	8003d84 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8003d6c:	f013 0f01 	tst.w	r3, #1
 8003d70:	ea4f 0363 	mov.w	r3, r3, asr #1
 8003d74:	bf1c      	itt	ne
 8003d76:	58c2      	ldrne	r2, [r0, r3]
 8003d78:	5914      	ldrne	r4, [r2, r4]
 8003d7a:	4418      	add	r0, r3
 8003d7c:	4623      	mov	r3, r4
 8003d7e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003d82:	4718      	bx	r3
 8003d84:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003d88:	4770      	bx	lr

08003d8a <mbed::SerialBase::baud(int)>:
 8003d8a:	b570      	push	{r4, r5, r6, lr}
 8003d8c:	4605      	mov	r5, r0
 8003d8e:	4604      	mov	r4, r0
 8003d90:	f855 3b4c 	ldr.w	r3, [r5], #76
 8003d94:	460e      	mov	r6, r1
 8003d96:	681b      	ldr	r3, [r3, #0]
 8003d98:	4798      	blx	r3
 8003d9a:	4628      	mov	r0, r5
 8003d9c:	4631      	mov	r1, r6
 8003d9e:	f7ff f8c5 	bl	8002f2c <serial_baud>
 8003da2:	6823      	ldr	r3, [r4, #0]
 8003da4:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 8003da8:	4620      	mov	r0, r4
 8003daa:	685b      	ldr	r3, [r3, #4]
 8003dac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003db0:	4718      	bx	r3
	...

08003db4 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 8003db4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003db8:	b087      	sub	sp, #28
 8003dba:	2500      	movs	r5, #0
 8003dbc:	4691      	mov	r9, r2
 8003dbe:	9500      	str	r5, [sp, #0]
 8003dc0:	4602      	mov	r2, r0
 8003dc2:	9501      	str	r5, [sp, #4]
 8003dc4:	4604      	mov	r4, r0
 8003dc6:	4688      	mov	r8, r1
 8003dc8:	461f      	mov	r7, r3
 8003dca:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8003dce:	4b27      	ldr	r3, [pc, #156]	; (8003e6c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 8003dd0:	f842 3b08 	str.w	r3, [r2], #8
 8003dd4:	4b26      	ldr	r3, [pc, #152]	; (8003e70 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 8003dd6:	e882 0003 	stmia.w	r2, {r0, r1}
 8003dda:	6123      	str	r3, [r4, #16]
 8003ddc:	f248 0307 	movw	r3, #32775	; 0x8007
 8003de0:	6163      	str	r3, [r4, #20]
 8003de2:	4b24      	ldr	r3, [pc, #144]	; (8003e74 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 8003de4:	61e5      	str	r5, [r4, #28]
 8003de6:	61a4      	str	r4, [r4, #24]
 8003de8:	6222      	str	r2, [r4, #32]
 8003dea:	6263      	str	r3, [r4, #36]	; 0x24
 8003dec:	f3bf 8f6f 	isb	sy
 8003df0:	f3bf 8f4f 	dsb	sy
 8003df4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8003df8:	224c      	movs	r2, #76	; 0x4c
 8003dfa:	6365      	str	r5, [r4, #52]	; 0x34
 8003dfc:	6465      	str	r5, [r4, #68]	; 0x44
 8003dfe:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 8003e02:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 8003e06:	4630      	mov	r0, r6
 8003e08:	f000 fd17 	bl	800483a <memset>
 8003e0c:	a902      	add	r1, sp, #8
 8003e0e:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 8003e12:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 8003e16:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 8003e1a:	4d17      	ldr	r5, [pc, #92]	; (8003e78 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 8003e1c:	4f17      	ldr	r7, [pc, #92]	; (8003e7c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 8003e1e:	9702      	str	r7, [sp, #8]
 8003e20:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8003e24:	9505      	str	r5, [sp, #20]
 8003e26:	f7ff ff2d 	bl	8003c84 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8003e2a:	a802      	add	r0, sp, #8
 8003e2c:	f7fc ff95 	bl	8000d5a <mbed::Callback<void ()>::~Callback()>
 8003e30:	a902      	add	r1, sp, #8
 8003e32:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8003e36:	9702      	str	r7, [sp, #8]
 8003e38:	9505      	str	r5, [sp, #20]
 8003e3a:	f7ff ff23 	bl	8003c84 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8003e3e:	a802      	add	r0, sp, #8
 8003e40:	f7fc ff8b 	bl	8000d5a <mbed::Callback<void ()>::~Callback()>
 8003e44:	464a      	mov	r2, r9
 8003e46:	4641      	mov	r1, r8
 8003e48:	4630      	mov	r0, r6
 8003e4a:	f7fe ffd1 	bl	8002df0 <serial_init>
 8003e4e:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 8003e52:	4630      	mov	r0, r6
 8003e54:	f7ff f86a 	bl	8002f2c <serial_baud>
 8003e58:	4630      	mov	r0, r6
 8003e5a:	4622      	mov	r2, r4
 8003e5c:	4908      	ldr	r1, [pc, #32]	; (8003e80 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 8003e5e:	f7ff f869 	bl	8002f34 <serial_irq_handler>
 8003e62:	4620      	mov	r0, r4
 8003e64:	b007      	add	sp, #28
 8003e66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003e6a:	bf00      	nop
 8003e6c:	08005654 	.word	0x08005654
 8003e70:	e890a001 	.word	0xe890a001
 8003e74:	08003d5f 	.word	0x08003d5f
 8003e78:	08005640 	.word	0x08005640
 8003e7c:	08003d49 	.word	0x08003d49
 8003e80:	08003d4f 	.word	0x08003d4f

08003e84 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 8003e84:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003e88:	4605      	mov	r5, r0
 8003e8a:	4688      	mov	r8, r1
 8003e8c:	f855 3b4c 	ldr.w	r3, [r5], #76
 8003e90:	681b      	ldr	r3, [r3, #0]
 8003e92:	4604      	mov	r4, r0
 8003e94:	4616      	mov	r6, r2
 8003e96:	4798      	blx	r3
 8003e98:	f7fd f9cc 	bl	8001234 <core_util_critical_section_enter>
 8003e9c:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8003ea0:	0130      	lsls	r0, r6, #4
 8003ea2:	b197      	cbz	r7, 8003eca <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8003ea4:	3098      	adds	r0, #152	; 0x98
 8003ea6:	4641      	mov	r1, r8
 8003ea8:	4420      	add	r0, r4
 8003eaa:	f7ff feeb 	bl	8003c84 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8003eae:	2201      	movs	r2, #1
 8003eb0:	4631      	mov	r1, r6
 8003eb2:	4628      	mov	r0, r5
 8003eb4:	f7ff f84a 	bl	8002f4c <serial_irq_set>
 8003eb8:	f7fd f9d2 	bl	8001260 <core_util_critical_section_exit>
 8003ebc:	6823      	ldr	r3, [r4, #0]
 8003ebe:	4620      	mov	r0, r4
 8003ec0:	685b      	ldr	r3, [r3, #4]
 8003ec2:	4798      	blx	r3
 8003ec4:	b004      	add	sp, #16
 8003ec6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003eca:	4b07      	ldr	r3, [pc, #28]	; (8003ee8 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8003ecc:	9300      	str	r3, [sp, #0]
 8003ece:	3098      	adds	r0, #152	; 0x98
 8003ed0:	4b06      	ldr	r3, [pc, #24]	; (8003eec <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 8003ed2:	9303      	str	r3, [sp, #12]
 8003ed4:	4669      	mov	r1, sp
 8003ed6:	4420      	add	r0, r4
 8003ed8:	f7ff fed4 	bl	8003c84 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8003edc:	4668      	mov	r0, sp
 8003ede:	f7fc ff3c 	bl	8000d5a <mbed::Callback<void ()>::~Callback()>
 8003ee2:	463a      	mov	r2, r7
 8003ee4:	e7e4      	b.n	8003eb0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 8003ee6:	bf00      	nop
 8003ee8:	08003d49 	.word	0x08003d49
 8003eec:	08005640 	.word	0x08005640

08003ef0 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 8003ef0:	b538      	push	{r3, r4, r5, lr}
 8003ef2:	4604      	mov	r4, r0
 8003ef4:	b148      	cbz	r0, 8003f0a <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8003ef6:	3058      	adds	r0, #88	; 0x58
 8003ef8:	42a0      	cmp	r0, r4
 8003efa:	d006      	beq.n	8003f0a <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8003efc:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 8003f00:	3814      	subs	r0, #20
 8003f02:	f7fc ff64 	bl	8000dce <mbed::Callback<void (int)>::~Callback()>
 8003f06:	4628      	mov	r0, r5
 8003f08:	e7f6      	b.n	8003ef8 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 8003f0a:	4620      	mov	r0, r4
 8003f0c:	bd38      	pop	{r3, r4, r5, pc}
	...

08003f10 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 8003f10:	b570      	push	{r4, r5, r6, lr}
 8003f12:	4c0e      	ldr	r4, [pc, #56]	; (8003f4c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8003f14:	4620      	mov	r0, r4
 8003f16:	2500      	movs	r5, #0
 8003f18:	2628      	movs	r6, #40	; 0x28
 8003f1a:	4632      	mov	r2, r6
 8003f1c:	4629      	mov	r1, r5
 8003f1e:	f840 5b04 	str.w	r5, [r0], #4
 8003f22:	f000 fc8a 	bl	800483a <memset>
 8003f26:	4632      	mov	r2, r6
 8003f28:	4629      	mov	r1, r5
 8003f2a:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8003f2e:	62e5      	str	r5, [r4, #44]	; 0x2c
 8003f30:	f000 fc83 	bl	800483a <memset>
 8003f34:	65a5      	str	r5, [r4, #88]	; 0x58
 8003f36:	4620      	mov	r0, r4
 8003f38:	65e5      	str	r5, [r4, #92]	; 0x5c
 8003f3a:	4a05      	ldr	r2, [pc, #20]	; (8003f50 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8003f3c:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8003f40:	4904      	ldr	r1, [pc, #16]	; (8003f54 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 8003f42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003f46:	f000 b927 	b.w	8004198 <__aeabi_atexit>
 8003f4a:	bf00      	nop
 8003f4c:	20001b5c 	.word	0x20001b5c
 8003f50:	20000194 	.word	0x20000194
 8003f54:	08003ef1 	.word	0x08003ef1

08003f58 <__wrap__malloc_r>:
 8003f58:	f000 bcc6 	b.w	80048e8 <_malloc_r>

08003f5c <__wrap__realloc_r>:
 8003f5c:	f000 bd22 	b.w	80049a4 <_realloc_r>

08003f60 <__wrap__free_r>:
 8003f60:	f000 bc74 	b.w	800484c <_free_r>

08003f64 <wait_us>:
 8003f64:	b570      	push	{r4, r5, r6, lr}
 8003f66:	4605      	mov	r5, r0
 8003f68:	f7fe fdac 	bl	8002ac4 <us_ticker_read>
 8003f6c:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8003f70:	fb95 f4f4 	sdiv	r4, r5, r4
 8003f74:	2c00      	cmp	r4, #0
 8003f76:	4606      	mov	r6, r0
 8003f78:	dd02      	ble.n	8003f80 <wait_us+0x1c>
 8003f7a:	f7fd f955 	bl	8001228 <core_util_are_interrupts_enabled>
 8003f7e:	b928      	cbnz	r0, 8003f8c <wait_us+0x28>
 8003f80:	f7fe fda0 	bl	8002ac4 <us_ticker_read>
 8003f84:	1b80      	subs	r0, r0, r6
 8003f86:	42a8      	cmp	r0, r5
 8003f88:	d3fa      	bcc.n	8003f80 <wait_us+0x1c>
 8003f8a:	bd70      	pop	{r4, r5, r6, pc}
 8003f8c:	4620      	mov	r0, r4
 8003f8e:	f000 f92b 	bl	80041e8 <rtos::Thread::wait(unsigned long)>
 8003f92:	e7f5      	b.n	8003f80 <wait_us+0x1c>

08003f94 <wait_ms>:
 8003f94:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003f98:	4358      	muls	r0, r3
 8003f9a:	f7ff bfe3 	b.w	8003f64 <wait_us>
	...

08003fa0 <init_serial()>:
 8003fa0:	b508      	push	{r3, lr}
 8003fa2:	4b08      	ldr	r3, [pc, #32]	; (8003fc4 <init_serial()+0x24>)
 8003fa4:	681b      	ldr	r3, [r3, #0]
 8003fa6:	b95b      	cbnz	r3, 8003fc0 <init_serial()+0x20>
 8003fa8:	2102      	movs	r1, #2
 8003faa:	4807      	ldr	r0, [pc, #28]	; (8003fc8 <init_serial()+0x28>)
 8003fac:	2203      	movs	r2, #3
 8003fae:	f7fe ff1f 	bl	8002df0 <serial_init>
 8003fb2:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8003fb6:	4804      	ldr	r0, [pc, #16]	; (8003fc8 <init_serial()+0x28>)
 8003fb8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003fbc:	f7fe bfb6 	b.w	8002f2c <serial_baud>
 8003fc0:	bd08      	pop	{r3, pc}
 8003fc2:	bf00      	nop
 8003fc4:	20001958 	.word	0x20001958
 8003fc8:	20002774 	.word	0x20002774

08003fcc <_close>:
 8003fcc:	2802      	cmp	r0, #2
 8003fce:	b510      	push	{r4, lr}
 8003fd0:	4604      	mov	r4, r0
 8003fd2:	dc01      	bgt.n	8003fd8 <_close+0xc>
 8003fd4:	2000      	movs	r0, #0
 8003fd6:	bd10      	pop	{r4, pc}
 8003fd8:	f000 f9f0 	bl	80043bc <__errno>
 8003fdc:	2309      	movs	r3, #9
 8003fde:	6003      	str	r3, [r0, #0]
 8003fe0:	3c03      	subs	r4, #3
 8003fe2:	4b09      	ldr	r3, [pc, #36]	; (8004008 <_close+0x3c>)
 8003fe4:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8003fe8:	2200      	movs	r2, #0
 8003fea:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8003fee:	b140      	cbz	r0, 8004002 <_close+0x36>
 8003ff0:	6803      	ldr	r3, [r0, #0]
 8003ff2:	691b      	ldr	r3, [r3, #16]
 8003ff4:	4798      	blx	r3
 8003ff6:	1e04      	subs	r4, r0, #0
 8003ff8:	daec      	bge.n	8003fd4 <_close+0x8>
 8003ffa:	f000 f9df 	bl	80043bc <__errno>
 8003ffe:	4264      	negs	r4, r4
 8004000:	6004      	str	r4, [r0, #0]
 8004002:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004006:	bd10      	pop	{r4, pc}
 8004008:	20001bc0 	.word	0x20001bc0

0800400c <_write>:
 800400c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800400e:	4605      	mov	r5, r0
 8004010:	460e      	mov	r6, r1
 8004012:	4614      	mov	r4, r2
 8004014:	f000 f9d2 	bl	80043bc <__errno>
 8004018:	2309      	movs	r3, #9
 800401a:	2d02      	cmp	r5, #2
 800401c:	6003      	str	r3, [r0, #0]
 800401e:	dc0f      	bgt.n	8004040 <_write+0x34>
 8004020:	4b12      	ldr	r3, [pc, #72]	; (800406c <_write+0x60>)
 8004022:	681b      	ldr	r3, [r3, #0]
 8004024:	b90b      	cbnz	r3, 800402a <_write+0x1e>
 8004026:	f7ff ffbb 	bl	8003fa0 <init_serial()>
 800402a:	4635      	mov	r5, r6
 800402c:	1937      	adds	r7, r6, r4
 800402e:	4e10      	ldr	r6, [pc, #64]	; (8004070 <_write+0x64>)
 8004030:	42bd      	cmp	r5, r7
 8004032:	d015      	beq.n	8004060 <_write+0x54>
 8004034:	f815 1b01 	ldrb.w	r1, [r5], #1
 8004038:	4630      	mov	r0, r6
 800403a:	f7fe fff9 	bl	8003030 <serial_putc>
 800403e:	e7f7      	b.n	8004030 <_write+0x24>
 8004040:	3d03      	subs	r5, #3
 8004042:	4b0c      	ldr	r3, [pc, #48]	; (8004074 <_write+0x68>)
 8004044:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004048:	b160      	cbz	r0, 8004064 <_write+0x58>
 800404a:	6803      	ldr	r3, [r0, #0]
 800404c:	4622      	mov	r2, r4
 800404e:	68db      	ldr	r3, [r3, #12]
 8004050:	4631      	mov	r1, r6
 8004052:	4798      	blx	r3
 8004054:	1e04      	subs	r4, r0, #0
 8004056:	da03      	bge.n	8004060 <_write+0x54>
 8004058:	f000 f9b0 	bl	80043bc <__errno>
 800405c:	4263      	negs	r3, r4
 800405e:	6003      	str	r3, [r0, #0]
 8004060:	4620      	mov	r0, r4
 8004062:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004064:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8004068:	e7fa      	b.n	8004060 <_write+0x54>
 800406a:	bf00      	nop
 800406c:	20001958 	.word	0x20001958
 8004070:	20002774 	.word	0x20002774
 8004074:	20001bc0 	.word	0x20001bc0

08004078 <_read>:
 8004078:	b570      	push	{r4, r5, r6, lr}
 800407a:	4604      	mov	r4, r0
 800407c:	460d      	mov	r5, r1
 800407e:	4616      	mov	r6, r2
 8004080:	f000 f99c 	bl	80043bc <__errno>
 8004084:	2309      	movs	r3, #9
 8004086:	2c02      	cmp	r4, #2
 8004088:	6003      	str	r3, [r0, #0]
 800408a:	dc0b      	bgt.n	80040a4 <_read+0x2c>
 800408c:	4b0f      	ldr	r3, [pc, #60]	; (80040cc <_read+0x54>)
 800408e:	681b      	ldr	r3, [r3, #0]
 8004090:	b90b      	cbnz	r3, 8004096 <_read+0x1e>
 8004092:	f7ff ff85 	bl	8003fa0 <init_serial()>
 8004096:	480e      	ldr	r0, [pc, #56]	; (80040d0 <_read+0x58>)
 8004098:	f7fe ffae 	bl	8002ff8 <serial_getc>
 800409c:	2401      	movs	r4, #1
 800409e:	7028      	strb	r0, [r5, #0]
 80040a0:	4620      	mov	r0, r4
 80040a2:	bd70      	pop	{r4, r5, r6, pc}
 80040a4:	3c03      	subs	r4, #3
 80040a6:	4b0b      	ldr	r3, [pc, #44]	; (80040d4 <_read+0x5c>)
 80040a8:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80040ac:	b158      	cbz	r0, 80040c6 <_read+0x4e>
 80040ae:	6803      	ldr	r3, [r0, #0]
 80040b0:	4632      	mov	r2, r6
 80040b2:	689b      	ldr	r3, [r3, #8]
 80040b4:	4629      	mov	r1, r5
 80040b6:	4798      	blx	r3
 80040b8:	1e04      	subs	r4, r0, #0
 80040ba:	daf1      	bge.n	80040a0 <_read+0x28>
 80040bc:	f000 f97e 	bl	80043bc <__errno>
 80040c0:	4263      	negs	r3, r4
 80040c2:	6003      	str	r3, [r0, #0]
 80040c4:	e7ec      	b.n	80040a0 <_read+0x28>
 80040c6:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80040ca:	e7e9      	b.n	80040a0 <_read+0x28>
 80040cc:	20001958 	.word	0x20001958
 80040d0:	20002774 	.word	0x20002774
 80040d4:	20001bc0 	.word	0x20001bc0

080040d8 <_lseek>:
 80040d8:	b570      	push	{r4, r5, r6, lr}
 80040da:	4604      	mov	r4, r0
 80040dc:	460d      	mov	r5, r1
 80040de:	4616      	mov	r6, r2
 80040e0:	f000 f96c 	bl	80043bc <__errno>
 80040e4:	2309      	movs	r3, #9
 80040e6:	2c02      	cmp	r4, #2
 80040e8:	6003      	str	r3, [r0, #0]
 80040ea:	dd0b      	ble.n	8004104 <_lseek+0x2c>
 80040ec:	3c03      	subs	r4, #3
 80040ee:	4b08      	ldr	r3, [pc, #32]	; (8004110 <_lseek+0x38>)
 80040f0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80040f4:	b140      	cbz	r0, 8004108 <_lseek+0x30>
 80040f6:	6803      	ldr	r3, [r0, #0]
 80040f8:	4632      	mov	r2, r6
 80040fa:	4629      	mov	r1, r5
 80040fc:	69db      	ldr	r3, [r3, #28]
 80040fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004102:	4718      	bx	r3
 8004104:	2000      	movs	r0, #0
 8004106:	bd70      	pop	{r4, r5, r6, pc}
 8004108:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800410c:	bd70      	pop	{r4, r5, r6, pc}
 800410e:	bf00      	nop
 8004110:	20001bc0 	.word	0x20001bc0

08004114 <software_init_hook>:
 8004114:	b508      	push	{r3, lr}
 8004116:	f7fe ff9d 	bl	8003054 <mbed_sdk_init>
 800411a:	f7fd f933 	bl	8001384 <software_init_hook_rtos>
 800411e:	bd08      	pop	{r3, pc}

08004120 <mbed_main>:
 8004120:	4770      	bx	lr

08004122 <__wrap_main>:
 8004122:	b508      	push	{r3, lr}
 8004124:	f7ff fffc 	bl	8004120 <mbed_main>
 8004128:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800412c:	f7fc bd28 	b.w	8000b80 <main>

08004130 <_sbrk>:
 8004130:	4a0c      	ldr	r2, [pc, #48]	; (8004164 <_sbrk+0x34>)
 8004132:	6813      	ldr	r3, [r2, #0]
 8004134:	b510      	push	{r4, lr}
 8004136:	4418      	add	r0, r3
 8004138:	f3ef 8108 	mrs	r1, MSP
 800413c:	4288      	cmp	r0, r1
 800413e:	d305      	bcc.n	800414c <_sbrk+0x1c>
 8004140:	4b09      	ldr	r3, [pc, #36]	; (8004168 <_sbrk+0x38>)
 8004142:	220c      	movs	r2, #12
 8004144:	601a      	str	r2, [r3, #0]
 8004146:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800414a:	bd10      	pop	{r4, pc}
 800414c:	4907      	ldr	r1, [pc, #28]	; (800416c <_sbrk+0x3c>)
 800414e:	680c      	ldr	r4, [r1, #0]
 8004150:	b124      	cbz	r4, 800415c <_sbrk+0x2c>
 8004152:	4907      	ldr	r1, [pc, #28]	; (8004170 <_sbrk+0x40>)
 8004154:	6809      	ldr	r1, [r1, #0]
 8004156:	4421      	add	r1, r4
 8004158:	4288      	cmp	r0, r1
 800415a:	d2f1      	bcs.n	8004140 <_sbrk+0x10>
 800415c:	6010      	str	r0, [r2, #0]
 800415e:	4618      	mov	r0, r3
 8004160:	bd10      	pop	{r4, pc}
 8004162:	bf00      	nop
 8004164:	200001b4 	.word	0x200001b4
 8004168:	200027c4 	.word	0x200027c4
 800416c:	20001cc0 	.word	0x20001cc0
 8004170:	20001cc4 	.word	0x20001cc4

08004174 <_exit>:
 8004174:	4c07      	ldr	r4, [pc, #28]	; (8004194 <_exit+0x20>)
 8004176:	b508      	push	{r3, lr}
 8004178:	6823      	ldr	r3, [r4, #0]
 800417a:	4605      	mov	r5, r0
 800417c:	6898      	ldr	r0, [r3, #8]
 800417e:	f000 f9d5 	bl	800452c <fflush>
 8004182:	6823      	ldr	r3, [r4, #0]
 8004184:	68d8      	ldr	r0, [r3, #12]
 8004186:	f000 f9d1 	bl	800452c <fflush>
 800418a:	b10d      	cbz	r5, 8004190 <_exit+0x1c>
 800418c:	f7fd f87c 	bl	8001288 <mbed_die>
 8004190:	e7fe      	b.n	8004190 <_exit+0x1c>
 8004192:	bf00      	nop
 8004194:	200001b8 	.word	0x200001b8

08004198 <__aeabi_atexit>:
 8004198:	2001      	movs	r0, #1
 800419a:	4770      	bx	lr

0800419c <__wrap_exit>:
 800419c:	b508      	push	{r3, lr}
 800419e:	f7ff ffe9 	bl	8004174 <_exit>

080041a2 <__malloc_lock>:
 80041a2:	b508      	push	{r3, lr}
 80041a4:	f7fd f8fc 	bl	80013a0 <__rtos_malloc_lock>
 80041a8:	bd08      	pop	{r3, pc}

080041aa <__malloc_unlock>:
 80041aa:	b508      	push	{r3, lr}
 80041ac:	f7fd f900 	bl	80013b0 <__rtos_malloc_unlock>
 80041b0:	bd08      	pop	{r3, pc}
	...

080041b4 <operator new[](unsigned int)>:
 80041b4:	b510      	push	{r4, lr}
 80041b6:	f000 fab9 	bl	800472c <malloc>
 80041ba:	4604      	mov	r4, r0
 80041bc:	b910      	cbnz	r0, 80041c4 <operator new[](unsigned int)+0x10>
 80041be:	4802      	ldr	r0, [pc, #8]	; (80041c8 <operator new[](unsigned int)+0x14>)
 80041c0:	f7fd f878 	bl	80012b4 <error>
 80041c4:	4620      	mov	r0, r4
 80041c6:	bd10      	pop	{r4, pc}
 80041c8:	08005664 	.word	0x08005664

080041cc <operator delete[](void*)>:
 80041cc:	b108      	cbz	r0, 80041d2 <operator delete[](void*)+0x6>
 80041ce:	f000 bab5 	b.w	800473c <free>
 80041d2:	4770      	bx	lr

080041d4 <operator delete(void*)>:
 80041d4:	f7ff bffa 	b.w	80041cc <operator delete[](void*)>

080041d8 <thread_terminate_hook>:
 80041d8:	4b02      	ldr	r3, [pc, #8]	; (80041e4 <thread_terminate_hook+0xc>)
 80041da:	681b      	ldr	r3, [r3, #0]
 80041dc:	b103      	cbz	r3, 80041e0 <thread_terminate_hook+0x8>
 80041de:	4718      	bx	r3
 80041e0:	4770      	bx	lr
 80041e2:	bf00      	nop
 80041e4:	20001cc8 	.word	0x20001cc8

080041e8 <rtos::Thread::wait(unsigned long)>:
 80041e8:	f7fd bdb0 	b.w	8001d4c <osDelay>

080041ec <rt_set_PSP>:
 80041ec:	f380 8809 	msr	PSP, r0
 80041f0:	4770      	bx	lr

080041f2 <rt_get_PSP>:
 80041f2:	f3ef 8009 	mrs	r0, PSP
 80041f6:	4770      	bx	lr

080041f8 <os_set_env>:
 80041f8:	4668      	mov	r0, sp
 80041fa:	f380 8809 	msr	PSP, r0
 80041fe:	485a      	ldr	r0, [pc, #360]	; (8004368 <OS_Tick_Handler+0x10>)
 8004200:	7800      	ldrb	r0, [r0, #0]
 8004202:	07c0      	lsls	r0, r0, #31
 8004204:	bf14      	ite	ne
 8004206:	2002      	movne	r0, #2
 8004208:	2003      	moveq	r0, #3
 800420a:	f380 8814 	msr	CONTROL, r0
 800420e:	4770      	bx	lr

08004210 <_alloc_box>:
 8004210:	f8df c158 	ldr.w	r12, [pc, #344]	; 800436c <OS_Tick_Handler+0x14>
 8004214:	f3ef 8305 	mrs	r3, IPSR
 8004218:	061b      	lsls	r3, r3, #24
 800421a:	bf18      	it	ne
 800421c:	4760      	bxne	r12
 800421e:	f3ef 8314 	mrs	r3, CONTROL
 8004222:	07db      	lsls	r3, r3, #31
 8004224:	bf08      	it	eq
 8004226:	4760      	bxeq	r12
 8004228:	df00      	svc	0
 800422a:	4770      	bx	lr

0800422c <_free_box>:
 800422c:	f8df c140 	ldr.w	r12, [pc, #320]	; 8004370 <OS_Tick_Handler+0x18>
 8004230:	f3ef 8305 	mrs	r3, IPSR
 8004234:	061b      	lsls	r3, r3, #24
 8004236:	bf18      	it	ne
 8004238:	4760      	bxne	r12
 800423a:	f3ef 8314 	mrs	r3, CONTROL
 800423e:	07db      	lsls	r3, r3, #31
 8004240:	bf08      	it	eq
 8004242:	4760      	bxeq	r12
 8004244:	df00      	svc	0
 8004246:	4770      	bx	lr

08004248 <SVC_Handler>:
 8004248:	f3ef 8009 	mrs	r0, PSP
 800424c:	6981      	ldr	r1, [r0, #24]
 800424e:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 8004252:	bbe1      	cbnz	r1, 80042ce <SVC_User>
 8004254:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8004258:	b510      	push	{r4, lr}
 800425a:	47e0      	blx	r12
 800425c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004260:	f3ef 8c09 	mrs	r12, PSP
 8004264:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 8004268:	4b42      	ldr	r3, [pc, #264]	; (8004374 <OS_Tick_Handler+0x1c>)
 800426a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800426e:	4291      	cmp	r1, r2
 8004270:	bf08      	it	eq
 8004272:	4770      	bxeq	lr
 8004274:	b941      	cbnz	r1, 8004288 <SVC_ContextSave>
 8004276:	f01e 0f10 	tst.w	lr, #16
 800427a:	d116      	bne.n	80042aa <SVC_ContextRestore>
 800427c:	493e      	ldr	r1, [pc, #248]	; (8004378 <OS_Tick_Handler+0x20>)
 800427e:	6808      	ldr	r0, [r1, #0]
 8004280:	f020 0001 	bic.w	r0, r0, #1
 8004284:	6008      	str	r0, [r1, #0]
 8004286:	e010      	b.n	80042aa <SVC_ContextRestore>

08004288 <SVC_ContextSave>:
 8004288:	f01e 0f10 	tst.w	lr, #16
 800428c:	bf06      	itte	eq
 800428e:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8004292:	2001      	moveq	r0, #1
 8004294:	2000      	movne	r0, #0
 8004296:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 800429a:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 800429e:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 80042a2:	b40c      	push	{r2, r3}
 80042a4:	f7fd fa08 	bl	80016b8 <rt_stk_check>
 80042a8:	bc0c      	pop	{r2, r3}

080042aa <SVC_ContextRestore>:
 80042aa:	601a      	str	r2, [r3, #0]
 80042ac:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 80042b0:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80042b4:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 80042b8:	2800      	cmp	r0, #0
 80042ba:	bf0e      	itee	eq
 80042bc:	f06f 0e02 	mvneq.w	lr, #2
 80042c0:	f06f 0e12 	mvnne.w	lr, #18
 80042c4:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 80042c8:	f38c 8809 	msr	PSP, r12

080042cc <SVC_Exit>:
 80042cc:	4770      	bx	lr

080042ce <SVC_User>:
 80042ce:	b510      	push	{r4, lr}
 80042d0:	4a2a      	ldr	r2, [pc, #168]	; (800437c <OS_Tick_Handler+0x24>)
 80042d2:	6812      	ldr	r2, [r2, #0]
 80042d4:	4291      	cmp	r1, r2
 80042d6:	d809      	bhi.n	80042ec <SVC_Done>
 80042d8:	4c29      	ldr	r4, [pc, #164]	; (8004380 <OS_Tick_Handler+0x28>)
 80042da:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 80042de:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 80042e2:	47a0      	blx	r4
 80042e4:	f3ef 8c09 	mrs	r12, PSP
 80042e8:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

080042ec <SVC_Done>:
 80042ec:	bd10      	pop	{r4, pc}

080042ee <PendSV_Handler>:
 80042ee:	b510      	push	{r4, lr}
 80042f0:	f7fd f96e 	bl	80015d0 <rt_pop_req>

080042f4 <Sys_Switch>:
 80042f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80042f8:	4b1e      	ldr	r3, [pc, #120]	; (8004374 <OS_Tick_Handler+0x1c>)
 80042fa:	e893 0006 	ldmia.w	r3, {r1, r2}
 80042fe:	4291      	cmp	r1, r2
 8004300:	bf08      	it	eq
 8004302:	4770      	bxeq	lr
 8004304:	f3ef 8c09 	mrs	r12, PSP
 8004308:	f01e 0f10 	tst.w	lr, #16
 800430c:	bf06      	itte	eq
 800430e:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8004312:	2001      	moveq	r0, #1
 8004314:	2000      	movne	r0, #0
 8004316:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 800431a:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 800431e:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8004322:	b40c      	push	{r2, r3}
 8004324:	f7fd f9c8 	bl	80016b8 <rt_stk_check>
 8004328:	bc0c      	pop	{r2, r3}
 800432a:	601a      	str	r2, [r3, #0]
 800432c:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8004330:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8004334:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8004338:	2800      	cmp	r0, #0
 800433a:	bf0e      	itee	eq
 800433c:	f06f 0e02 	mvneq.w	lr, #2
 8004340:	f06f 0e12 	mvnne.w	lr, #18
 8004344:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8004348:	f38c 8809 	msr	PSP, r12

0800434c <Sys_Exit>:
 800434c:	4770      	bx	lr

0800434e <SysTick_Handler>:
 800434e:	b510      	push	{r4, lr}
 8004350:	f7fd f994 	bl	800167c <rt_systick>
 8004354:	f7ff bfce 	b.w	80042f4 <Sys_Switch>

08004358 <OS_Tick_Handler>:
 8004358:	b510      	push	{r4, lr}
 800435a:	f7fd f98d 	bl	8001678 <os_tick_irqack>
 800435e:	f7fd f98d 	bl	800167c <rt_systick>
 8004362:	f7ff bfc7 	b.w	80042f4 <Sys_Switch>
 8004366:	0000      	.short	0x0000
 8004368:	080054be 	.word	0x080054be
 800436c:	080017e7 	.word	0x080017e7
 8004370:	08001801 	.word	0x08001801
 8004374:	200026ec 	.word	0x200026ec
 8004378:	e000ef34 	.word	0xe000ef34
 800437c:	00000000 	.word	0x00000000
 8004380:	fffffffc 	.word	0xfffffffc

08004384 <Reset_Handler>:
 8004384:	f8df d020 	ldr.w	sp, [pc, #32]	; 80043a8 <LoopCopyDataInit+0x14>
 8004388:	2100      	movs	r1, #0
 800438a:	e003      	b.n	8004394 <LoopCopyDataInit>

0800438c <CopyDataInit>:
 800438c:	4b07      	ldr	r3, [pc, #28]	; (80043ac <LoopCopyDataInit+0x18>)
 800438e:	585b      	ldr	r3, [r3, r1]
 8004390:	5043      	str	r3, [r0, r1]
 8004392:	3104      	adds	r1, #4

08004394 <LoopCopyDataInit>:
 8004394:	4806      	ldr	r0, [pc, #24]	; (80043b0 <LoopCopyDataInit+0x1c>)
 8004396:	4b07      	ldr	r3, [pc, #28]	; (80043b4 <LoopCopyDataInit+0x20>)
 8004398:	1842      	adds	r2, r0, r1
 800439a:	429a      	cmp	r2, r3
 800439c:	d3f6      	bcc.n	800438c <CopyDataInit>
 800439e:	f7fe ff37 	bl	8003210 <SystemInit>
 80043a2:	f7fc fc85 	bl	8000cb0 <_start>
 80043a6:	4770      	bx	lr
 80043a8:	20018000 	.word	0x20018000
 80043ac:	08005728 	.word	0x08005728
 80043b0:	20000194 	.word	0x20000194
 80043b4:	20000230 	.word	0x20000230

080043b8 <ADC_IRQHandler>:
 80043b8:	e7fe      	b.n	80043b8 <ADC_IRQHandler>
	...

080043bc <__errno>:
 80043bc:	4b01      	ldr	r3, [pc, #4]	; (80043c4 <__errno+0x8>)
 80043be:	6818      	ldr	r0, [r3, #0]
 80043c0:	4770      	bx	lr
 80043c2:	bf00      	nop
 80043c4:	200001b8 	.word	0x200001b8

080043c8 <__sflush_r>:
 80043c8:	898a      	ldrh	r2, [r1, #12]
 80043ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80043ce:	4605      	mov	r5, r0
 80043d0:	0710      	lsls	r0, r2, #28
 80043d2:	460c      	mov	r4, r1
 80043d4:	d45a      	bmi.n	800448c <__sflush_r+0xc4>
 80043d6:	684b      	ldr	r3, [r1, #4]
 80043d8:	2b00      	cmp	r3, #0
 80043da:	dc05      	bgt.n	80043e8 <__sflush_r+0x20>
 80043dc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80043de:	2b00      	cmp	r3, #0
 80043e0:	dc02      	bgt.n	80043e8 <__sflush_r+0x20>
 80043e2:	2000      	movs	r0, #0
 80043e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80043e8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80043ea:	2e00      	cmp	r6, #0
 80043ec:	d0f9      	beq.n	80043e2 <__sflush_r+0x1a>
 80043ee:	2300      	movs	r3, #0
 80043f0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80043f4:	682f      	ldr	r7, [r5, #0]
 80043f6:	602b      	str	r3, [r5, #0]
 80043f8:	d033      	beq.n	8004462 <__sflush_r+0x9a>
 80043fa:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80043fc:	89a3      	ldrh	r3, [r4, #12]
 80043fe:	075a      	lsls	r2, r3, #29
 8004400:	d505      	bpl.n	800440e <__sflush_r+0x46>
 8004402:	6863      	ldr	r3, [r4, #4]
 8004404:	1ac0      	subs	r0, r0, r3
 8004406:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004408:	b10b      	cbz	r3, 800440e <__sflush_r+0x46>
 800440a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800440c:	1ac0      	subs	r0, r0, r3
 800440e:	2300      	movs	r3, #0
 8004410:	4602      	mov	r2, r0
 8004412:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004414:	6a21      	ldr	r1, [r4, #32]
 8004416:	4628      	mov	r0, r5
 8004418:	47b0      	blx	r6
 800441a:	1c43      	adds	r3, r0, #1
 800441c:	89a3      	ldrh	r3, [r4, #12]
 800441e:	d106      	bne.n	800442e <__sflush_r+0x66>
 8004420:	6829      	ldr	r1, [r5, #0]
 8004422:	291d      	cmp	r1, #29
 8004424:	d84b      	bhi.n	80044be <__sflush_r+0xf6>
 8004426:	4a2b      	ldr	r2, [pc, #172]	; (80044d4 <__sflush_r+0x10c>)
 8004428:	40ca      	lsrs	r2, r1
 800442a:	07d6      	lsls	r6, r2, #31
 800442c:	d547      	bpl.n	80044be <__sflush_r+0xf6>
 800442e:	2200      	movs	r2, #0
 8004430:	6062      	str	r2, [r4, #4]
 8004432:	04d9      	lsls	r1, r3, #19
 8004434:	6922      	ldr	r2, [r4, #16]
 8004436:	6022      	str	r2, [r4, #0]
 8004438:	d504      	bpl.n	8004444 <__sflush_r+0x7c>
 800443a:	1c42      	adds	r2, r0, #1
 800443c:	d101      	bne.n	8004442 <__sflush_r+0x7a>
 800443e:	682b      	ldr	r3, [r5, #0]
 8004440:	b903      	cbnz	r3, 8004444 <__sflush_r+0x7c>
 8004442:	6560      	str	r0, [r4, #84]	; 0x54
 8004444:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004446:	602f      	str	r7, [r5, #0]
 8004448:	2900      	cmp	r1, #0
 800444a:	d0ca      	beq.n	80043e2 <__sflush_r+0x1a>
 800444c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004450:	4299      	cmp	r1, r3
 8004452:	d002      	beq.n	800445a <__sflush_r+0x92>
 8004454:	4628      	mov	r0, r5
 8004456:	f7ff fd83 	bl	8003f60 <__wrap__free_r>
 800445a:	2000      	movs	r0, #0
 800445c:	6360      	str	r0, [r4, #52]	; 0x34
 800445e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004462:	6a21      	ldr	r1, [r4, #32]
 8004464:	2301      	movs	r3, #1
 8004466:	4628      	mov	r0, r5
 8004468:	47b0      	blx	r6
 800446a:	1c41      	adds	r1, r0, #1
 800446c:	d1c6      	bne.n	80043fc <__sflush_r+0x34>
 800446e:	682b      	ldr	r3, [r5, #0]
 8004470:	2b00      	cmp	r3, #0
 8004472:	d0c3      	beq.n	80043fc <__sflush_r+0x34>
 8004474:	2b1d      	cmp	r3, #29
 8004476:	d001      	beq.n	800447c <__sflush_r+0xb4>
 8004478:	2b16      	cmp	r3, #22
 800447a:	d101      	bne.n	8004480 <__sflush_r+0xb8>
 800447c:	602f      	str	r7, [r5, #0]
 800447e:	e7b0      	b.n	80043e2 <__sflush_r+0x1a>
 8004480:	89a3      	ldrh	r3, [r4, #12]
 8004482:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004486:	81a3      	strh	r3, [r4, #12]
 8004488:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800448c:	690f      	ldr	r7, [r1, #16]
 800448e:	2f00      	cmp	r7, #0
 8004490:	d0a7      	beq.n	80043e2 <__sflush_r+0x1a>
 8004492:	0793      	lsls	r3, r2, #30
 8004494:	680e      	ldr	r6, [r1, #0]
 8004496:	bf08      	it	eq
 8004498:	694b      	ldreq	r3, [r1, #20]
 800449a:	600f      	str	r7, [r1, #0]
 800449c:	bf18      	it	ne
 800449e:	2300      	movne	r3, #0
 80044a0:	eba6 0807 	sub.w	r8, r6, r7
 80044a4:	608b      	str	r3, [r1, #8]
 80044a6:	f1b8 0f00 	cmp.w	r8, #0
 80044aa:	dd9a      	ble.n	80043e2 <__sflush_r+0x1a>
 80044ac:	4643      	mov	r3, r8
 80044ae:	463a      	mov	r2, r7
 80044b0:	6a21      	ldr	r1, [r4, #32]
 80044b2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80044b4:	4628      	mov	r0, r5
 80044b6:	47b0      	blx	r6
 80044b8:	2800      	cmp	r0, #0
 80044ba:	dc07      	bgt.n	80044cc <__sflush_r+0x104>
 80044bc:	89a3      	ldrh	r3, [r4, #12]
 80044be:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80044c2:	81a3      	strh	r3, [r4, #12]
 80044c4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80044c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80044cc:	4407      	add	r7, r0
 80044ce:	eba8 0800 	sub.w	r8, r8, r0
 80044d2:	e7e8      	b.n	80044a6 <__sflush_r+0xde>
 80044d4:	20400001 	.word	0x20400001

080044d8 <_fflush_r>:
 80044d8:	b538      	push	{r3, r4, r5, lr}
 80044da:	690b      	ldr	r3, [r1, #16]
 80044dc:	4605      	mov	r5, r0
 80044de:	460c      	mov	r4, r1
 80044e0:	b1db      	cbz	r3, 800451a <_fflush_r+0x42>
 80044e2:	b118      	cbz	r0, 80044ec <_fflush_r+0x14>
 80044e4:	6983      	ldr	r3, [r0, #24]
 80044e6:	b90b      	cbnz	r3, 80044ec <_fflush_r+0x14>
 80044e8:	f000 f872 	bl	80045d0 <__sinit>
 80044ec:	4b0c      	ldr	r3, [pc, #48]	; (8004520 <_fflush_r+0x48>)
 80044ee:	429c      	cmp	r4, r3
 80044f0:	d109      	bne.n	8004506 <_fflush_r+0x2e>
 80044f2:	686c      	ldr	r4, [r5, #4]
 80044f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80044f8:	b17b      	cbz	r3, 800451a <_fflush_r+0x42>
 80044fa:	4621      	mov	r1, r4
 80044fc:	4628      	mov	r0, r5
 80044fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004502:	f7ff bf61 	b.w	80043c8 <__sflush_r>
 8004506:	4b07      	ldr	r3, [pc, #28]	; (8004524 <_fflush_r+0x4c>)
 8004508:	429c      	cmp	r4, r3
 800450a:	d101      	bne.n	8004510 <_fflush_r+0x38>
 800450c:	68ac      	ldr	r4, [r5, #8]
 800450e:	e7f1      	b.n	80044f4 <_fflush_r+0x1c>
 8004510:	4b05      	ldr	r3, [pc, #20]	; (8004528 <_fflush_r+0x50>)
 8004512:	429c      	cmp	r4, r3
 8004514:	bf08      	it	eq
 8004516:	68ec      	ldreq	r4, [r5, #12]
 8004518:	e7ec      	b.n	80044f4 <_fflush_r+0x1c>
 800451a:	2000      	movs	r0, #0
 800451c:	bd38      	pop	{r3, r4, r5, pc}
 800451e:	bf00      	nop
 8004520:	080056a4 	.word	0x080056a4
 8004524:	080056c4 	.word	0x080056c4
 8004528:	08005684 	.word	0x08005684

0800452c <fflush>:
 800452c:	4601      	mov	r1, r0
 800452e:	b920      	cbnz	r0, 800453a <fflush+0xe>
 8004530:	4b04      	ldr	r3, [pc, #16]	; (8004544 <fflush+0x18>)
 8004532:	4905      	ldr	r1, [pc, #20]	; (8004548 <fflush+0x1c>)
 8004534:	6818      	ldr	r0, [r3, #0]
 8004536:	f000 b8b7 	b.w	80046a8 <_fwalk_reent>
 800453a:	4b04      	ldr	r3, [pc, #16]	; (800454c <fflush+0x20>)
 800453c:	6818      	ldr	r0, [r3, #0]
 800453e:	f7ff bfcb 	b.w	80044d8 <_fflush_r>
 8004542:	bf00      	nop
 8004544:	080056e4 	.word	0x080056e4
 8004548:	080044d9 	.word	0x080044d9
 800454c:	200001b8 	.word	0x200001b8

08004550 <_cleanup_r>:
 8004550:	4901      	ldr	r1, [pc, #4]	; (8004558 <_cleanup_r+0x8>)
 8004552:	f000 b8a9 	b.w	80046a8 <_fwalk_reent>
 8004556:	bf00      	nop
 8004558:	080044d9 	.word	0x080044d9

0800455c <std.isra.0>:
 800455c:	2300      	movs	r3, #0
 800455e:	b510      	push	{r4, lr}
 8004560:	4604      	mov	r4, r0
 8004562:	6003      	str	r3, [r0, #0]
 8004564:	6043      	str	r3, [r0, #4]
 8004566:	6083      	str	r3, [r0, #8]
 8004568:	8181      	strh	r1, [r0, #12]
 800456a:	6643      	str	r3, [r0, #100]	; 0x64
 800456c:	81c2      	strh	r2, [r0, #14]
 800456e:	6103      	str	r3, [r0, #16]
 8004570:	6143      	str	r3, [r0, #20]
 8004572:	6183      	str	r3, [r0, #24]
 8004574:	4619      	mov	r1, r3
 8004576:	2208      	movs	r2, #8
 8004578:	305c      	adds	r0, #92	; 0x5c
 800457a:	f000 f95e 	bl	800483a <memset>
 800457e:	4b05      	ldr	r3, [pc, #20]	; (8004594 <std.isra.0+0x38>)
 8004580:	6263      	str	r3, [r4, #36]	; 0x24
 8004582:	4b05      	ldr	r3, [pc, #20]	; (8004598 <std.isra.0+0x3c>)
 8004584:	62a3      	str	r3, [r4, #40]	; 0x28
 8004586:	4b05      	ldr	r3, [pc, #20]	; (800459c <std.isra.0+0x40>)
 8004588:	62e3      	str	r3, [r4, #44]	; 0x2c
 800458a:	4b05      	ldr	r3, [pc, #20]	; (80045a0 <std.isra.0+0x44>)
 800458c:	6224      	str	r4, [r4, #32]
 800458e:	6323      	str	r3, [r4, #48]	; 0x30
 8004590:	bd10      	pop	{r4, pc}
 8004592:	bf00      	nop
 8004594:	08004d4d 	.word	0x08004d4d
 8004598:	08004d6f 	.word	0x08004d6f
 800459c:	08004da7 	.word	0x08004da7
 80045a0:	08004dcb 	.word	0x08004dcb

080045a4 <__sfmoreglue>:
 80045a4:	b570      	push	{r4, r5, r6, lr}
 80045a6:	1e4a      	subs	r2, r1, #1
 80045a8:	2568      	movs	r5, #104	; 0x68
 80045aa:	4355      	muls	r5, r2
 80045ac:	460e      	mov	r6, r1
 80045ae:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80045b2:	f7ff fcd1 	bl	8003f58 <__wrap__malloc_r>
 80045b6:	4604      	mov	r4, r0
 80045b8:	b140      	cbz	r0, 80045cc <__sfmoreglue+0x28>
 80045ba:	2100      	movs	r1, #0
 80045bc:	e880 0042 	stmia.w	r0, {r1, r6}
 80045c0:	300c      	adds	r0, #12
 80045c2:	60a0      	str	r0, [r4, #8]
 80045c4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80045c8:	f000 f937 	bl	800483a <memset>
 80045cc:	4620      	mov	r0, r4
 80045ce:	bd70      	pop	{r4, r5, r6, pc}

080045d0 <__sinit>:
 80045d0:	6983      	ldr	r3, [r0, #24]
 80045d2:	b510      	push	{r4, lr}
 80045d4:	4604      	mov	r4, r0
 80045d6:	bb33      	cbnz	r3, 8004626 <__sinit+0x56>
 80045d8:	6483      	str	r3, [r0, #72]	; 0x48
 80045da:	64c3      	str	r3, [r0, #76]	; 0x4c
 80045dc:	6503      	str	r3, [r0, #80]	; 0x50
 80045de:	4b12      	ldr	r3, [pc, #72]	; (8004628 <__sinit+0x58>)
 80045e0:	4a12      	ldr	r2, [pc, #72]	; (800462c <__sinit+0x5c>)
 80045e2:	681b      	ldr	r3, [r3, #0]
 80045e4:	6282      	str	r2, [r0, #40]	; 0x28
 80045e6:	4298      	cmp	r0, r3
 80045e8:	bf04      	itt	eq
 80045ea:	2301      	moveq	r3, #1
 80045ec:	6183      	streq	r3, [r0, #24]
 80045ee:	f000 f81f 	bl	8004630 <__sfp>
 80045f2:	6060      	str	r0, [r4, #4]
 80045f4:	4620      	mov	r0, r4
 80045f6:	f000 f81b 	bl	8004630 <__sfp>
 80045fa:	60a0      	str	r0, [r4, #8]
 80045fc:	4620      	mov	r0, r4
 80045fe:	f000 f817 	bl	8004630 <__sfp>
 8004602:	2200      	movs	r2, #0
 8004604:	60e0      	str	r0, [r4, #12]
 8004606:	2104      	movs	r1, #4
 8004608:	6860      	ldr	r0, [r4, #4]
 800460a:	f7ff ffa7 	bl	800455c <std.isra.0>
 800460e:	2201      	movs	r2, #1
 8004610:	2109      	movs	r1, #9
 8004612:	68a0      	ldr	r0, [r4, #8]
 8004614:	f7ff ffa2 	bl	800455c <std.isra.0>
 8004618:	2202      	movs	r2, #2
 800461a:	2112      	movs	r1, #18
 800461c:	68e0      	ldr	r0, [r4, #12]
 800461e:	f7ff ff9d 	bl	800455c <std.isra.0>
 8004622:	2301      	movs	r3, #1
 8004624:	61a3      	str	r3, [r4, #24]
 8004626:	bd10      	pop	{r4, pc}
 8004628:	080056e4 	.word	0x080056e4
 800462c:	08004551 	.word	0x08004551

08004630 <__sfp>:
 8004630:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004632:	4b1c      	ldr	r3, [pc, #112]	; (80046a4 <__sfp+0x74>)
 8004634:	681e      	ldr	r6, [r3, #0]
 8004636:	69b3      	ldr	r3, [r6, #24]
 8004638:	4607      	mov	r7, r0
 800463a:	b913      	cbnz	r3, 8004642 <__sfp+0x12>
 800463c:	4630      	mov	r0, r6
 800463e:	f7ff ffc7 	bl	80045d0 <__sinit>
 8004642:	3648      	adds	r6, #72	; 0x48
 8004644:	68b4      	ldr	r4, [r6, #8]
 8004646:	6873      	ldr	r3, [r6, #4]
 8004648:	3b01      	subs	r3, #1
 800464a:	d503      	bpl.n	8004654 <__sfp+0x24>
 800464c:	6833      	ldr	r3, [r6, #0]
 800464e:	b133      	cbz	r3, 800465e <__sfp+0x2e>
 8004650:	6836      	ldr	r6, [r6, #0]
 8004652:	e7f7      	b.n	8004644 <__sfp+0x14>
 8004654:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004658:	b16d      	cbz	r5, 8004676 <__sfp+0x46>
 800465a:	3468      	adds	r4, #104	; 0x68
 800465c:	e7f4      	b.n	8004648 <__sfp+0x18>
 800465e:	2104      	movs	r1, #4
 8004660:	4638      	mov	r0, r7
 8004662:	f7ff ff9f 	bl	80045a4 <__sfmoreglue>
 8004666:	6030      	str	r0, [r6, #0]
 8004668:	2800      	cmp	r0, #0
 800466a:	d1f1      	bne.n	8004650 <__sfp+0x20>
 800466c:	230c      	movs	r3, #12
 800466e:	603b      	str	r3, [r7, #0]
 8004670:	4604      	mov	r4, r0
 8004672:	4620      	mov	r0, r4
 8004674:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004676:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800467a:	81e3      	strh	r3, [r4, #14]
 800467c:	2301      	movs	r3, #1
 800467e:	81a3      	strh	r3, [r4, #12]
 8004680:	6665      	str	r5, [r4, #100]	; 0x64
 8004682:	6025      	str	r5, [r4, #0]
 8004684:	60a5      	str	r5, [r4, #8]
 8004686:	6065      	str	r5, [r4, #4]
 8004688:	6125      	str	r5, [r4, #16]
 800468a:	6165      	str	r5, [r4, #20]
 800468c:	61a5      	str	r5, [r4, #24]
 800468e:	2208      	movs	r2, #8
 8004690:	4629      	mov	r1, r5
 8004692:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8004696:	f000 f8d0 	bl	800483a <memset>
 800469a:	6365      	str	r5, [r4, #52]	; 0x34
 800469c:	63a5      	str	r5, [r4, #56]	; 0x38
 800469e:	64a5      	str	r5, [r4, #72]	; 0x48
 80046a0:	64e5      	str	r5, [r4, #76]	; 0x4c
 80046a2:	e7e6      	b.n	8004672 <__sfp+0x42>
 80046a4:	080056e4 	.word	0x080056e4

080046a8 <_fwalk_reent>:
 80046a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80046ac:	4680      	mov	r8, r0
 80046ae:	4689      	mov	r9, r1
 80046b0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80046b4:	2600      	movs	r6, #0
 80046b6:	b914      	cbnz	r4, 80046be <_fwalk_reent+0x16>
 80046b8:	4630      	mov	r0, r6
 80046ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80046be:	68a5      	ldr	r5, [r4, #8]
 80046c0:	6867      	ldr	r7, [r4, #4]
 80046c2:	3f01      	subs	r7, #1
 80046c4:	d501      	bpl.n	80046ca <_fwalk_reent+0x22>
 80046c6:	6824      	ldr	r4, [r4, #0]
 80046c8:	e7f5      	b.n	80046b6 <_fwalk_reent+0xe>
 80046ca:	89ab      	ldrh	r3, [r5, #12]
 80046cc:	2b01      	cmp	r3, #1
 80046ce:	d907      	bls.n	80046e0 <_fwalk_reent+0x38>
 80046d0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80046d4:	3301      	adds	r3, #1
 80046d6:	d003      	beq.n	80046e0 <_fwalk_reent+0x38>
 80046d8:	4629      	mov	r1, r5
 80046da:	4640      	mov	r0, r8
 80046dc:	47c8      	blx	r9
 80046de:	4306      	orrs	r6, r0
 80046e0:	3568      	adds	r5, #104	; 0x68
 80046e2:	e7ee      	b.n	80046c2 <_fwalk_reent+0x1a>

080046e4 <__libc_init_array>:
 80046e4:	b570      	push	{r4, r5, r6, lr}
 80046e6:	4e0d      	ldr	r6, [pc, #52]	; (800471c <__libc_init_array+0x38>)
 80046e8:	4c0d      	ldr	r4, [pc, #52]	; (8004720 <__libc_init_array+0x3c>)
 80046ea:	1ba4      	subs	r4, r4, r6
 80046ec:	10a4      	asrs	r4, r4, #2
 80046ee:	2500      	movs	r5, #0
 80046f0:	42a5      	cmp	r5, r4
 80046f2:	d109      	bne.n	8004708 <__libc_init_array+0x24>
 80046f4:	4e0b      	ldr	r6, [pc, #44]	; (8004724 <__libc_init_array+0x40>)
 80046f6:	4c0c      	ldr	r4, [pc, #48]	; (8004728 <__libc_init_array+0x44>)
 80046f8:	f000 fd34 	bl	8005164 <_init>
 80046fc:	1ba4      	subs	r4, r4, r6
 80046fe:	10a4      	asrs	r4, r4, #2
 8004700:	2500      	movs	r5, #0
 8004702:	42a5      	cmp	r5, r4
 8004704:	d105      	bne.n	8004712 <__libc_init_array+0x2e>
 8004706:	bd70      	pop	{r4, r5, r6, pc}
 8004708:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800470c:	4798      	blx	r3
 800470e:	3501      	adds	r5, #1
 8004710:	e7ee      	b.n	80046f0 <__libc_init_array+0xc>
 8004712:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8004716:	4798      	blx	r3
 8004718:	3501      	adds	r5, #1
 800471a:	e7f2      	b.n	8004702 <__libc_init_array+0x1e>
 800471c:	2000021c 	.word	0x2000021c
 8004720:	2000021c 	.word	0x2000021c
 8004724:	2000021c 	.word	0x2000021c
 8004728:	20000228 	.word	0x20000228

0800472c <malloc>:
 800472c:	4b02      	ldr	r3, [pc, #8]	; (8004738 <malloc+0xc>)
 800472e:	4601      	mov	r1, r0
 8004730:	6818      	ldr	r0, [r3, #0]
 8004732:	f7ff bc11 	b.w	8003f58 <__wrap__malloc_r>
 8004736:	bf00      	nop
 8004738:	200001b8 	.word	0x200001b8

0800473c <free>:
 800473c:	4b02      	ldr	r3, [pc, #8]	; (8004748 <free+0xc>)
 800473e:	4601      	mov	r1, r0
 8004740:	6818      	ldr	r0, [r3, #0]
 8004742:	f7ff bc0d 	b.w	8003f60 <__wrap__free_r>
 8004746:	bf00      	nop
 8004748:	200001b8 	.word	0x200001b8
 800474c:	00000000 	.word	0x00000000

08004750 <memchr>:
 8004750:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8004754:	2a10      	cmp	r2, #16
 8004756:	db2b      	blt.n	80047b0 <memchr+0x60>
 8004758:	f010 0f07 	tst.w	r0, #7
 800475c:	d008      	beq.n	8004770 <memchr+0x20>
 800475e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8004762:	3a01      	subs	r2, #1
 8004764:	428b      	cmp	r3, r1
 8004766:	d02d      	beq.n	80047c4 <memchr+0x74>
 8004768:	f010 0f07 	tst.w	r0, #7
 800476c:	b342      	cbz	r2, 80047c0 <memchr+0x70>
 800476e:	d1f6      	bne.n	800475e <memchr+0xe>
 8004770:	b4f0      	push	{r4, r5, r6, r7}
 8004772:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8004776:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800477a:	f022 0407 	bic.w	r4, r2, #7
 800477e:	f07f 0700 	mvns.w	r7, #0
 8004782:	2300      	movs	r3, #0
 8004784:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8004788:	3c08      	subs	r4, #8
 800478a:	ea85 0501 	eor.w	r5, r5, r1
 800478e:	ea86 0601 	eor.w	r6, r6, r1
 8004792:	fa85 f547 	uadd8	r5, r5, r7
 8004796:	faa3 f587 	sel	r5, r3, r7
 800479a:	fa86 f647 	uadd8	r6, r6, r7
 800479e:	faa5 f687 	sel	r6, r5, r7
 80047a2:	b98e      	cbnz	r6, 80047c8 <memchr+0x78>
 80047a4:	d1ee      	bne.n	8004784 <memchr+0x34>
 80047a6:	bcf0      	pop	{r4, r5, r6, r7}
 80047a8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80047ac:	f002 0207 	and.w	r2, r2, #7
 80047b0:	b132      	cbz	r2, 80047c0 <memchr+0x70>
 80047b2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80047b6:	3a01      	subs	r2, #1
 80047b8:	ea83 0301 	eor.w	r3, r3, r1
 80047bc:	b113      	cbz	r3, 80047c4 <memchr+0x74>
 80047be:	d1f8      	bne.n	80047b2 <memchr+0x62>
 80047c0:	2000      	movs	r0, #0
 80047c2:	4770      	bx	lr
 80047c4:	3801      	subs	r0, #1
 80047c6:	4770      	bx	lr
 80047c8:	2d00      	cmp	r5, #0
 80047ca:	bf06      	itte	eq
 80047cc:	4635      	moveq	r5, r6
 80047ce:	3803      	subeq	r0, #3
 80047d0:	3807      	subne	r0, #7
 80047d2:	f015 0f01 	tst.w	r5, #1
 80047d6:	d107      	bne.n	80047e8 <memchr+0x98>
 80047d8:	3001      	adds	r0, #1
 80047da:	f415 7f80 	tst.w	r5, #256	; 0x100
 80047de:	bf02      	ittt	eq
 80047e0:	3001      	addeq	r0, #1
 80047e2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80047e6:	3001      	addeq	r0, #1
 80047e8:	bcf0      	pop	{r4, r5, r6, r7}
 80047ea:	3801      	subs	r0, #1
 80047ec:	4770      	bx	lr
 80047ee:	bf00      	nop

080047f0 <memcpy>:
 80047f0:	b510      	push	{r4, lr}
 80047f2:	1e43      	subs	r3, r0, #1
 80047f4:	440a      	add	r2, r1
 80047f6:	4291      	cmp	r1, r2
 80047f8:	d100      	bne.n	80047fc <memcpy+0xc>
 80047fa:	bd10      	pop	{r4, pc}
 80047fc:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004800:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004804:	e7f7      	b.n	80047f6 <memcpy+0x6>

08004806 <memmove>:
 8004806:	4288      	cmp	r0, r1
 8004808:	b510      	push	{r4, lr}
 800480a:	eb01 0302 	add.w	r3, r1, r2
 800480e:	d803      	bhi.n	8004818 <memmove+0x12>
 8004810:	1e42      	subs	r2, r0, #1
 8004812:	4299      	cmp	r1, r3
 8004814:	d10c      	bne.n	8004830 <memmove+0x2a>
 8004816:	bd10      	pop	{r4, pc}
 8004818:	4298      	cmp	r0, r3
 800481a:	d2f9      	bcs.n	8004810 <memmove+0xa>
 800481c:	1881      	adds	r1, r0, r2
 800481e:	1ad2      	subs	r2, r2, r3
 8004820:	42d3      	cmn	r3, r2
 8004822:	d100      	bne.n	8004826 <memmove+0x20>
 8004824:	bd10      	pop	{r4, pc}
 8004826:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800482a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800482e:	e7f7      	b.n	8004820 <memmove+0x1a>
 8004830:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004834:	f802 4f01 	strb.w	r4, [r2, #1]!
 8004838:	e7eb      	b.n	8004812 <memmove+0xc>

0800483a <memset>:
 800483a:	4402      	add	r2, r0
 800483c:	4603      	mov	r3, r0
 800483e:	4293      	cmp	r3, r2
 8004840:	d100      	bne.n	8004844 <memset+0xa>
 8004842:	4770      	bx	lr
 8004844:	f803 1b01 	strb.w	r1, [r3], #1
 8004848:	e7f9      	b.n	800483e <memset+0x4>
	...

0800484c <_free_r>:
 800484c:	b538      	push	{r3, r4, r5, lr}
 800484e:	4605      	mov	r5, r0
 8004850:	2900      	cmp	r1, #0
 8004852:	d045      	beq.n	80048e0 <_free_r+0x94>
 8004854:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004858:	1f0c      	subs	r4, r1, #4
 800485a:	2b00      	cmp	r3, #0
 800485c:	bfb8      	it	lt
 800485e:	18e4      	addlt	r4, r4, r3
 8004860:	f7ff fc9f 	bl	80041a2 <__malloc_lock>
 8004864:	4a1f      	ldr	r2, [pc, #124]	; (80048e4 <_free_r+0x98>)
 8004866:	6813      	ldr	r3, [r2, #0]
 8004868:	4610      	mov	r0, r2
 800486a:	b933      	cbnz	r3, 800487a <_free_r+0x2e>
 800486c:	6063      	str	r3, [r4, #4]
 800486e:	6014      	str	r4, [r2, #0]
 8004870:	4628      	mov	r0, r5
 8004872:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004876:	f7ff bc98 	b.w	80041aa <__malloc_unlock>
 800487a:	42a3      	cmp	r3, r4
 800487c:	d90c      	bls.n	8004898 <_free_r+0x4c>
 800487e:	6821      	ldr	r1, [r4, #0]
 8004880:	1862      	adds	r2, r4, r1
 8004882:	4293      	cmp	r3, r2
 8004884:	bf04      	itt	eq
 8004886:	681a      	ldreq	r2, [r3, #0]
 8004888:	685b      	ldreq	r3, [r3, #4]
 800488a:	6063      	str	r3, [r4, #4]
 800488c:	bf04      	itt	eq
 800488e:	1852      	addeq	r2, r2, r1
 8004890:	6022      	streq	r2, [r4, #0]
 8004892:	6004      	str	r4, [r0, #0]
 8004894:	e7ec      	b.n	8004870 <_free_r+0x24>
 8004896:	4613      	mov	r3, r2
 8004898:	685a      	ldr	r2, [r3, #4]
 800489a:	b10a      	cbz	r2, 80048a0 <_free_r+0x54>
 800489c:	42a2      	cmp	r2, r4
 800489e:	d9fa      	bls.n	8004896 <_free_r+0x4a>
 80048a0:	6819      	ldr	r1, [r3, #0]
 80048a2:	1858      	adds	r0, r3, r1
 80048a4:	42a0      	cmp	r0, r4
 80048a6:	d10b      	bne.n	80048c0 <_free_r+0x74>
 80048a8:	6820      	ldr	r0, [r4, #0]
 80048aa:	4401      	add	r1, r0
 80048ac:	1858      	adds	r0, r3, r1
 80048ae:	4282      	cmp	r2, r0
 80048b0:	6019      	str	r1, [r3, #0]
 80048b2:	d1dd      	bne.n	8004870 <_free_r+0x24>
 80048b4:	6810      	ldr	r0, [r2, #0]
 80048b6:	6852      	ldr	r2, [r2, #4]
 80048b8:	605a      	str	r2, [r3, #4]
 80048ba:	4401      	add	r1, r0
 80048bc:	6019      	str	r1, [r3, #0]
 80048be:	e7d7      	b.n	8004870 <_free_r+0x24>
 80048c0:	d902      	bls.n	80048c8 <_free_r+0x7c>
 80048c2:	230c      	movs	r3, #12
 80048c4:	602b      	str	r3, [r5, #0]
 80048c6:	e7d3      	b.n	8004870 <_free_r+0x24>
 80048c8:	6820      	ldr	r0, [r4, #0]
 80048ca:	1821      	adds	r1, r4, r0
 80048cc:	428a      	cmp	r2, r1
 80048ce:	bf04      	itt	eq
 80048d0:	6811      	ldreq	r1, [r2, #0]
 80048d2:	6852      	ldreq	r2, [r2, #4]
 80048d4:	6062      	str	r2, [r4, #4]
 80048d6:	bf04      	itt	eq
 80048d8:	1809      	addeq	r1, r1, r0
 80048da:	6021      	streq	r1, [r4, #0]
 80048dc:	605c      	str	r4, [r3, #4]
 80048de:	e7c7      	b.n	8004870 <_free_r+0x24>
 80048e0:	bd38      	pop	{r3, r4, r5, pc}
 80048e2:	bf00      	nop
 80048e4:	20001ccc 	.word	0x20001ccc

080048e8 <_malloc_r>:
 80048e8:	b570      	push	{r4, r5, r6, lr}
 80048ea:	1ccd      	adds	r5, r1, #3
 80048ec:	f025 0503 	bic.w	r5, r5, #3
 80048f0:	3508      	adds	r5, #8
 80048f2:	2d0c      	cmp	r5, #12
 80048f4:	bf38      	it	cc
 80048f6:	250c      	movcc	r5, #12
 80048f8:	2d00      	cmp	r5, #0
 80048fa:	4606      	mov	r6, r0
 80048fc:	db01      	blt.n	8004902 <_malloc_r+0x1a>
 80048fe:	42a9      	cmp	r1, r5
 8004900:	d903      	bls.n	800490a <_malloc_r+0x22>
 8004902:	230c      	movs	r3, #12
 8004904:	6033      	str	r3, [r6, #0]
 8004906:	2000      	movs	r0, #0
 8004908:	bd70      	pop	{r4, r5, r6, pc}
 800490a:	f7ff fc4a 	bl	80041a2 <__malloc_lock>
 800490e:	4a23      	ldr	r2, [pc, #140]	; (800499c <_malloc_r+0xb4>)
 8004910:	6814      	ldr	r4, [r2, #0]
 8004912:	4621      	mov	r1, r4
 8004914:	b991      	cbnz	r1, 800493c <_malloc_r+0x54>
 8004916:	4c22      	ldr	r4, [pc, #136]	; (80049a0 <_malloc_r+0xb8>)
 8004918:	6823      	ldr	r3, [r4, #0]
 800491a:	b91b      	cbnz	r3, 8004924 <_malloc_r+0x3c>
 800491c:	4630      	mov	r0, r6
 800491e:	f000 fa05 	bl	8004d2c <_sbrk_r>
 8004922:	6020      	str	r0, [r4, #0]
 8004924:	4629      	mov	r1, r5
 8004926:	4630      	mov	r0, r6
 8004928:	f000 fa00 	bl	8004d2c <_sbrk_r>
 800492c:	1c43      	adds	r3, r0, #1
 800492e:	d126      	bne.n	800497e <_malloc_r+0x96>
 8004930:	230c      	movs	r3, #12
 8004932:	6033      	str	r3, [r6, #0]
 8004934:	4630      	mov	r0, r6
 8004936:	f7ff fc38 	bl	80041aa <__malloc_unlock>
 800493a:	e7e4      	b.n	8004906 <_malloc_r+0x1e>
 800493c:	680b      	ldr	r3, [r1, #0]
 800493e:	1b5b      	subs	r3, r3, r5
 8004940:	d41a      	bmi.n	8004978 <_malloc_r+0x90>
 8004942:	2b0b      	cmp	r3, #11
 8004944:	d90f      	bls.n	8004966 <_malloc_r+0x7e>
 8004946:	600b      	str	r3, [r1, #0]
 8004948:	50cd      	str	r5, [r1, r3]
 800494a:	18cc      	adds	r4, r1, r3
 800494c:	4630      	mov	r0, r6
 800494e:	f7ff fc2c 	bl	80041aa <__malloc_unlock>
 8004952:	f104 000b 	add.w	r0, r4, #11
 8004956:	1d23      	adds	r3, r4, #4
 8004958:	f020 0007 	bic.w	r0, r0, #7
 800495c:	1ac3      	subs	r3, r0, r3
 800495e:	d01b      	beq.n	8004998 <_malloc_r+0xb0>
 8004960:	425a      	negs	r2, r3
 8004962:	50e2      	str	r2, [r4, r3]
 8004964:	bd70      	pop	{r4, r5, r6, pc}
 8004966:	428c      	cmp	r4, r1
 8004968:	bf0d      	iteet	eq
 800496a:	6863      	ldreq	r3, [r4, #4]
 800496c:	684b      	ldrne	r3, [r1, #4]
 800496e:	6063      	strne	r3, [r4, #4]
 8004970:	6013      	streq	r3, [r2, #0]
 8004972:	bf18      	it	ne
 8004974:	460c      	movne	r4, r1
 8004976:	e7e9      	b.n	800494c <_malloc_r+0x64>
 8004978:	460c      	mov	r4, r1
 800497a:	6849      	ldr	r1, [r1, #4]
 800497c:	e7ca      	b.n	8004914 <_malloc_r+0x2c>
 800497e:	1cc4      	adds	r4, r0, #3
 8004980:	f024 0403 	bic.w	r4, r4, #3
 8004984:	42a0      	cmp	r0, r4
 8004986:	d005      	beq.n	8004994 <_malloc_r+0xac>
 8004988:	1a21      	subs	r1, r4, r0
 800498a:	4630      	mov	r0, r6
 800498c:	f000 f9ce 	bl	8004d2c <_sbrk_r>
 8004990:	3001      	adds	r0, #1
 8004992:	d0cd      	beq.n	8004930 <_malloc_r+0x48>
 8004994:	6025      	str	r5, [r4, #0]
 8004996:	e7d9      	b.n	800494c <_malloc_r+0x64>
 8004998:	bd70      	pop	{r4, r5, r6, pc}
 800499a:	bf00      	nop
 800499c:	20001ccc 	.word	0x20001ccc
 80049a0:	20001cd0 	.word	0x20001cd0

080049a4 <_realloc_r>:
 80049a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049a6:	4607      	mov	r7, r0
 80049a8:	4614      	mov	r4, r2
 80049aa:	460e      	mov	r6, r1
 80049ac:	b921      	cbnz	r1, 80049b8 <_realloc_r+0x14>
 80049ae:	4611      	mov	r1, r2
 80049b0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80049b4:	f7ff bad0 	b.w	8003f58 <__wrap__malloc_r>
 80049b8:	b922      	cbnz	r2, 80049c4 <_realloc_r+0x20>
 80049ba:	f7ff fad1 	bl	8003f60 <__wrap__free_r>
 80049be:	4625      	mov	r5, r4
 80049c0:	4628      	mov	r0, r5
 80049c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80049c4:	f000 fa64 	bl	8004e90 <_malloc_usable_size_r>
 80049c8:	4284      	cmp	r4, r0
 80049ca:	d90f      	bls.n	80049ec <_realloc_r+0x48>
 80049cc:	4621      	mov	r1, r4
 80049ce:	4638      	mov	r0, r7
 80049d0:	f7ff fac2 	bl	8003f58 <__wrap__malloc_r>
 80049d4:	4605      	mov	r5, r0
 80049d6:	2800      	cmp	r0, #0
 80049d8:	d0f2      	beq.n	80049c0 <_realloc_r+0x1c>
 80049da:	4631      	mov	r1, r6
 80049dc:	4622      	mov	r2, r4
 80049de:	f7ff ff07 	bl	80047f0 <memcpy>
 80049e2:	4631      	mov	r1, r6
 80049e4:	4638      	mov	r0, r7
 80049e6:	f7ff fabb 	bl	8003f60 <__wrap__free_r>
 80049ea:	e7e9      	b.n	80049c0 <_realloc_r+0x1c>
 80049ec:	4635      	mov	r5, r6
 80049ee:	e7e7      	b.n	80049c0 <_realloc_r+0x1c>

080049f0 <_printf_common>:
 80049f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80049f4:	4691      	mov	r9, r2
 80049f6:	461f      	mov	r7, r3
 80049f8:	688a      	ldr	r2, [r1, #8]
 80049fa:	690b      	ldr	r3, [r1, #16]
 80049fc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004a00:	4293      	cmp	r3, r2
 8004a02:	bfb8      	it	lt
 8004a04:	4613      	movlt	r3, r2
 8004a06:	f8c9 3000 	str.w	r3, [r9]
 8004a0a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004a0e:	4606      	mov	r6, r0
 8004a10:	460c      	mov	r4, r1
 8004a12:	b112      	cbz	r2, 8004a1a <_printf_common+0x2a>
 8004a14:	3301      	adds	r3, #1
 8004a16:	f8c9 3000 	str.w	r3, [r9]
 8004a1a:	6823      	ldr	r3, [r4, #0]
 8004a1c:	0699      	lsls	r1, r3, #26
 8004a1e:	bf42      	ittt	mi
 8004a20:	f8d9 3000 	ldrmi.w	r3, [r9]
 8004a24:	3302      	addmi	r3, #2
 8004a26:	f8c9 3000 	strmi.w	r3, [r9]
 8004a2a:	6825      	ldr	r5, [r4, #0]
 8004a2c:	f015 0506 	ands.w	r5, r5, #6
 8004a30:	d107      	bne.n	8004a42 <_printf_common+0x52>
 8004a32:	f104 0a19 	add.w	r10, r4, #25
 8004a36:	68e3      	ldr	r3, [r4, #12]
 8004a38:	f8d9 2000 	ldr.w	r2, [r9]
 8004a3c:	1a9b      	subs	r3, r3, r2
 8004a3e:	429d      	cmp	r5, r3
 8004a40:	db29      	blt.n	8004a96 <_printf_common+0xa6>
 8004a42:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8004a46:	6822      	ldr	r2, [r4, #0]
 8004a48:	3300      	adds	r3, #0
 8004a4a:	bf18      	it	ne
 8004a4c:	2301      	movne	r3, #1
 8004a4e:	0692      	lsls	r2, r2, #26
 8004a50:	d42e      	bmi.n	8004ab0 <_printf_common+0xc0>
 8004a52:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004a56:	4639      	mov	r1, r7
 8004a58:	4630      	mov	r0, r6
 8004a5a:	47c0      	blx	r8
 8004a5c:	3001      	adds	r0, #1
 8004a5e:	d021      	beq.n	8004aa4 <_printf_common+0xb4>
 8004a60:	6823      	ldr	r3, [r4, #0]
 8004a62:	68e5      	ldr	r5, [r4, #12]
 8004a64:	f8d9 2000 	ldr.w	r2, [r9]
 8004a68:	f003 0306 	and.w	r3, r3, #6
 8004a6c:	2b04      	cmp	r3, #4
 8004a6e:	bf08      	it	eq
 8004a70:	1aad      	subeq	r5, r5, r2
 8004a72:	68a3      	ldr	r3, [r4, #8]
 8004a74:	6922      	ldr	r2, [r4, #16]
 8004a76:	bf0c      	ite	eq
 8004a78:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004a7c:	2500      	movne	r5, #0
 8004a7e:	4293      	cmp	r3, r2
 8004a80:	bfc4      	itt	gt
 8004a82:	1a9b      	subgt	r3, r3, r2
 8004a84:	18ed      	addgt	r5, r5, r3
 8004a86:	f04f 0900 	mov.w	r9, #0
 8004a8a:	341a      	adds	r4, #26
 8004a8c:	454d      	cmp	r5, r9
 8004a8e:	d11b      	bne.n	8004ac8 <_printf_common+0xd8>
 8004a90:	2000      	movs	r0, #0
 8004a92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8004a96:	2301      	movs	r3, #1
 8004a98:	4652      	mov	r2, r10
 8004a9a:	4639      	mov	r1, r7
 8004a9c:	4630      	mov	r0, r6
 8004a9e:	47c0      	blx	r8
 8004aa0:	3001      	adds	r0, #1
 8004aa2:	d103      	bne.n	8004aac <_printf_common+0xbc>
 8004aa4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004aa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8004aac:	3501      	adds	r5, #1
 8004aae:	e7c2      	b.n	8004a36 <_printf_common+0x46>
 8004ab0:	18e1      	adds	r1, r4, r3
 8004ab2:	1c5a      	adds	r2, r3, #1
 8004ab4:	2030      	movs	r0, #48	; 0x30
 8004ab6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004aba:	4422      	add	r2, r4
 8004abc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004ac0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004ac4:	3302      	adds	r3, #2
 8004ac6:	e7c4      	b.n	8004a52 <_printf_common+0x62>
 8004ac8:	2301      	movs	r3, #1
 8004aca:	4622      	mov	r2, r4
 8004acc:	4639      	mov	r1, r7
 8004ace:	4630      	mov	r0, r6
 8004ad0:	47c0      	blx	r8
 8004ad2:	3001      	adds	r0, #1
 8004ad4:	d0e6      	beq.n	8004aa4 <_printf_common+0xb4>
 8004ad6:	f109 0901 	add.w	r9, r9, #1
 8004ada:	e7d7      	b.n	8004a8c <_printf_common+0x9c>

08004adc <_printf_i>:
 8004adc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004ae0:	4617      	mov	r7, r2
 8004ae2:	7e0a      	ldrb	r2, [r1, #24]
 8004ae4:	b085      	sub	sp, #20
 8004ae6:	2a6e      	cmp	r2, #110	; 0x6e
 8004ae8:	4698      	mov	r8, r3
 8004aea:	4606      	mov	r6, r0
 8004aec:	460c      	mov	r4, r1
 8004aee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004af0:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8004af4:	f000 80bc 	beq.w	8004c70 <_printf_i+0x194>
 8004af8:	d81a      	bhi.n	8004b30 <_printf_i+0x54>
 8004afa:	2a63      	cmp	r2, #99	; 0x63
 8004afc:	d02e      	beq.n	8004b5c <_printf_i+0x80>
 8004afe:	d80a      	bhi.n	8004b16 <_printf_i+0x3a>
 8004b00:	2a00      	cmp	r2, #0
 8004b02:	f000 80c8 	beq.w	8004c96 <_printf_i+0x1ba>
 8004b06:	2a58      	cmp	r2, #88	; 0x58
 8004b08:	f000 808a 	beq.w	8004c20 <_printf_i+0x144>
 8004b0c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004b10:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8004b14:	e02a      	b.n	8004b6c <_printf_i+0x90>
 8004b16:	2a64      	cmp	r2, #100	; 0x64
 8004b18:	d001      	beq.n	8004b1e <_printf_i+0x42>
 8004b1a:	2a69      	cmp	r2, #105	; 0x69
 8004b1c:	d1f6      	bne.n	8004b0c <_printf_i+0x30>
 8004b1e:	6821      	ldr	r1, [r4, #0]
 8004b20:	681a      	ldr	r2, [r3, #0]
 8004b22:	f011 0f80 	tst.w	r1, #128	; 0x80
 8004b26:	d023      	beq.n	8004b70 <_printf_i+0x94>
 8004b28:	1d11      	adds	r1, r2, #4
 8004b2a:	6019      	str	r1, [r3, #0]
 8004b2c:	6813      	ldr	r3, [r2, #0]
 8004b2e:	e027      	b.n	8004b80 <_printf_i+0xa4>
 8004b30:	2a73      	cmp	r2, #115	; 0x73
 8004b32:	f000 80b4 	beq.w	8004c9e <_printf_i+0x1c2>
 8004b36:	d808      	bhi.n	8004b4a <_printf_i+0x6e>
 8004b38:	2a6f      	cmp	r2, #111	; 0x6f
 8004b3a:	d02a      	beq.n	8004b92 <_printf_i+0xb6>
 8004b3c:	2a70      	cmp	r2, #112	; 0x70
 8004b3e:	d1e5      	bne.n	8004b0c <_printf_i+0x30>
 8004b40:	680a      	ldr	r2, [r1, #0]
 8004b42:	f042 0220 	orr.w	r2, r2, #32
 8004b46:	600a      	str	r2, [r1, #0]
 8004b48:	e003      	b.n	8004b52 <_printf_i+0x76>
 8004b4a:	2a75      	cmp	r2, #117	; 0x75
 8004b4c:	d021      	beq.n	8004b92 <_printf_i+0xb6>
 8004b4e:	2a78      	cmp	r2, #120	; 0x78
 8004b50:	d1dc      	bne.n	8004b0c <_printf_i+0x30>
 8004b52:	2278      	movs	r2, #120	; 0x78
 8004b54:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8004b58:	496e      	ldr	r1, [pc, #440]	; (8004d14 <_printf_i+0x238>)
 8004b5a:	e064      	b.n	8004c26 <_printf_i+0x14a>
 8004b5c:	681a      	ldr	r2, [r3, #0]
 8004b5e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8004b62:	1d11      	adds	r1, r2, #4
 8004b64:	6019      	str	r1, [r3, #0]
 8004b66:	6813      	ldr	r3, [r2, #0]
 8004b68:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004b6c:	2301      	movs	r3, #1
 8004b6e:	e0a3      	b.n	8004cb8 <_printf_i+0x1dc>
 8004b70:	f011 0f40 	tst.w	r1, #64	; 0x40
 8004b74:	f102 0104 	add.w	r1, r2, #4
 8004b78:	6019      	str	r1, [r3, #0]
 8004b7a:	d0d7      	beq.n	8004b2c <_printf_i+0x50>
 8004b7c:	f9b2 3000 	ldrsh.w	r3, [r2]
 8004b80:	2b00      	cmp	r3, #0
 8004b82:	da03      	bge.n	8004b8c <_printf_i+0xb0>
 8004b84:	222d      	movs	r2, #45	; 0x2d
 8004b86:	425b      	negs	r3, r3
 8004b88:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8004b8c:	4962      	ldr	r1, [pc, #392]	; (8004d18 <_printf_i+0x23c>)
 8004b8e:	220a      	movs	r2, #10
 8004b90:	e017      	b.n	8004bc2 <_printf_i+0xe6>
 8004b92:	6820      	ldr	r0, [r4, #0]
 8004b94:	6819      	ldr	r1, [r3, #0]
 8004b96:	f010 0f80 	tst.w	r0, #128	; 0x80
 8004b9a:	d003      	beq.n	8004ba4 <_printf_i+0xc8>
 8004b9c:	1d08      	adds	r0, r1, #4
 8004b9e:	6018      	str	r0, [r3, #0]
 8004ba0:	680b      	ldr	r3, [r1, #0]
 8004ba2:	e006      	b.n	8004bb2 <_printf_i+0xd6>
 8004ba4:	f010 0f40 	tst.w	r0, #64	; 0x40
 8004ba8:	f101 0004 	add.w	r0, r1, #4
 8004bac:	6018      	str	r0, [r3, #0]
 8004bae:	d0f7      	beq.n	8004ba0 <_printf_i+0xc4>
 8004bb0:	880b      	ldrh	r3, [r1, #0]
 8004bb2:	4959      	ldr	r1, [pc, #356]	; (8004d18 <_printf_i+0x23c>)
 8004bb4:	2a6f      	cmp	r2, #111	; 0x6f
 8004bb6:	bf14      	ite	ne
 8004bb8:	220a      	movne	r2, #10
 8004bba:	2208      	moveq	r2, #8
 8004bbc:	2000      	movs	r0, #0
 8004bbe:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8004bc2:	6865      	ldr	r5, [r4, #4]
 8004bc4:	60a5      	str	r5, [r4, #8]
 8004bc6:	2d00      	cmp	r5, #0
 8004bc8:	f2c0 809c 	blt.w	8004d04 <_printf_i+0x228>
 8004bcc:	6820      	ldr	r0, [r4, #0]
 8004bce:	f020 0004 	bic.w	r0, r0, #4
 8004bd2:	6020      	str	r0, [r4, #0]
 8004bd4:	2b00      	cmp	r3, #0
 8004bd6:	d13f      	bne.n	8004c58 <_printf_i+0x17c>
 8004bd8:	2d00      	cmp	r5, #0
 8004bda:	f040 8095 	bne.w	8004d08 <_printf_i+0x22c>
 8004bde:	4675      	mov	r5, lr
 8004be0:	2a08      	cmp	r2, #8
 8004be2:	d10b      	bne.n	8004bfc <_printf_i+0x120>
 8004be4:	6823      	ldr	r3, [r4, #0]
 8004be6:	07da      	lsls	r2, r3, #31
 8004be8:	d508      	bpl.n	8004bfc <_printf_i+0x120>
 8004bea:	6923      	ldr	r3, [r4, #16]
 8004bec:	6862      	ldr	r2, [r4, #4]
 8004bee:	429a      	cmp	r2, r3
 8004bf0:	bfde      	ittt	le
 8004bf2:	2330      	movle	r3, #48	; 0x30
 8004bf4:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004bf8:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8004bfc:	ebae 0305 	sub.w	r3, lr, r5
 8004c00:	6123      	str	r3, [r4, #16]
 8004c02:	f8cd 8000 	str.w	r8, [sp]
 8004c06:	463b      	mov	r3, r7
 8004c08:	aa03      	add	r2, sp, #12
 8004c0a:	4621      	mov	r1, r4
 8004c0c:	4630      	mov	r0, r6
 8004c0e:	f7ff feef 	bl	80049f0 <_printf_common>
 8004c12:	3001      	adds	r0, #1
 8004c14:	d155      	bne.n	8004cc2 <_printf_i+0x1e6>
 8004c16:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004c1a:	b005      	add	sp, #20
 8004c1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004c20:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8004c24:	493c      	ldr	r1, [pc, #240]	; (8004d18 <_printf_i+0x23c>)
 8004c26:	6822      	ldr	r2, [r4, #0]
 8004c28:	6818      	ldr	r0, [r3, #0]
 8004c2a:	f012 0f80 	tst.w	r2, #128	; 0x80
 8004c2e:	f100 0504 	add.w	r5, r0, #4
 8004c32:	601d      	str	r5, [r3, #0]
 8004c34:	d001      	beq.n	8004c3a <_printf_i+0x15e>
 8004c36:	6803      	ldr	r3, [r0, #0]
 8004c38:	e002      	b.n	8004c40 <_printf_i+0x164>
 8004c3a:	0655      	lsls	r5, r2, #25
 8004c3c:	d5fb      	bpl.n	8004c36 <_printf_i+0x15a>
 8004c3e:	8803      	ldrh	r3, [r0, #0]
 8004c40:	07d0      	lsls	r0, r2, #31
 8004c42:	bf44      	itt	mi
 8004c44:	f042 0220 	orrmi.w	r2, r2, #32
 8004c48:	6022      	strmi	r2, [r4, #0]
 8004c4a:	b91b      	cbnz	r3, 8004c54 <_printf_i+0x178>
 8004c4c:	6822      	ldr	r2, [r4, #0]
 8004c4e:	f022 0220 	bic.w	r2, r2, #32
 8004c52:	6022      	str	r2, [r4, #0]
 8004c54:	2210      	movs	r2, #16
 8004c56:	e7b1      	b.n	8004bbc <_printf_i+0xe0>
 8004c58:	4675      	mov	r5, lr
 8004c5a:	fbb3 f0f2 	udiv	r0, r3, r2
 8004c5e:	fb02 3310 	mls	r3, r2, r0, r3
 8004c62:	5ccb      	ldrb	r3, [r1, r3]
 8004c64:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8004c68:	4603      	mov	r3, r0
 8004c6a:	2800      	cmp	r0, #0
 8004c6c:	d1f5      	bne.n	8004c5a <_printf_i+0x17e>
 8004c6e:	e7b7      	b.n	8004be0 <_printf_i+0x104>
 8004c70:	6808      	ldr	r0, [r1, #0]
 8004c72:	681a      	ldr	r2, [r3, #0]
 8004c74:	6949      	ldr	r1, [r1, #20]
 8004c76:	f010 0f80 	tst.w	r0, #128	; 0x80
 8004c7a:	d004      	beq.n	8004c86 <_printf_i+0x1aa>
 8004c7c:	1d10      	adds	r0, r2, #4
 8004c7e:	6018      	str	r0, [r3, #0]
 8004c80:	6813      	ldr	r3, [r2, #0]
 8004c82:	6019      	str	r1, [r3, #0]
 8004c84:	e007      	b.n	8004c96 <_printf_i+0x1ba>
 8004c86:	f010 0f40 	tst.w	r0, #64	; 0x40
 8004c8a:	f102 0004 	add.w	r0, r2, #4
 8004c8e:	6018      	str	r0, [r3, #0]
 8004c90:	6813      	ldr	r3, [r2, #0]
 8004c92:	d0f6      	beq.n	8004c82 <_printf_i+0x1a6>
 8004c94:	8019      	strh	r1, [r3, #0]
 8004c96:	2300      	movs	r3, #0
 8004c98:	6123      	str	r3, [r4, #16]
 8004c9a:	4675      	mov	r5, lr
 8004c9c:	e7b1      	b.n	8004c02 <_printf_i+0x126>
 8004c9e:	681a      	ldr	r2, [r3, #0]
 8004ca0:	1d11      	adds	r1, r2, #4
 8004ca2:	6019      	str	r1, [r3, #0]
 8004ca4:	6815      	ldr	r5, [r2, #0]
 8004ca6:	6862      	ldr	r2, [r4, #4]
 8004ca8:	2100      	movs	r1, #0
 8004caa:	4628      	mov	r0, r5
 8004cac:	f7ff fd50 	bl	8004750 <memchr>
 8004cb0:	b108      	cbz	r0, 8004cb6 <_printf_i+0x1da>
 8004cb2:	1b40      	subs	r0, r0, r5
 8004cb4:	6060      	str	r0, [r4, #4]
 8004cb6:	6863      	ldr	r3, [r4, #4]
 8004cb8:	6123      	str	r3, [r4, #16]
 8004cba:	2300      	movs	r3, #0
 8004cbc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004cc0:	e79f      	b.n	8004c02 <_printf_i+0x126>
 8004cc2:	6923      	ldr	r3, [r4, #16]
 8004cc4:	462a      	mov	r2, r5
 8004cc6:	4639      	mov	r1, r7
 8004cc8:	4630      	mov	r0, r6
 8004cca:	47c0      	blx	r8
 8004ccc:	3001      	adds	r0, #1
 8004cce:	d0a2      	beq.n	8004c16 <_printf_i+0x13a>
 8004cd0:	6823      	ldr	r3, [r4, #0]
 8004cd2:	079b      	lsls	r3, r3, #30
 8004cd4:	d507      	bpl.n	8004ce6 <_printf_i+0x20a>
 8004cd6:	2500      	movs	r5, #0
 8004cd8:	f104 0919 	add.w	r9, r4, #25
 8004cdc:	68e3      	ldr	r3, [r4, #12]
 8004cde:	9a03      	ldr	r2, [sp, #12]
 8004ce0:	1a9b      	subs	r3, r3, r2
 8004ce2:	429d      	cmp	r5, r3
 8004ce4:	db05      	blt.n	8004cf2 <_printf_i+0x216>
 8004ce6:	68e0      	ldr	r0, [r4, #12]
 8004ce8:	9b03      	ldr	r3, [sp, #12]
 8004cea:	4298      	cmp	r0, r3
 8004cec:	bfb8      	it	lt
 8004cee:	4618      	movlt	r0, r3
 8004cf0:	e793      	b.n	8004c1a <_printf_i+0x13e>
 8004cf2:	2301      	movs	r3, #1
 8004cf4:	464a      	mov	r2, r9
 8004cf6:	4639      	mov	r1, r7
 8004cf8:	4630      	mov	r0, r6
 8004cfa:	47c0      	blx	r8
 8004cfc:	3001      	adds	r0, #1
 8004cfe:	d08a      	beq.n	8004c16 <_printf_i+0x13a>
 8004d00:	3501      	adds	r5, #1
 8004d02:	e7eb      	b.n	8004cdc <_printf_i+0x200>
 8004d04:	2b00      	cmp	r3, #0
 8004d06:	d1a7      	bne.n	8004c58 <_printf_i+0x17c>
 8004d08:	780b      	ldrb	r3, [r1, #0]
 8004d0a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004d0e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004d12:	e765      	b.n	8004be0 <_printf_i+0x104>
 8004d14:	080056f9 	.word	0x080056f9
 8004d18:	080056e8 	.word	0x080056e8

08004d1c <realloc>:
 8004d1c:	4b02      	ldr	r3, [pc, #8]	; (8004d28 <realloc+0xc>)
 8004d1e:	460a      	mov	r2, r1
 8004d20:	4601      	mov	r1, r0
 8004d22:	6818      	ldr	r0, [r3, #0]
 8004d24:	f7ff b91a 	b.w	8003f5c <__wrap__realloc_r>
 8004d28:	200001b8 	.word	0x200001b8

08004d2c <_sbrk_r>:
 8004d2c:	b538      	push	{r3, r4, r5, lr}
 8004d2e:	4c06      	ldr	r4, [pc, #24]	; (8004d48 <_sbrk_r+0x1c>)
 8004d30:	2300      	movs	r3, #0
 8004d32:	4605      	mov	r5, r0
 8004d34:	4608      	mov	r0, r1
 8004d36:	6023      	str	r3, [r4, #0]
 8004d38:	f7ff f9fa 	bl	8004130 <_sbrk>
 8004d3c:	1c43      	adds	r3, r0, #1
 8004d3e:	d102      	bne.n	8004d46 <_sbrk_r+0x1a>
 8004d40:	6823      	ldr	r3, [r4, #0]
 8004d42:	b103      	cbz	r3, 8004d46 <_sbrk_r+0x1a>
 8004d44:	602b      	str	r3, [r5, #0]
 8004d46:	bd38      	pop	{r3, r4, r5, pc}
 8004d48:	200027c4 	.word	0x200027c4

08004d4c <__sread>:
 8004d4c:	b510      	push	{r4, lr}
 8004d4e:	460c      	mov	r4, r1
 8004d50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004d54:	f000 f9f4 	bl	8005140 <_read_r>
 8004d58:	2800      	cmp	r0, #0
 8004d5a:	bfab      	itete	ge
 8004d5c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8004d5e:	89a3      	ldrhlt	r3, [r4, #12]
 8004d60:	181b      	addge	r3, r3, r0
 8004d62:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8004d66:	bfac      	ite	ge
 8004d68:	6563      	strge	r3, [r4, #84]	; 0x54
 8004d6a:	81a3      	strhlt	r3, [r4, #12]
 8004d6c:	bd10      	pop	{r4, pc}

08004d6e <__swrite>:
 8004d6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004d72:	461f      	mov	r7, r3
 8004d74:	898b      	ldrh	r3, [r1, #12]
 8004d76:	05db      	lsls	r3, r3, #23
 8004d78:	4605      	mov	r5, r0
 8004d7a:	460c      	mov	r4, r1
 8004d7c:	4616      	mov	r6, r2
 8004d7e:	d505      	bpl.n	8004d8c <__swrite+0x1e>
 8004d80:	2302      	movs	r3, #2
 8004d82:	2200      	movs	r2, #0
 8004d84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004d88:	f000 f870 	bl	8004e6c <_lseek_r>
 8004d8c:	89a3      	ldrh	r3, [r4, #12]
 8004d8e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004d92:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004d96:	81a3      	strh	r3, [r4, #12]
 8004d98:	4632      	mov	r2, r6
 8004d9a:	463b      	mov	r3, r7
 8004d9c:	4628      	mov	r0, r5
 8004d9e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004da2:	f000 b841 	b.w	8004e28 <_write_r>

08004da6 <__sseek>:
 8004da6:	b510      	push	{r4, lr}
 8004da8:	460c      	mov	r4, r1
 8004daa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004dae:	f000 f85d 	bl	8004e6c <_lseek_r>
 8004db2:	1c43      	adds	r3, r0, #1
 8004db4:	89a3      	ldrh	r3, [r4, #12]
 8004db6:	bf15      	itete	ne
 8004db8:	6560      	strne	r0, [r4, #84]	; 0x54
 8004dba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8004dbe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8004dc2:	81a3      	strheq	r3, [r4, #12]
 8004dc4:	bf18      	it	ne
 8004dc6:	81a3      	strhne	r3, [r4, #12]
 8004dc8:	bd10      	pop	{r4, pc}

08004dca <__sclose>:
 8004dca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004dce:	f000 b83d 	b.w	8004e4c <_close_r>

08004dd2 <strlen>:
 8004dd2:	4603      	mov	r3, r0
 8004dd4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004dd8:	2a00      	cmp	r2, #0
 8004dda:	d1fb      	bne.n	8004dd4 <strlen+0x2>
 8004ddc:	1a18      	subs	r0, r3, r0
 8004dde:	3801      	subs	r0, #1
 8004de0:	4770      	bx	lr

08004de2 <_vsiprintf_r>:
 8004de2:	b510      	push	{r4, lr}
 8004de4:	b09a      	sub	sp, #104	; 0x68
 8004de6:	f44f 7402 	mov.w	r4, #520	; 0x208
 8004dea:	9100      	str	r1, [sp, #0]
 8004dec:	9104      	str	r1, [sp, #16]
 8004dee:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004df2:	9102      	str	r1, [sp, #8]
 8004df4:	9105      	str	r1, [sp, #20]
 8004df6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004dfa:	f8ad 100e 	strh.w	r1, [sp, #14]
 8004dfe:	4669      	mov	r1, sp
 8004e00:	f8ad 400c 	strh.w	r4, [sp, #12]
 8004e04:	f000 f8a8 	bl	8004f58 <_svfiprintf_r>
 8004e08:	9b00      	ldr	r3, [sp, #0]
 8004e0a:	2200      	movs	r2, #0
 8004e0c:	701a      	strb	r2, [r3, #0]
 8004e0e:	b01a      	add	sp, #104	; 0x68
 8004e10:	bd10      	pop	{r4, pc}
	...

08004e14 <vsiprintf>:
 8004e14:	4613      	mov	r3, r2
 8004e16:	460a      	mov	r2, r1
 8004e18:	4601      	mov	r1, r0
 8004e1a:	4802      	ldr	r0, [pc, #8]	; (8004e24 <vsiprintf+0x10>)
 8004e1c:	6800      	ldr	r0, [r0, #0]
 8004e1e:	f7ff bfe0 	b.w	8004de2 <_vsiprintf_r>
 8004e22:	bf00      	nop
 8004e24:	200001b8 	.word	0x200001b8

08004e28 <_write_r>:
 8004e28:	b538      	push	{r3, r4, r5, lr}
 8004e2a:	4c07      	ldr	r4, [pc, #28]	; (8004e48 <_write_r+0x20>)
 8004e2c:	4605      	mov	r5, r0
 8004e2e:	4608      	mov	r0, r1
 8004e30:	4611      	mov	r1, r2
 8004e32:	2200      	movs	r2, #0
 8004e34:	6022      	str	r2, [r4, #0]
 8004e36:	461a      	mov	r2, r3
 8004e38:	f7ff f8e8 	bl	800400c <_write>
 8004e3c:	1c43      	adds	r3, r0, #1
 8004e3e:	d102      	bne.n	8004e46 <_write_r+0x1e>
 8004e40:	6823      	ldr	r3, [r4, #0]
 8004e42:	b103      	cbz	r3, 8004e46 <_write_r+0x1e>
 8004e44:	602b      	str	r3, [r5, #0]
 8004e46:	bd38      	pop	{r3, r4, r5, pc}
 8004e48:	200027c4 	.word	0x200027c4

08004e4c <_close_r>:
 8004e4c:	b538      	push	{r3, r4, r5, lr}
 8004e4e:	4c06      	ldr	r4, [pc, #24]	; (8004e68 <_close_r+0x1c>)
 8004e50:	2300      	movs	r3, #0
 8004e52:	4605      	mov	r5, r0
 8004e54:	4608      	mov	r0, r1
 8004e56:	6023      	str	r3, [r4, #0]
 8004e58:	f7ff f8b8 	bl	8003fcc <_close>
 8004e5c:	1c43      	adds	r3, r0, #1
 8004e5e:	d102      	bne.n	8004e66 <_close_r+0x1a>
 8004e60:	6823      	ldr	r3, [r4, #0]
 8004e62:	b103      	cbz	r3, 8004e66 <_close_r+0x1a>
 8004e64:	602b      	str	r3, [r5, #0]
 8004e66:	bd38      	pop	{r3, r4, r5, pc}
 8004e68:	200027c4 	.word	0x200027c4

08004e6c <_lseek_r>:
 8004e6c:	b538      	push	{r3, r4, r5, lr}
 8004e6e:	4c07      	ldr	r4, [pc, #28]	; (8004e8c <_lseek_r+0x20>)
 8004e70:	4605      	mov	r5, r0
 8004e72:	4608      	mov	r0, r1
 8004e74:	4611      	mov	r1, r2
 8004e76:	2200      	movs	r2, #0
 8004e78:	6022      	str	r2, [r4, #0]
 8004e7a:	461a      	mov	r2, r3
 8004e7c:	f7ff f92c 	bl	80040d8 <_lseek>
 8004e80:	1c43      	adds	r3, r0, #1
 8004e82:	d102      	bne.n	8004e8a <_lseek_r+0x1e>
 8004e84:	6823      	ldr	r3, [r4, #0]
 8004e86:	b103      	cbz	r3, 8004e8a <_lseek_r+0x1e>
 8004e88:	602b      	str	r3, [r5, #0]
 8004e8a:	bd38      	pop	{r3, r4, r5, pc}
 8004e8c:	200027c4 	.word	0x200027c4

08004e90 <_malloc_usable_size_r>:
 8004e90:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8004e94:	2800      	cmp	r0, #0
 8004e96:	f1a0 0004 	sub.w	r0, r0, #4
 8004e9a:	bfbc      	itt	lt
 8004e9c:	580b      	ldrlt	r3, [r1, r0]
 8004e9e:	18c0      	addlt	r0, r0, r3
 8004ea0:	4770      	bx	lr

08004ea2 <__ssputs_r>:
 8004ea2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8004ea6:	688e      	ldr	r6, [r1, #8]
 8004ea8:	429e      	cmp	r6, r3
 8004eaa:	4682      	mov	r10, r0
 8004eac:	460c      	mov	r4, r1
 8004eae:	4691      	mov	r9, r2
 8004eb0:	4698      	mov	r8, r3
 8004eb2:	d835      	bhi.n	8004f20 <__ssputs_r+0x7e>
 8004eb4:	898a      	ldrh	r2, [r1, #12]
 8004eb6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004eba:	d031      	beq.n	8004f20 <__ssputs_r+0x7e>
 8004ebc:	6825      	ldr	r5, [r4, #0]
 8004ebe:	6909      	ldr	r1, [r1, #16]
 8004ec0:	1a6f      	subs	r7, r5, r1
 8004ec2:	6965      	ldr	r5, [r4, #20]
 8004ec4:	2302      	movs	r3, #2
 8004ec6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004eca:	fb95 f5f3 	sdiv	r5, r5, r3
 8004ece:	f108 0301 	add.w	r3, r8, #1
 8004ed2:	443b      	add	r3, r7
 8004ed4:	429d      	cmp	r5, r3
 8004ed6:	bf38      	it	cc
 8004ed8:	461d      	movcc	r5, r3
 8004eda:	0553      	lsls	r3, r2, #21
 8004edc:	d531      	bpl.n	8004f42 <__ssputs_r+0xa0>
 8004ede:	4629      	mov	r1, r5
 8004ee0:	f7ff f83a 	bl	8003f58 <__wrap__malloc_r>
 8004ee4:	4606      	mov	r6, r0
 8004ee6:	b950      	cbnz	r0, 8004efe <__ssputs_r+0x5c>
 8004ee8:	230c      	movs	r3, #12
 8004eea:	f8ca 3000 	str.w	r3, [r10]
 8004eee:	89a3      	ldrh	r3, [r4, #12]
 8004ef0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004ef4:	81a3      	strh	r3, [r4, #12]
 8004ef6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004efa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8004efe:	463a      	mov	r2, r7
 8004f00:	6921      	ldr	r1, [r4, #16]
 8004f02:	f7ff fc75 	bl	80047f0 <memcpy>
 8004f06:	89a3      	ldrh	r3, [r4, #12]
 8004f08:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8004f0c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004f10:	81a3      	strh	r3, [r4, #12]
 8004f12:	6126      	str	r6, [r4, #16]
 8004f14:	6165      	str	r5, [r4, #20]
 8004f16:	443e      	add	r6, r7
 8004f18:	1bed      	subs	r5, r5, r7
 8004f1a:	6026      	str	r6, [r4, #0]
 8004f1c:	60a5      	str	r5, [r4, #8]
 8004f1e:	4646      	mov	r6, r8
 8004f20:	4546      	cmp	r6, r8
 8004f22:	bf28      	it	cs
 8004f24:	4646      	movcs	r6, r8
 8004f26:	4632      	mov	r2, r6
 8004f28:	4649      	mov	r1, r9
 8004f2a:	6820      	ldr	r0, [r4, #0]
 8004f2c:	f7ff fc6b 	bl	8004806 <memmove>
 8004f30:	68a3      	ldr	r3, [r4, #8]
 8004f32:	1b9b      	subs	r3, r3, r6
 8004f34:	60a3      	str	r3, [r4, #8]
 8004f36:	6823      	ldr	r3, [r4, #0]
 8004f38:	441e      	add	r6, r3
 8004f3a:	6026      	str	r6, [r4, #0]
 8004f3c:	2000      	movs	r0, #0
 8004f3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8004f42:	462a      	mov	r2, r5
 8004f44:	f7ff f80a 	bl	8003f5c <__wrap__realloc_r>
 8004f48:	4606      	mov	r6, r0
 8004f4a:	2800      	cmp	r0, #0
 8004f4c:	d1e1      	bne.n	8004f12 <__ssputs_r+0x70>
 8004f4e:	6921      	ldr	r1, [r4, #16]
 8004f50:	4650      	mov	r0, r10
 8004f52:	f7ff f805 	bl	8003f60 <__wrap__free_r>
 8004f56:	e7c7      	b.n	8004ee8 <__ssputs_r+0x46>

08004f58 <_svfiprintf_r>:
 8004f58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8004f5c:	b09d      	sub	sp, #116	; 0x74
 8004f5e:	4680      	mov	r8, r0
 8004f60:	9303      	str	r3, [sp, #12]
 8004f62:	898b      	ldrh	r3, [r1, #12]
 8004f64:	061c      	lsls	r4, r3, #24
 8004f66:	460d      	mov	r5, r1
 8004f68:	4616      	mov	r6, r2
 8004f6a:	d50f      	bpl.n	8004f8c <_svfiprintf_r+0x34>
 8004f6c:	690b      	ldr	r3, [r1, #16]
 8004f6e:	b96b      	cbnz	r3, 8004f8c <_svfiprintf_r+0x34>
 8004f70:	2140      	movs	r1, #64	; 0x40
 8004f72:	f7fe fff1 	bl	8003f58 <__wrap__malloc_r>
 8004f76:	6028      	str	r0, [r5, #0]
 8004f78:	6128      	str	r0, [r5, #16]
 8004f7a:	b928      	cbnz	r0, 8004f88 <_svfiprintf_r+0x30>
 8004f7c:	230c      	movs	r3, #12
 8004f7e:	f8c8 3000 	str.w	r3, [r8]
 8004f82:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004f86:	e0c5      	b.n	8005114 <_svfiprintf_r+0x1bc>
 8004f88:	2340      	movs	r3, #64	; 0x40
 8004f8a:	616b      	str	r3, [r5, #20]
 8004f8c:	2300      	movs	r3, #0
 8004f8e:	9309      	str	r3, [sp, #36]	; 0x24
 8004f90:	2320      	movs	r3, #32
 8004f92:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004f96:	2330      	movs	r3, #48	; 0x30
 8004f98:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004f9c:	f04f 0b01 	mov.w	r11, #1
 8004fa0:	4637      	mov	r7, r6
 8004fa2:	463c      	mov	r4, r7
 8004fa4:	f814 3b01 	ldrb.w	r3, [r4], #1
 8004fa8:	2b00      	cmp	r3, #0
 8004faa:	d13c      	bne.n	8005026 <_svfiprintf_r+0xce>
 8004fac:	ebb7 0a06 	subs.w	r10, r7, r6
 8004fb0:	d00b      	beq.n	8004fca <_svfiprintf_r+0x72>
 8004fb2:	4653      	mov	r3, r10
 8004fb4:	4632      	mov	r2, r6
 8004fb6:	4629      	mov	r1, r5
 8004fb8:	4640      	mov	r0, r8
 8004fba:	f7ff ff72 	bl	8004ea2 <__ssputs_r>
 8004fbe:	3001      	adds	r0, #1
 8004fc0:	f000 80a3 	beq.w	800510a <_svfiprintf_r+0x1b2>
 8004fc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004fc6:	4453      	add	r3, r10
 8004fc8:	9309      	str	r3, [sp, #36]	; 0x24
 8004fca:	783b      	ldrb	r3, [r7, #0]
 8004fcc:	2b00      	cmp	r3, #0
 8004fce:	f000 809c 	beq.w	800510a <_svfiprintf_r+0x1b2>
 8004fd2:	2300      	movs	r3, #0
 8004fd4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004fd8:	9304      	str	r3, [sp, #16]
 8004fda:	9307      	str	r3, [sp, #28]
 8004fdc:	9205      	str	r2, [sp, #20]
 8004fde:	9306      	str	r3, [sp, #24]
 8004fe0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004fe4:	931a      	str	r3, [sp, #104]	; 0x68
 8004fe6:	2205      	movs	r2, #5
 8004fe8:	7821      	ldrb	r1, [r4, #0]
 8004fea:	4850      	ldr	r0, [pc, #320]	; (800512c <_svfiprintf_r+0x1d4>)
 8004fec:	f7ff fbb0 	bl	8004750 <memchr>
 8004ff0:	1c67      	adds	r7, r4, #1
 8004ff2:	9b04      	ldr	r3, [sp, #16]
 8004ff4:	b9d8      	cbnz	r0, 800502e <_svfiprintf_r+0xd6>
 8004ff6:	06d9      	lsls	r1, r3, #27
 8004ff8:	bf44      	itt	mi
 8004ffa:	2220      	movmi	r2, #32
 8004ffc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005000:	071a      	lsls	r2, r3, #28
 8005002:	bf44      	itt	mi
 8005004:	222b      	movmi	r2, #43	; 0x2b
 8005006:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800500a:	7822      	ldrb	r2, [r4, #0]
 800500c:	2a2a      	cmp	r2, #42	; 0x2a
 800500e:	d016      	beq.n	800503e <_svfiprintf_r+0xe6>
 8005010:	9a07      	ldr	r2, [sp, #28]
 8005012:	2100      	movs	r1, #0
 8005014:	200a      	movs	r0, #10
 8005016:	4627      	mov	r7, r4
 8005018:	3401      	adds	r4, #1
 800501a:	783b      	ldrb	r3, [r7, #0]
 800501c:	3b30      	subs	r3, #48	; 0x30
 800501e:	2b09      	cmp	r3, #9
 8005020:	d951      	bls.n	80050c6 <_svfiprintf_r+0x16e>
 8005022:	b1c9      	cbz	r1, 8005058 <_svfiprintf_r+0x100>
 8005024:	e011      	b.n	800504a <_svfiprintf_r+0xf2>
 8005026:	2b25      	cmp	r3, #37	; 0x25
 8005028:	d0c0      	beq.n	8004fac <_svfiprintf_r+0x54>
 800502a:	4627      	mov	r7, r4
 800502c:	e7b9      	b.n	8004fa2 <_svfiprintf_r+0x4a>
 800502e:	4a3f      	ldr	r2, [pc, #252]	; (800512c <_svfiprintf_r+0x1d4>)
 8005030:	1a80      	subs	r0, r0, r2
 8005032:	fa0b f000 	lsl.w	r0, r11, r0
 8005036:	4318      	orrs	r0, r3
 8005038:	9004      	str	r0, [sp, #16]
 800503a:	463c      	mov	r4, r7
 800503c:	e7d3      	b.n	8004fe6 <_svfiprintf_r+0x8e>
 800503e:	9a03      	ldr	r2, [sp, #12]
 8005040:	1d11      	adds	r1, r2, #4
 8005042:	6812      	ldr	r2, [r2, #0]
 8005044:	9103      	str	r1, [sp, #12]
 8005046:	2a00      	cmp	r2, #0
 8005048:	db01      	blt.n	800504e <_svfiprintf_r+0xf6>
 800504a:	9207      	str	r2, [sp, #28]
 800504c:	e004      	b.n	8005058 <_svfiprintf_r+0x100>
 800504e:	4252      	negs	r2, r2
 8005050:	f043 0302 	orr.w	r3, r3, #2
 8005054:	9207      	str	r2, [sp, #28]
 8005056:	9304      	str	r3, [sp, #16]
 8005058:	783b      	ldrb	r3, [r7, #0]
 800505a:	2b2e      	cmp	r3, #46	; 0x2e
 800505c:	d10e      	bne.n	800507c <_svfiprintf_r+0x124>
 800505e:	787b      	ldrb	r3, [r7, #1]
 8005060:	2b2a      	cmp	r3, #42	; 0x2a
 8005062:	f107 0101 	add.w	r1, r7, #1
 8005066:	d132      	bne.n	80050ce <_svfiprintf_r+0x176>
 8005068:	9b03      	ldr	r3, [sp, #12]
 800506a:	1d1a      	adds	r2, r3, #4
 800506c:	681b      	ldr	r3, [r3, #0]
 800506e:	9203      	str	r2, [sp, #12]
 8005070:	2b00      	cmp	r3, #0
 8005072:	bfb8      	it	lt
 8005074:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8005078:	3702      	adds	r7, #2
 800507a:	9305      	str	r3, [sp, #20]
 800507c:	4c2c      	ldr	r4, [pc, #176]	; (8005130 <_svfiprintf_r+0x1d8>)
 800507e:	7839      	ldrb	r1, [r7, #0]
 8005080:	2203      	movs	r2, #3
 8005082:	4620      	mov	r0, r4
 8005084:	f7ff fb64 	bl	8004750 <memchr>
 8005088:	b138      	cbz	r0, 800509a <_svfiprintf_r+0x142>
 800508a:	2340      	movs	r3, #64	; 0x40
 800508c:	1b00      	subs	r0, r0, r4
 800508e:	fa03 f000 	lsl.w	r0, r3, r0
 8005092:	9b04      	ldr	r3, [sp, #16]
 8005094:	4303      	orrs	r3, r0
 8005096:	9304      	str	r3, [sp, #16]
 8005098:	3701      	adds	r7, #1
 800509a:	7839      	ldrb	r1, [r7, #0]
 800509c:	4825      	ldr	r0, [pc, #148]	; (8005134 <_svfiprintf_r+0x1dc>)
 800509e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80050a2:	2206      	movs	r2, #6
 80050a4:	1c7e      	adds	r6, r7, #1
 80050a6:	f7ff fb53 	bl	8004750 <memchr>
 80050aa:	2800      	cmp	r0, #0
 80050ac:	d035      	beq.n	800511a <_svfiprintf_r+0x1c2>
 80050ae:	4b22      	ldr	r3, [pc, #136]	; (8005138 <_svfiprintf_r+0x1e0>)
 80050b0:	b9fb      	cbnz	r3, 80050f2 <_svfiprintf_r+0x19a>
 80050b2:	9b03      	ldr	r3, [sp, #12]
 80050b4:	3307      	adds	r3, #7
 80050b6:	f023 0307 	bic.w	r3, r3, #7
 80050ba:	3308      	adds	r3, #8
 80050bc:	9303      	str	r3, [sp, #12]
 80050be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80050c0:	444b      	add	r3, r9
 80050c2:	9309      	str	r3, [sp, #36]	; 0x24
 80050c4:	e76c      	b.n	8004fa0 <_svfiprintf_r+0x48>
 80050c6:	fb00 3202 	mla	r2, r0, r2, r3
 80050ca:	2101      	movs	r1, #1
 80050cc:	e7a3      	b.n	8005016 <_svfiprintf_r+0xbe>
 80050ce:	2300      	movs	r3, #0
 80050d0:	9305      	str	r3, [sp, #20]
 80050d2:	4618      	mov	r0, r3
 80050d4:	240a      	movs	r4, #10
 80050d6:	460f      	mov	r7, r1
 80050d8:	3101      	adds	r1, #1
 80050da:	783a      	ldrb	r2, [r7, #0]
 80050dc:	3a30      	subs	r2, #48	; 0x30
 80050de:	2a09      	cmp	r2, #9
 80050e0:	d903      	bls.n	80050ea <_svfiprintf_r+0x192>
 80050e2:	2b00      	cmp	r3, #0
 80050e4:	d0ca      	beq.n	800507c <_svfiprintf_r+0x124>
 80050e6:	9005      	str	r0, [sp, #20]
 80050e8:	e7c8      	b.n	800507c <_svfiprintf_r+0x124>
 80050ea:	fb04 2000 	mla	r0, r4, r0, r2
 80050ee:	2301      	movs	r3, #1
 80050f0:	e7f1      	b.n	80050d6 <_svfiprintf_r+0x17e>
 80050f2:	ab03      	add	r3, sp, #12
 80050f4:	9300      	str	r3, [sp, #0]
 80050f6:	462a      	mov	r2, r5
 80050f8:	4b10      	ldr	r3, [pc, #64]	; (800513c <_svfiprintf_r+0x1e4>)
 80050fa:	a904      	add	r1, sp, #16
 80050fc:	4640      	mov	r0, r8
 80050fe:	f3af 8000 	nop.w
 8005102:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8005106:	4681      	mov	r9, r0
 8005108:	d1d9      	bne.n	80050be <_svfiprintf_r+0x166>
 800510a:	89ab      	ldrh	r3, [r5, #12]
 800510c:	065b      	lsls	r3, r3, #25
 800510e:	f53f af38 	bmi.w	8004f82 <_svfiprintf_r+0x2a>
 8005112:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005114:	b01d      	add	sp, #116	; 0x74
 8005116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800511a:	ab03      	add	r3, sp, #12
 800511c:	9300      	str	r3, [sp, #0]
 800511e:	462a      	mov	r2, r5
 8005120:	4b06      	ldr	r3, [pc, #24]	; (800513c <_svfiprintf_r+0x1e4>)
 8005122:	a904      	add	r1, sp, #16
 8005124:	4640      	mov	r0, r8
 8005126:	f7ff fcd9 	bl	8004adc <_printf_i>
 800512a:	e7ea      	b.n	8005102 <_svfiprintf_r+0x1aa>
 800512c:	0800570a 	.word	0x0800570a
 8005130:	08005710 	.word	0x08005710
 8005134:	08005714 	.word	0x08005714
 8005138:	00000000 	.word	0x00000000
 800513c:	08004ea3 	.word	0x08004ea3

08005140 <_read_r>:
 8005140:	b538      	push	{r3, r4, r5, lr}
 8005142:	4c07      	ldr	r4, [pc, #28]	; (8005160 <_read_r+0x20>)
 8005144:	4605      	mov	r5, r0
 8005146:	4608      	mov	r0, r1
 8005148:	4611      	mov	r1, r2
 800514a:	2200      	movs	r2, #0
 800514c:	6022      	str	r2, [r4, #0]
 800514e:	461a      	mov	r2, r3
 8005150:	f7fe ff92 	bl	8004078 <_read>
 8005154:	1c43      	adds	r3, r0, #1
 8005156:	d102      	bne.n	800515e <_read_r+0x1e>
 8005158:	6823      	ldr	r3, [r4, #0]
 800515a:	b103      	cbz	r3, 800515e <_read_r+0x1e>
 800515c:	602b      	str	r3, [r5, #0]
 800515e:	bd38      	pop	{r3, r4, r5, pc}
 8005160:	200027c4 	.word	0x200027c4

08005164 <_init>:
 8005164:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005166:	bf00      	nop
 8005168:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800516a:	bc08      	pop	{r3}
 800516c:	469e      	mov	lr, r3
 800516e:	4770      	bx	lr

08005170 <_fini>:
 8005170:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005172:	bf00      	nop
 8005174:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005176:	bc08      	pop	{r3}
 8005178:	469e      	mov	lr, r3
 800517a:	4770      	bx	lr

0800517c <vtable for std_msgs::Time>:
	...
 8005184:	0201 0800 0229 0800 0265 0800 026d 0800     ....)...e...m...

08005194 <vtable for rosserial_msgs::TopicInfo>:
	...
 800519c:	041f 0800 04f9 0800 0275 0800 027d 0800     ........u...}...

080051ac <vtable for rosserial_msgs::Log>:
	...
 80051b4:	03f3 0800 04c3 0800 0285 0800 028d 0800     ................

080051c4 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 80051cc:	0311 0800 05af 0800 0295 0800 029d 0800     ................

080051dc <vtable for std_msgs::Empty>:
	...
 80051e4:	02a5 0800 02a9 0800 02ad 0800 02b5 0800     ................

080051f4 <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 80051fc:	0bd9 0800 0961 0800 02d9 0800               ....a.......

08005208 <vtable for ros::Subscriber<std_msgs::Empty, void>>:
	...
 8005210:	02bd 0800 02c3 0800 02c9 0800 02d1 0800     ................
 8005220:	6f74 6767 656c 6c5f 6465 3900 3066 3965     toggle_led.9f0e9
 8005230:	6238 6164 3536 3839 3931 3638 6464 3566     8bda65981986ddf5
 8005240:	6133 6166 6137 3034 3465 0039 3131 6261     3afa7a40e49.11ab
 8005250:	3764 3133 3263 3935 3333 3632 6331 3664     d731c25933261cd6
 8005260:	3831 6233 3164 6432 3236 3539 7200 736f     183bd12d6295.ros
 8005270:	6573 6972 6c61 6d5f 6773 2f73 6f4c 0067     serial_msgs/Log.
 8005280:	6130 3564 6631 3838 6366 3434 3938 6632     0ad51f88fc44892f
 8005290:	6338 3031 3836 3034 3737 3436 3036 3530     8c10684077646005
 80052a0:	7200 736f 6573 6972 6c61 6d5f 6773 2f73     .rosserial_msgs/
 80052b0:	6f54 6970 4963 666e 006f                    TopicInfo.

080052ba <rosserial_msgs::REQUESTPARAM>:
 80052ba:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 80052ca:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 80052da:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 80052ea:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 80052fa:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 800530a:	6566 2e72 6300 3764 3631 6336 3437 3563     fer..cd7166c74c5
 800531a:	3235 3363 3131 6266 6363 6632 3565 3761     52c311fbcc2fe5a7
 800532a:	6362 3832 0039 7473 5f64 736d 7367 542f     bc289.std_msgs/T
 800533a:	6d69 0065 3464 6431 6338 3964 6638 3030     ime.d41d8cd98f00
 800534a:	3262 3430 3965 3038 3930 3839 6365 3866     b204e9800998ecf8
 800535a:	3234 6537 7300 6474 6d5f 6773 2f73 6d45     427e.std_msgs/Em
 800536a:	7470 0079 0000                              pty...

08005370 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8005370:	0d43 0800 0d35 0800 0d41 0800 682f 6d6f     C...5...A.../hom
 8005380:	2f65 6961 616c 2f62 6f72 2f73 696c 2f62     e/ailab/ros/lib/
 8005390:	6f72 5f73 696c 2f62 7542 6666 7265 6465     ros_lib/Buffered
 80053a0:	6553 6972 6c61 422f 6675 6566 6572 5364     Serial/BufferedS
 80053b0:	7265 6169 2e6c 7063 0070 7325 2520 2064     erial.cpp.%s %d 
 80053c0:	7562 6666 7265 6f20 6576 7772 6972 6574     buffer overwrite
 80053d0:	2820 616d 5f78 7562 5f66 6973 657a 203a      (max_buf_size: 
 80053e0:	6425 6520 6378 6565 6564 3a64 2520 2964     %d exceeded: %d)
 80053f0:	0d21 000a                                   !...

080053f4 <vtable for BufferedSerial>:
	...
 80053fc:	3c3b 0800 3c3b 0800 0e2d 0800 0e85 0800     ;<..;<..-.......
 800540c:	0cf5 0800 0d05 0800 0d09 0800 0fa5 0800     ................
 800541c:	0fbd 0800 1039 0800 0ffb 0800               ....9.......

08005428 <us_data>:
 8005428:	5430 0800 08a4 2000                         0T..... 

08005430 <us_interface>:
 8005430:	2aa1 0800 2ac5 0800 2afd 0800 2b15 0800     .*...*...*...+..
 8005440:	2ae1 0800 6970 6d6e 7061 6d20 7369 6d2d     .*..pinmap mis-m
 8005450:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
 8005460:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
 8005470:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
 8005480:	6e69 756f 0074 0000                         inout...

08005488 <mp_stk_size>:
 8005488:	0210 0000                                   ....

0800548c <mp_tcb_size>:
 800548c:	03cc                                        ..

0800548e <mp_tmr_size>:
	...

08005490 <os_clockrate>:
 8005490:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 80054a0:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 80054b0:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

080054bd <os_fifo_size>:
 80054bd:	0110                                             .

080054be <os_flags>:
 80054be:	0001                                        ..

080054c0 <os_maxtaskrun>:
 80054c0:	000f 0000                                   ....

080054c4 <os_messageQ_def_osTimerMessageQ>:
 80054c4:	0004 0000 08c8 2000                         ....... 

080054cc <os_mutex_def_env_mutex>:
 80054cc:	08e8 2000                                   ... 

080054d0 <os_mutex_def_malloc_mutex>:
 80054d0:	08f8 2000                                   ... 

080054d4 <os_mutex_def_singleton_mutex>:
 80054d4:	0908 2000                                   ... 

080054d8 <os_rrobin>:
 80054d8:	0005 0001                                   ....

080054dc <os_stackinfo>:
 80054dc:	0200 0100                                   ....

080054e0 <os_thread_def_osTimerThread>:
 80054e0:	2141 0800 0002 0000 0001 0000 0320 0000     A!.......... ...
 80054f0:	1fb0 2000                                   ... 

080054f4 <os_trv>:
 80054f4:	481f 0001                                   .H..

080054f8 <os_mutex_def_osThreadMutex>:
 80054f8:	191c 2000 6950 6d6e 7061 6520 7272 726f     ... Pinmap error
 8005508:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 8005518:	6562 2e72 0000 0000                         ber.....

08005520 <ll_pin_defines>:
 8005520:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 8005530:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8005540:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8005550:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 8005560:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 8005570:	2065 4155 5452 000a                         e UART..

08005578 <PinMap_UART_RX>:
 8005578:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 8005588:	1000 4001 0712 0000 000c 0000 1400 4001     ...@...........@
 8005598:	0812 0000 0017 0000 1000 4001 0712 0000     ...........@....
 80055a8:	0027 0000 1400 4001 0812 0000 ffff 0000     '......@........
 80055b8:	ffff ffff 0000 0000                         ........

080055c0 <PinMap_UART_TX>:
 80055c0:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 80055d0:	1000 4001 0712 0000 000b 0000 1400 4001     ...@...........@
 80055e0:	0812 0000 0016 0000 1000 4001 0712 0000     ...........@....
 80055f0:	0026 0000 1400 4001 0812 0000 ffff 0000     &......@........
 8005600:	ffff ffff 0000 0000                         ........

08005608 <AHBPrescTable>:
	...
 8005610:	0201 0403 0706 0908                         ........

08005618 <APBAHBPrescTable>:
 8005618:	0000 0000 0201 0403 0201 0403 0706 0908     ................

08005628 <vtable for mbed::RawSerial>:
	...
 8005630:	3c3b 0800 3c3b 0800 3c51 0800 3c65 0800     ;<..;<..Q<..e<..

08005640 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8005640:	3c77 0800 3c7b 0800 3c83 0800               w<..{<...<..

0800564c <vtable for mbed::SerialBase>:
	...
 8005654:	3d4b 0800 3d4d 0800 0de1 0800 0e19 0800     K=..M=..........
 8005664:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 8005674:	7475 6f20 2066 656d 6f6d 7972 0a0d 0000     ut of memory....

08005684 <__sf_fake_stderr>:
	...

080056a4 <__sf_fake_stdin>:
	...

080056c4 <__sf_fake_stdout>:
	...

080056e4 <_global_impure_ptr>:
 80056e4:	01bc 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 80056f4:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 8005704:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 8005714:	6665 4567 4746 0000                         efgEFG..

0800571c <__EH_FRAME_BEGIN__>:
 800571c:	0000 0000                                   ....
